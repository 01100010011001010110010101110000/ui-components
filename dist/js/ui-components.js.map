{"version":3,"sources":["webpack:///js/ui-components.js","webpack:///webpack/bootstrap 09b7d93a612dd8590b80","webpack:///external \"_\"","webpack:///external \"angular\"","webpack:///./src/dialog-editor/components/modal-field-template/index.ts","webpack:///./src/dialog-editor/components/modal-field-template/modalFieldTemplateComponent.ts","webpack:///./src/gtl/interfaces/abstractDataViewClass.ts","webpack:///./src/styles/ui-components.scss","webpack:///./src/common/index.ts","webpack:///./src/dialog-editor/index.ts","webpack:///./src/gtl/index.ts","webpack:///./src/index.ts","webpack:///./src/site-switcher/index.ts","webpack:///./src/toolbar/index.ts","webpack:///./src/dialog-editor/components/box/box.html","webpack:///./src/dialog-editor/components/field/field.html","webpack:///./src/dialog-editor/components/modal-field-template/check-box.html","webpack:///./src/dialog-editor/components/modal-field-template/date-time-control.html","webpack:///./src/dialog-editor/components/modal-field-template/dynamic.html","webpack:///./src/dialog-editor/components/modal-field-template/radio-button-drop-down-list.html","webpack:///./src/dialog-editor/components/modal-field-template/tag-control.html","webpack:///./src/dialog-editor/components/modal-field-template/text-area-box.html","webpack:///./src/dialog-editor/components/modal-field-template/text-box.html","webpack:///./src/dialog-editor/components/tab-list/tab-list.html","webpack:///./src/dialog-editor/components/toolbox/toolbox.html","webpack:///./src/dialog-editor/services/modal/modal.html","webpack:///./src/gtl/components/data-table/data-table.html","webpack:///./src/gtl/components/tile-view/paging.html","webpack:///./src/gtl/components/tile-view/tile-view.html","webpack:///./src/site-switcher/site-switcher.html","webpack:///./src/toolbar/components/toolbar-menu/toolbar-button.html","webpack:///./src/toolbar/components/toolbar-menu/toolbar-list.html","webpack:///./src/toolbar/components/toolbar-menu/toolbar-menu.html","webpack:///./src/toolbar/components/toolbar-menu/toolbar-view.html","webpack:///./src/common/components/index.ts","webpack:///./src/common/components/sortItemsComponent.ts","webpack:///./src/common/services/endpointsService.ts","webpack:///./src/common/services/index.ts","webpack:///./src/common/services/translateService.ts","webpack:///./src/dialog-editor/components/box/boxComponent.ts","webpack:///./src/dialog-editor/components/box/index.ts","webpack:///./src/dialog-editor/components/field/fieldComponent.ts","webpack:///./src/dialog-editor/components/field/index.ts","webpack:///./src/dialog-editor/components/index.ts","webpack:///./src/dialog-editor/components/tab-list/index.ts","webpack:///./src/dialog-editor/components/tab-list/tabListComponent.ts","webpack:///./src/dialog-editor/components/toolbox/index.ts","webpack:///./src/dialog-editor/components/toolbox/toolboxComponent.ts","webpack:///./src/dialog-editor/services/dialogEditorService.ts","webpack:///./src/dialog-editor/services/index.ts","webpack:///./src/dialog-editor/services/modal/modalService.ts","webpack:///./src/gtl/components/data-table/dataTableComponent.ts","webpack:///./src/gtl/components/index.ts","webpack:///./src/gtl/components/tile-view/index.ts","webpack:///./src/gtl/components/tile-view/pagingComponent.ts","webpack:///./src/gtl/components/tile-view/tileViewComponent.ts","webpack:///./src/gtl/filters/index.ts","webpack:///./src/gtl/filters/limitToSuffixFilter.ts","webpack:///./src/gtl/interfaces/tileType.ts","webpack:///./src/gtl/services/dataTableService.ts","webpack:///./src/gtl/services/index.ts","webpack:///./src/site-switcher/siteSwitcherComponent.ts","webpack:///./src/toolbar/components/index.ts","webpack:///./src/toolbar/components/toolbar-menu/index.ts","webpack:///./src/toolbar/components/toolbar-menu/toolbarButtonDirective.ts","webpack:///./src/toolbar/components/toolbar-menu/toolbarComponent.ts","webpack:///./src/toolbar/components/toolbar-menu/toolbarListComponent.ts","webpack:///./src/toolbar/components/toolbar-menu/toolbarViewComponent.ts","webpack:///./src/toolbar/services/index.ts","webpack:///./src/toolbar/services/toolbarSettingsService.ts","webpack:///./src/dialog-editor/components/modal-field-template ^\\.\\/.*$"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_","angular","modalFieldTemplateComponent_1","default","component","ModalFieldTemplate","ModalFieldController","this","template","$element","$attrs","$inject","scope","controllerAs","bindings","modalData","categories","addEntry","removeEntry","currentCategoryEntries","resolveCategories","DataViewClass","MiQTranslateService","currentPageView","onCheckAll","isChecked","_this","each","rows","oneRow","onItemSelected","item","isSelected","onSortClick","sortId","isAscending","onSort","headerId","perPageClick","maxPage","Math","ceil","settings","items","start","calculateStartIndex","loadMoreItems","perPage","setPage","pageNumber","total","perpage","translateOf","end","translateTotalOf","onItemButtonClick","Function","onclick","setPagingNumbers","startIndex","current","endIndex","ToolbarType","BUTTON","BUTTON_TWO_STATE","BUTTON_SELECT","CUSTOM","SEPARATOR","common","services_1","components_1","app","config","$windowProvider","windowService","$get","__","translateString","dialogEditor","gtl","filters_1","miqStaticAssets","siteSwitcher","siteSwitcherComponent_1","toolbar","sortItemsComponent_1","SortItemsController","$timeout","initOptions","$onChanges","changesObj","headers","fillFields","sortObject","setSortItem","dropDownClass","applyClass","$postLink","text","options","currentField","colId","findIndex","id","toLowerCase","title","fields","onSortChange","oneCol","key","push","Array","isArray","_a","find","addClass","apply","SortItems","replace","controller","DefaultEndpoints","listDataTable","deleteItemDataTable","validateItem","createItem","providerSettings","toolbarSettings","EndpointsService","rootPoint","endpoints","endpointsService_1","translateService_1","service","TranslateService","$window","stringToTranslate","ng","BoxController","DialogEditor","DialogEditorModal","$onInit","dialogTabs","getDialogTabs","sortableOptionsBox","axis","cancel","cursor","opacity","revert","stop","e","ui","sortedBox","$parent","tab","dialog_groups","updatePositions","sortableOptionsFields","sortedField","box","dialog_fields","addBox","activeTab","description","label","display","position","removeBox","remove","droppableOptions","droppedItem","element","target","editDialogModal","showModal","Box","boxComponent_1","FieldController","field","Field","fieldData","boxPosition","fieldComponent_1","tab_list_1","box_1","field_1","toolbox_1","modal_field_template_1","tabListComponent_1","TabListController","tabList","length","active","sortableOptions","helper","sortedTab","vm","addTab","forEach","nextIndex","removeTab","activeTabData","isDefined","selectTab","TabList","toolboxComponent_1","DialogField","type","icon","placeholders","assign","display_method_options","read_only","required","required_method_options","default_value","values_method_options","dynamic","show_refresh_button","load_values_on_init","auto_refresh","trigger_auto_refresh","reconfigurable","visible","protected","resource_action","resource_type","ae_attributes","ToolboxController","dialogFieldTextBox","dialogFieldTextAreaBox","dialogFieldCheckBox","dialogFieldDropDownList","data_type","values","sort_by","sort_order","dialogFieldRadioButton","dialogFieldDateControl","dialogFieldDateTimeControl","dialogFieldTagControl","force_single_value","Toolbox","DialogEditorService","data","setData","getDialogId","content","getDialogLabel","getDialogDescription","dialog_tabs","elements","dialogEditorService_1","modalService_1","ModalController","dialogDetails","$uibModalInstance","API","modalTab","extend","dialog","saveDialogFieldDetails","deleteField","modalUnchanged","modalTabSet","modalTabIsSet","isUndefined","fieldId","boxId","tabId","cloneDeep","then","isMatch","close","entry","pull","resources","Number","category_id","ModalService","$uibModal","modalOptions","size","resolve","open","result","catch","__extends","extendStatics","setPrototypeOf","__proto__","b","constructor","create","abstractDataViewClass_1","DataTableController","_super","arguments","setTablePage","isNaN","getColumnClass","column","narrow","is_narrow","table-view-pf-select","isIconOrImage","row","columnKey","cells","isFilteredBy","sortBy","col_idx","getSortClass","fa-sort-asc","fa-sort-desc","labelItems","map","oneItem","DataTable","transclude","columns","onRowClick","dataTableComponent_1","data_table_1","tile_view_1","tileViewComponent_1","pagingComponent_1","PagingController","MAX_PAGES","updatePages","currentPage_1","pages","times","Paging","onChangePage","tileType_1","TileViewController","$sce","selectionMatchProp","selectItems","multiSelect","showSelectBox","selectedItems","filterSelected","onClick","event","onTileClick","onCheckBoxChange","onTileSelect","onItemClick","$event","onButtonItemClick","fetchTileName","trustAsHtmlQuadicon","trustAsHtml","quadicon","nameIndex","oneColumn","indexOf","hideSelect","selected","onCheckAllTiles","filter","checked","tileClass","miq-small-tile","TileType","SMALL","miq-tile-with-body","BIG","TileView","limitToSuffixFilter_1","LimitToSuffix","slice","DataTableService","$http","MiQEndpointsService","retrieveRowsAndColumnsFromUrl","modelName","activeTree","currId","isExplorer","records","fetchData","generateConfig","responseData","head","cols","messages","params","generateModelConfig","generateActiveTreeConfig","generateModuleIdConfig","generateExplorerConfig","generateParamsFromSettings","generateRecords","model","active_tree","model_id","explorer","page","ppsetting","sort_choice","is_ascending","records[]","dataTableService_1","SiteSwitcherController","SiteSwitcher","sites","toolbar_menu_1","toolbarComponent_1","toolbarButtonDirective_1","toolbarListComponent_1","toolbarViewComponent_1","directive","Factory","ToolbarButton","toolbarButton","toolbarType_1","ToolbarController","$location","path","actionUrl","location","redirectUrl","actionFunction","eventFunction","hasContent","toolbarItem","isButtonOrSelect","isCustom","escapedString","htmlDecode","getToolbarListType","getButtonType","getCustomType","getButtonTwoState","input","document","createElement","innerHTML","childNodes","nodeValue","isButtonSelect","isButton","isButtonTwoState","Toolbar","toolbarViews","toolbarItems","onViewClick","ToolbarListController","isEmpty","toolbarList","isToolbarEmpty","hidden","ToolbarList","ToolbarViewController","ToolbarView","toolbarSettingsService_1","ToolbarSettingsService","countSelected","checkboxClicked","isClicked","updateByCount","setCount","count","chain","flatten","enableToolbarItemByCountSelected","generateToolbarObject","toolbarObject","separateItems","dataViews","filterViews","getSettings","getData","httpGet","separatedArray","arrayIndex","url","dataObject","dataResponse","onwhen","enabled","parseNumberFromWhen","parseInt","onWhen","webpackContext","req","webpackContextResolve","Error","./check-box.html","./date-time-control.html","./dynamic.html","./index","./index.ts","./modalFieldTemplateComponent","./modalFieldTemplateComponent.ts","./radio-button-drop-down-list.html","./tag-control.html","./text-area-box.html","./text-box.html","keys"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,IAGA1B,IAAA2B,EAAA,MDMM,SAAUvB,EAAQD,GEtExBC,EAAAD,QAAAyB,GF4EM,SAAUxB,EAAQD,GG5ExBC,EAAAD,QAAA0B,SHkFM,SAAUzB,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GItFtD,IAAAoB,GAAA9B,EAAA,EAEAG,GAAA4B,QAAe,SAAC3B,GACdA,EAAO4B,UAAU,iCAAkC,GAAIF,GAAAC,WJ4FnD,SAAU3B,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GK5FtD,IAiBAuB,IAjBA,mBAAAC,UAiBA,mBAAAD,KAESE,KAAAC,SAAW,SAACC,EAAeC,GAAgB,MAAAtC,GAAA,SAAasC,EAAOF,WAC/DD,KAAAC,SAAiBG,SAAK,qBACtBJ,KAAAK,OAAA,EACAL,KAAAM,aAAgB,KLoGjBN,KKnGJO,UACAC,UAAU,IACVC,WAAU,KACVC,SAAA,KACAC,YAAA,KACAC,uBAAuB,KACvBC,kBAAA,MACH,MAAAf,MLuGD9B,GAAQ4B,QAAUE,GAIX,CAED,SAAU7B,EAAQD,EAASH,GAEjC,YMnJAe,QAAAC,eAAAb,EAA4B,cAAAO,OAAA,GAC5B,IAAAkB,GAAA5B,EAAA,GAmBEiD,EAAa,WN4IX,QMlJKA,GAAAC,GAQNf,KAAAe,sBAEDf,KAAAgB,gBAAA,EAjBoB,MNwJlBF,GM1IiBV,SAAA,uBNqJjBU,EM3IOzB,UAAW4B,WAAA,SAAMC,GN4IpB,GM3IFC,GAAKnB,IACPP,GAAE2B,KAACpB,KAAAqB,KAAA,SAAAC,GACJH,EAAAI,gBAAAC,KAAAF,EAAAG,WAAAP,OAWDJ,EAACzB,UAAAqC,YAAA,SAAAC,EAAAC,GAED5B,KAAA6B,QAAAC,SAAAH,EAAAC,iBNiJEd,EMzIKzB,UAAe0C,aAAQ,SAAeP,GAC3C,GAAMQ,GAAQC,KAAAC,KAAAlC,KAAcmC,SAAAC,MAAoBZ,EAAKjD,MACrDyB,MAAKgB,gBAAehB,KAAOgB,gBAAgBgB,EAAWA,EAAEhC,KAAAgB,eACzD,IAAAqB,GAAAvB,EAAAwB,oBAAAtC,KAAAgB,gBAAAQ,EAAAjD,MAEDyB,MAAAuC,eAAAF,QAAAG,QAAAhB,EAAAjD,SNgJEuC,EMxIOzB,UAAAoD,QAAkB,SAAaC,GACpCA,EAAa1C,KAAKmC,SAAAQ,QACnB3C,KAAAgB,gBAAAhB,KAAAmC,SAAAQ,MACGD,EAAC1C,KAAegB,iBAEpBhB,KAAKgB,gBAAe0B,CACrB,IAAAL,GAAAvB,EAAAwB,oBAAAI,EAAA1C,KAAAmC,SAAAS,QAEM5C,MAAAuC,eAAAF,QAAPG,QAAmBxC,KAAKmC,SAAOS,WNyI7B9B,EMvIOzB,UAASwD,YAAgB,SAAQR,EAAKS,EAAMH,GNwI/C,MMvIC3C,MAAKmC,UAASnC,KAAAmC,SAAO7C,eAAQ,oBACnCU,KAAAmC,SAAAY,iBAAAV,EAAAS,EAAAH,GAEMN,EAAA,MAAAS,EAAA,OAAAH,GNwIL7B,EMtIMzB,UAAS2D,kBAAgB,SAAAxB,GAC9BA,EAAAlC,eAAA,YACF,GAAA2D,UAAAzB,EAAA0B,YNyICpC,EMrIOzB,UAAS8D,iBAAU,WNsIlBnD,KMrIJmC,SAAK7C,eAAmB,YAAAU,KAAAmC,SAAA7C,eAAA,aNsIpBU,KAAKmC,SMrITiB,WAEEpD,KAAKmC,SAASiB,YACZtC,EAAUwB,oBAAwBtC,KAACmC,SAAUkB,QAAArD,KAAAmC,SAAAS,SAClD5C,KAAAmC,SAAAkB,UAAArD,KAAAmC,SAAAQ,MAAK3C,KAAEmC,SAAAmB,SAAAtD,KAAAmC,SAAAC,MAAA,EAGTpC,KAAAmC,SAAAmB,SAAAtD,KAAAmC,SAAAkB,QAAArD,KAAAmC,SAAAS,QAAA,IAaH9B,EAACwB,oBAAA,SAAAI,EAAAF,GACH,OAAAE,EAAC,GAAAF,GA1GqB1B,INkPtB9C,GAAQ8C,cAAgBA,GAKlB,SAAU7C,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,IAOtDP,EAAQuF,aAKJC,OAAQ,SAKRC,iBAAkB,iBAKlBC,cAAe,eAKfC,OAAQ,SAKRC,UAAW,cAKR,COxSP,SAAA3F,EAAAD,KP+SO,CAED,SAAUC,EAAQD,EAASH,GAEjC,YQlTAe,QAAAC,eAAAb,EAAA,cAAsCO,OAAA,GACtC,IAGesF,GAHfC,EAAAjG,EAAmC,IAE5BkG,EAWNlG,EAAA,IAXD6B,EAAO7B,EAAM,IRsTb,SQpTEgG,GACAA,EAAAG,IAAItE,EAAOzB,OAAC,6BRsTV4F,EQpTGG,IAAEC,QAAA,kBAA6B,SAAQC,GRqTtC,GQpTFC,GAAgBD,EAAGE,MACpBD,GAAA7E,eAAA,QACA6E,EAAAE,GAAA,SAAAC,GAAA,MAAAA,QARER,EAAAlE,QAAMiE,EAWZG,KRqTGD,EAAanE,QAAQiE,EAAOG,MAC7BH,IAAWA,QAKR,SAAU5F,EAAQD,EAASH,GAEjC,YS3UAe,QAAAC,eAAAb,EAAA,cAAsCO,OAAA,GACtC,IAGegG,GAHfT,EAAAjG,EAAmC,IAE5BkG,EAQNlG,EAAA,IARD6B,EAAO7B,EAAY,IT+UnB,SS7UI0G,GT8UAA,ES7UAP,IAAYtE,EAAAzB,OAAA,gCACZ,cACC,aACH,iCANK6F,EAAYlE,QAAZ2E,EAAYP,KTsVfD,EAAanE,QAAQ2E,EAAaP,MACnCO,IAAiBA,QAKd,SAAUtG,EAAQD,EAASH,GAEjC,YUjWAe,QAAAC,eAAAb,EAAA,cAAgCO,OAAA,GAChC,IAIeiG,GAJfV,EAAAjG,EAAA,IACA4G,EAAA5G,EAAA,IAEOkG,EAKNlG,EAAA,IALD6B,EAAU7B,EAAA,IVqWV,SUnWE2G,GACAA,EAAAR,IAAAtE,EAAQzB,OAAG,0BACX6F,EAAAlE,QAAA4E,EAAWR,KAJNS,EAAG7E,QAKT4E,EAAAR,KVoWGD,EAAanE,QAAQ4E,EAAIR,MAC1BQ,IAAQA,QAKL,SAAUvG,EAAQD,EAASH,GAEjC,YWpXAe,QAAOC,eAQNb,EAAA,cAAAO,OAAA,GARD,IACEmG,GADFhF,EAAO7B,EAAe,IXyXtB,SWvXI6G,GXwXAhF,EWvXAzB,OAAA,mBACA,0BACA,yBACA,+BACC,sBAPE,kCXiYJyG,IAAoBA,QAKjB,SAAUzG,EAAQD,EAASH,GAEjC,YYzYAe,QAAAC,eAAAb,EAAA,cAAmCO,OAAA,GACnC,IACeoG,GADRC,EAGN/G,EAAA,IAHD6B,EAAO7B,EAAY,IZ8YnB,SY5YE8G,GAFKA,EAAYX,IAAZtE,EAAAzB,OAAY,mCZgZf0G,EAAaX,IAAInE,UAAU,kBAAmB,GAAI+E,GAAwBhF,UAC3E+E,IAAiBA,QAKd,SAAU1G,EAAQD,EAASH,GAEjC,YazZAe,QAAAC,eAAAb,EAAA,cAAsCO,OAAA,GACtC,IAGesG,GAHff,EAAAjG,EAAmC,IAE5BkG,EAINlG,EAAA,IAJD6B,EAAO7B,EAAO,Ib6Zd,Sa3ZEgH,GACAA,EAAAb,IAAAtE,EAAWzB,OAAA,2BAAK,eAHX6F,EAAAlE,QAAOiF,EAIbb,Kb4ZGD,EAAanE,QAAQiF,EAAQb,MAC9Ba,IAAYA,QAIP,CACA,CACA,CACA,CACA,CACA,CACA,Cc/aR,SAAA5G,EAAAD,GdmbAC,EAAOD,QAAU,+tEenbjB,SAAAC,EAAAD,GfybAC,EAAOD,QAAU,28FgBzbjB,SAAAC,EAAAD,GhB+bAC,EAAOD,QAAU,smCiB/bjB,SAAAC,EAAAD,GjBqcAC,EAAOD,QAAU,q1BkBrcjB,SAAAC,EAAAD,GlB2cAC,EAAOD,QAAU,q4CmB3cjB,SAAAC,EAAAD,GnBidAC,EAAOD,QAAU,yvFoBjdjB,SAAAC,EAAAD,GpBudAC,EAAOD,QAAU,4zFqBvdjB,SAAAC,EAAAD,GrB6dAC,EAAOD,QAAU,o+CsB7djB,SAAAC,EAAAD,GtBmeAC,EAAOD,QAAU,wuDuBnejB,SAAAC,EAAAD,GvByeAC,EAAOD,QAAU,ypBwBzejB,SAAAC,EAAAD,GxB+eAC,EAAOD,QAAU,04ByB/ejB,SAAAC,EAAAD,GzBqfAC,EAAOD,QAAU,4rM0BrfjB,SAAAC,EAAAD,G1B2fAC,EAAOD,QAAU,o+I2B3fjB,SAAAC,EAAAD,G3BigBAC,EAAOD,QAAU,+5C4BjgBjB,SAAAC,EAAAD,G5BugBAC,EAAOD,QAAU,krI6BvgBjB,SAAAC,EAAAD,G7B6gBAC,EAAOD,QAAU,qrB8B7gBjB,SAAAC,EAAAD,G9BmhBAC,EAAOD,QAAU,moC+BnhBjB,SAAAC,EAAAD,G/ByhBAC,EAAOD,QAAU,szDgCzhBjB,SAAAC,EAAAD,GhC+hBAC,EAAOD,QAAU,o2CiC/hBjB,SAAAC,EAAAD,GjCqiBAC,EAAOD,QAAU,okBAGT,CACA,CACA,CACA,CACA,CACA,CAEF,SAAUC,EAAQD,EAASH,GAEjC,YkC/iBAe,QAAAC,eAAeb,EAAC,cAAkBO,OAAA,GlCkjBlC,IkCjjBEuG,GAAiBjH,EAAoB,GACvCG,GAAE4B,QAAA,SAAA3B,GlCkjBEA,EAAO4B,UAAU,eAAgB,GAAIiF,GAAqBlF,WAMxD,SAAU3B,EAAQD,EAASH,GAEjC,YmC5jBAe,QAAAC,eAAAb,EAAA,cAAAO,OAAA,GnC+jBA,IAAIkB,GAAI5B,EAAoB,GmCjjB1BkH,EAAA,WnC2jBE,QmC1jBKA,GAAc7E,EAAA8E,GACpBhF,KAAAE,WAEDF,KAAAgF,WnC0jBMhF,KAAKiF,cmCreb,MnCieIF,GmC1jByC3E,SAAa,uBnCskBtD2E,EmCzjBW1F,UAAa6F,WAAA,SAAAC,GnC0jBhBA,EmCzjBCC,UACPpF,KAACqF,aACFrF,KAAAsF,YACGtF,KAAAuF,eAGLJ,EAAAK,eAEMxF,KAAAyF,cnC2jBLV,EmCzjBc1F,UAAAqG,UAAM,WACrB,GAAAvE,GAAAnB,InC2jBKA,MAAKgF,SAAS,WAAc,MAAO7D,GAAMsE,gBAQ7CV,EmCxjBY1F,UAAUkG,YAAa,WnCyjB3BvF,KmCxjBJsF,YAAStF,KAAWsF,WAAWA,YAAKtF,KAAasF,YAAAtF,KAAAsF,sBAAAK,OnCyjB7C3F,KmCxjBJ4F,QAAOC,cACPC,MAAArG,EAAAsG,UAAA/F,KAAAoF,QAAApF,KAAAsF,uBACEU,GAAChG,KAAQsF,WAAWA,WAAQK,KAAAM,cACjCC,MAAAlG,KAAAsF,sBAAAK,MAGH3F,KAAA4F,QAAAhE,YAAA5B,KAAAsF,WAAA1D,cnCgkBEmD,EmCxjBY1F,UAAA4F,YAAA,WnCyjBR,GmCxjBF9D,GAAAnB,InCyjBEA,MmCxjBF4F,SACAO,UACHC,aAAA,SAAA5E,EAAAI,GAAA,MAAAT,GAAAU,QAAAyD,WAAA9D,EAAAI,iBAEDiE,kBnCikBEd,EmCxjBc1F,UAAAgG,WAAe,WnCyjBzB,GAAIlE,GmCxjBJnB,InCyjBAP,GAAE2B,KAAKpB,KmCxjBLoF,QAAO,SAAGiB,EAAAC,InCyjBHD,EmCxjBH/G,eAAY,cAAa+G,EAAA/G,eAAA,SnCyjBvB6B,EmCxjBNyE,QAAOO,OAAOI,MACbT,MAAAQ,EACJN,GAAAK,EAAAV,KAAAM,cACAC,MAAAG,EAAAV,UnCikBHZ,EmCtjBS1F,UAAaoG,WAAC,WACtBzF,KAAAwF,gBnCujBOgB,MAAMC,QAAQzG,KAAKwF,gBAAkBkB,EAAK1G,KAAKE,SAASyG,KAAK,kBAAkBC,SAASC,MAAMH,EAAI1G,KAAKwF,emCtjBhHxF,KAAAE,SAAAyG,KAAA,iBAAAC,SAAA5G,KAAAwF,eACF,IAAAkB,IACD3B,InC2jBA/G,GAAQ+G,oBAAsBA,CA2B9B,IAAI+B,GmC1jBK,WnC2jBL,QmC1jBKA,KACA9G,KAAA+G,SAAA,EACA/G,KAAAC,SAAgB,0CnC2jBjBD,KmC1jBJgH,WAAWjC,EnC2jBP/E,KmC1jBJM,aAAY,KnC2jBRN,KmC1jBJO,UACAsB,OAAA,IACAuD,QAAA,IACHE,WAAA,IAADE,cAAC,KnC8jBG,MAAOsB,KAEX9I,GAAQ4B,QAAUkH,GAKZ,SAAU7I,EAAQD,EAASH,GoCltBjC,YpCstBAe,QAAOC,eoC9sBEb,EAAgB,cAAQO,OAAA,GpC+sBjC,IAAI0I,GoC9sBK,WpC+sBL,QoC9sBKA,KACLjH,KAAKkH,cAAa,QAClBlH,KAAKmH,oBAAmB,UACxBnH,KAAKoH,aAAe,YACrBpH,KAAAqH,WAAA,UACHrH,KAAAsH,iBAAC,2BAAAtH,KAAAuH,gBAAA,WAED,MAAAN,KpCitBAjJ,GoC/sBSiJ,iBAAsBA,CpCgtB/B,IAAIO,GoC7sBc,WAChB,QAACA,KACHxH,KAAAyH,UAAA,GAACzH,KAAA0H,UAAA,GAAAT,GpCgtBG,MAAOO,KAEXxJ,GAAQ4B,QAAU4H,GAKZ,SAAUvJ,EAAQD,EAASH,GqChvBjC,YAGAe,QAAAC,eAAeb,EAAC,cAAkBO,OAAA,GrCkvBlC,IqCjvBEoJ,GAAe9J,EAAuB,IACtC+J,EAAe/J,EAAuB,GACxCG,GAAE4B,QAAA,SAAA3B,GrCkvBEA,EAAO4J,QAAQ,sBAAuBF,EAAmB/H,SACzD3B,EAAO4J,QAAQ,sBAAuBD,EAAmBhI,WAMvD,SAAU3B,EAAQD,EAASH,GsC/vBjC,YtCmwBAe,QsCjwBEC,eAAAb,EAAoB,cAAYO,OAAA,GtCkwBlC,IAAIuJ,GsClwBkB,WtCqwBlB,QsClwBAA,GAAsBC,GACvB/H,KAAA+H,UtCuwBC,MsCzwBKD,GAAA1H,SAAA,WAGR0H,EAAAzI,UAAAiF,gBAAA,SAAA0D,GtCowBO,MAAOhI,MAAK+H,QAAQ1D,GAAG2D,IAEpBF,IAEX9J,GAAQ4B,QAAUkI,GAKZ,SAAU7J,EAAQD,EAASH,GuCnxBjC,YvCuxBAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI0J,GAAKpK,EAAoB,GACzB4B,EAAI5B,EAAoB,GAOxBqK,EuCjxB6C,WvCoxB7C,QAASA,GAAcC,EAAcC,GACjCpI,KAAKmI,aAAeA,EACpBnI,KAAKoI,kBAAoBA,EAyF7B,MuC52BFF,GAAA9H,SAAA,oCvC2xBE8H,EuCjxBK7I,UAAAgJ,QAAqB,WvCkxBtB,GuCjxBFlH,GAAMnB,IvCkxBJA,MuCjxBF6H,QAAQ7H,KAAAmI,avCkxBNnI,KuCjxBFsI,WAActI,KAAAmI,aAAAI,gBvCmxBZvI,KuCjxBFwI,oBACAC,KAAM,IvCkxBAC,OuCjxBA,UvCkxBAC,OuCjxBJ,OvCkxBIC,QuCjxBA,GACNC,OAAC,GACDC,KAAA,SAAAC,EAAAC,GACF,GAAAC,GAAAD,EAAAxH,KAAAnB,QAAA6I,QAAAC,IAAAC,aAEMjI,GAAKgH,aAAAkB,gBAAAJ,KvCqxBPjJ,KuCjxBFsJ,uBvCkxBMb,KuCjxBJ,IvCkxBIC,OuCjxBJ,UvCkxBIC,OuCjxBJ,OACFE,OAAC,GACDC,KAAA,SAAAC,EAAAC,GACH,GAAAO,GAAAP,EAAAxH,KAAAnB,QAAA6I,QAAAM,IAAAC,avCmxBatI,GAAMgH,aAAakB,gBAAgBE,MAU/CrB,EuC/wBM7I,UAAeqK,OAAA,WvCgxBjB1J,KuC/wBEsI,WAAWtI,KAAAmI,aAAAwB,WAAAP,cACX7C,MAEFqD,YAAAvF,GAAA,eACJwF,MAAAxF,GAAA,SACIyF,QAAC,OAGNC,SAAA,EAEDN,mBvC8wBMzJ,KAAKmI,aAAakB,gBAAgBrJ,KAAKsI,WAAWtI,KAAKmI,aAAawB,WAAWP,gBuC7vBrFlB,EAAA7I,UAAA2K,UAAA,SAAAhE,GvCswBMvG,EAAEwK,OAAOjK,KAAKsI,WAAWtI,KAAKmI,aAAawB,WAAWP,cAAe,SAAUI,GAAO,MAAOA,GAAIO,WAAa/D,IAE9GhG,KAAKmI,aAAakB,gBAAgBrJ,KAAKsI,WAAWtI,KAAKmI,aAAawB,WAAWP,gBuCzvBrFlB,EAAA7I,UAAA6K,iBAAA,SAAAnB,EAAAC,GvCmwBM,GAAImB,GAAclC,EAAGmC,QAAQrB,EAAEsB,QAAQhK,OAEvCL,MAAKmI,aAAakB,gBAAgBc,EAAYX,IAAIC,gBuCzvB1DvB,EAAA7I,UAAAiL,gBAAA,SAAAnB,EAAAK,GvCmwBQxJ,KAAKoI,kBAAkBmC,UAAUpB,EAAKK,IAEnCtB,KuCtvBXsC,EAAC,WAAD,QAAAA,KAACxK,KAAAC,SAAApC,EAAA,IvCswBOmC,KAAKgH,WAAakB,EAClBlI,KAAKM,aAAe,KAExB,MAAOkK,KAEXxM,GAAQ4B,QAAU4K,GwCp5BlB,SAAAvM,EAAAD,EAAAH,GxC25BA,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIkM,GAAiB5M,EAAoB,GACzCG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,oBAAqB,GAAI4K,GAAe7K,WyCh6B7D,SAAA3B,EAAAD,EAAAH,GzCw6BA,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GAOtD,IyCn6BEmM,GAAC,WzCs6BC,QAASA,GAAgBvC,EAAcC,GACnCpI,KAAKmI,aAAeA,EyCj6BvBnI,KAAAoI,oBzCu7BD,MAxBAsC,GAAgBtK,SAAW,eAAgB,qBAU3CsK,EAAgBrL,UAAUgJ,QAAU,WAChCrI,KAAK6H,QAAU7H,KAAKmI,cAUxBuC,EAAgBrL,UAAUiL,gBAAkB,SAAUnB,EAAKK,EAAKmB,GAC5D3K,KAAKoI,kBAAkBmC,UAAUpB,EAAKK,EAAKmB,IAExCD,KAcPE,EyCl6BA,WzCm6BA,QyCl6BAA,KzCm6BI5K,KyCl6BJC,SAAApC,EAAA,IACHmC,KAAAgH,WAAA0D,EAAD1K,KAAAM,aAAC,KAAAN,KAAAO,UzCq6BWsK,UAAW,IACXC,YAAa,KAGrB,MAAOF,KAEX5M,GAAQ4B,QAAUgL,G0Cn+BlB,SAAA3M,EAAeD,EAACH,GAEhB,Y1C0+BAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIwM,GAAmBlN,EAAoB,GAC3CG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,oBAAqB,GAAIkL,GAAiBnL,W2Ch/B/D,SAAA3B,EAAAD,EAAAH,GAEA,YAGAe,QAAAC,eAAeb,EAAC,cAAkBO,OAAA,G3Cs/BlC,I2Cr/BEyM,GAAAnN,EAAgB,IAChBoN,EAAApN,EAAY,IACZqN,EAAArN,EAAc,IACdsN,EAAAtN,EAAgB,IAChBuN,EAAAvN,EAA2B,EAC7BG,GAAE4B,QAAA,SAAA3B,G3Cs/BE+M,EAAWpL,QAAQ3B,GACnBgN,EAAMrL,QAAQ3B,GACdiN,EAAQtL,QAAQ3B,GAChBkN,EAAUvL,QAAQ3B,GAClBmN,EAAuBxL,QAAQ3B,K4CpgCnC,SAAAA,EAAeD,EAACH,GAEhB,Y5C4gCAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI8M,GAAqBxN,EAAoB,GAC7CG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,mBAAoB,GAAIwL,GAAmBzL,W6ClhChE,SAAA3B,EAAAD,EAA4BH,G7C0hC5B,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI0J,GAAKpK,EAAoB,G6CthC1B4B,EAAA5B,EAAA,GASDyN,EAAA,W7CwhCE,QAASA,GAAkBnD,EAAcC,G6CphCxCpI,KAAAmI,eACInI,KAAAoI,oB7CuoCL,MArHAkD,GAAkBlL,SAAW,eAAgB,qBAU7CkL,E6CthCOjM,UAAagJ,QAAY,WAChC,GAAClH,GAAAnB,IAEDA,MAAKuL,QAAAvL,KAAemI,aAAGI,gBAEP,IAAdvI,KAAAuL,QAAQC,SACRxL,KAAAmI,aAAewB,UAAA,EACf3J,KAAAuL,QAAUvL,KAAAmI,aAAAwB,WAAA8B,QAAA,G7CyhCRzL,KAAK0L,iBACDhD,O6CthCJ,U7CuhCIC,O6CthCJ,OACFgD,OAAC,QACD9C,OAAA,GACHC,KAAA,SAAAC,EAAAC,GAED,GAAA4C,GAAA3D,EAAAmC,QAAApB,EAAAxH,MAAAnB,QAAA6I,Q7CshCkBqC,EAAUK,EAAUC,GAAGN,OAC3BpK,GAAMgH,aAAakB,gBAAgBkC,GACnCpK,EAAMgH,aAAawB,UAAYlK,EAAEkH,KAAK4E,GAAWE,QAAQ,IAAQ1B,YAW7EuB,E6CphCajM,UAAMyM,OAAA,W7CshCf9L,K6CphCAuL,QAAQQ,QAAE,SAAS5C,GAAA,MAAAA,GAAAsC,QAAA,G7CshCnB,I6CphCAO,GAAAhM,KAAiBuL,QAAAC,M7CqhCjBxL,M6CnhCFuL,QAAAhF,MACEqD,YAAavF,GAAC,YAAY2H,EAC1BlC,QAAC,OACND,MAAAxF,GAAA,YAAA2H,EAEDjC,SAAAiC,E7CmhCUP,QAAQ,EACRrC,mBAEJpJ,KAAKmI,aAAawB,UAAYqC,EAC9BhM,KAAKmI,aAAakB,gBAAgBrJ,KAAKuL,UAW3CD,E6ClhCGjM,UAAA4M,UAAA,SAAAjG,GAcH,G7CsgCQhG,K6CnhCJuL,QAAAvF,GAAAyF,SACAzL,KAAKuL,QAAQC,OAAQ,IAASxL,KAAKuL,QAAAvF,GAAA+D,UACpC/J,KAAAuL,QAAAC,OAAA,KAEHxL,KAAAuL,QAAAvF,EAAA,GAAAyF,QAA8B,EAE9BzL,KAAAuL,QAAAC,OAAA,EAAAxL,KAA8CuL,QAAAvF,GAAA+D,WAExC/J,KAACuL,QAAYvF,EAAC,GAAAyF,QAAgB,IAGpChM,EAACwK,OAAAjK,KAAAuL,QAAA,SAAApC,GAAA,MAAAA,GAAAY,WAAA/D,IAGC,IADEhG,KAAAuL,QAAaC,OAAjB,CAIIxL,KAAGmI,aAAUkB,gBAAiBrJ,KAAAuL,Q7CuhC9B,IAAIW,GAAgBzM,EAAEkH,KAAK3G,KAAKuL,SAAWE,QAAQ,GAC/CxD,GAAGkE,UAAUD,KACblM,KAAKmI,aAAawB,UAAYuC,EAAcnC,YASpDuB,E6C7gCKjM,UAAa+M,UAAe,SAAApG,GAGnCvG,EAAAkH,KAAA3G,KAAAuL,SAAAE,QAAA,I7C6gCoBA,QAAS,EAELzL,KAAKuL,QAAQvF,GACnByF,QAAS,E6C3gCxBzL,KAAAmI,aAAAwB,UAAA3D,G7CohCDsF,EAAkBjM,UAAUiL,gBAAkB,SAAUnB,GACpDnJ,KAAKoI,kBAAkBmC,UAAUpB,IAE9BmC,K6ClgCVe,EAAA,W7CghCG,QAASA,KACLrM,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKgH,WAAasE,EAClBtL,KAAKM,aAAe,KAExB,MAAO+L,KAEXrO,GAAQ4B,QAAUyM,G8C/qChB,SAAOpO,EAAUD,EAAAH,G9CsrCnB,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI+N,GAAqBzO,EAAoB,GAC7CG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,0BAA2B,GAAIyM,GAAmB1M,WAMjE,S+C5rCQ3B,EAAAD,EAAAH,G/C8rCd,YAEAe,QAAOC,e+C5rCOb,EAAA,cAAAO,OAAA,G/C6rCd,IAAIgO,G+C5rCE,W/C6rCF,Q+C5rCEA,GAAUC,EAAAC,EAAA5C,EAAAjE,OACD,KAATA,IAAeA,M/C6rCb5F,K+C5rCFyM,O/C6rCEzM,K+C5rCF6J,MAASA,E/C6rCP7J,K+C5rCF0M,aAAe9N,OAAA+N,QACflO,KAAA,GACAmL,YAAa,GACb4C,OACA1C,QAAO,OACP8C,0BACAC,WAAS,EACTC,UAAA,EACAC,2BACAC,cAAc,GACdC,yBACApD,QACAE,SAAS,EACTmD,SAAS,E/C6rCHC,qB+C5rCY,E/C6rCZC,qB+C5rCL,EACDC,cAAA,EACCC,sBAAS,EACbC,gBAAA,EACHC,SAAA,EAAC5H,SAED6H,WAAA,G/C8rCYC,iBAAmBC,cAAe,cAAeC,mBAClDhI,G+C1rCR,MAAA2G,M/CosCCsB,E+CzqCe,W/C0qCf,QAASA,KACL7N,KAAKmG,QACD2H,mB+CxqCL,GAAAvB,GAAA,kCAAAlI,GAAA,aACH0J,uBACE,GAAIxB,GACF,yBACA,oBACGlI,GAAA,c/CqqCC2J,oB+CnqCS,GAAQzB,GAAA,6CAAAlI,GAAA,c/CoqCjB4J,wB+CnqCQ,GAAA1B,GAAA,sDAAAlI,GAAA,kBACV6J,UAAU,SAEbC,UACHvI,SAAAwI,QACE,cAAeC,WACb,eAUJC,uBACE,GAAI/B,GACF,yBACA,iBACGlI,GAAA,iBAED6J,UAAW,SACXC,UACAvI,SAASwI,QAAA,cAAAC,WAAA,e/CqpCPE,uB+CnpCS,GAAAhC,GAAa,0CAAAlI,GAAA,iB/CopCtBmK,2B+CnpCY,GAAWjC,GAAA,6CAAAlI,GAAA,sB/CopCvBoK,sB+CnpCD,GAAAlC,GAAA,qCAAAlI,GAAA,gBAEJ6J,UAAA,SACHC,UACHvI,SAAD8I,oBAAC,EAAAN,QAAA,cAtEYC,WAAA,gB/CguCT,MAAOR,KAEX7P,GAAQ6P,kBAAoBA,C+C5oC5B,IAACc,GAAA,W/CwpCG,QAASA,KACL3O,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKgH,WAAa6G,EAClB7N,KAAKM,aAAe,KAExB,MAAOqO,KAEX3Q,GAAQ4B,QAAU+O,GAKZ,SgDtyCG1Q,EAAeD,EAAAH,GhDwyCxB,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIqQ,GAAuB,WACvB,QAASA,KACL5O,KAAK6O,QgDryCR7O,KAAA2J,UAAA,EhD01CD,MA5CAiF,GgDryCCvP,UAAAyP,QAAA,SAAAD,GACI7O,KAAA6O,QhD4yCLD,EgDpyCCvP,UAAA0P,YAAA,WACI,MAAA/O,MAAA6O,KAAAG,QAAA,GAAAhJ,IhD2yCL4I,EgDnyCCvP,UAAA4P,eAAA,WACI,MAAAjP,MAAA6O,KAAAG,QAAA,GAAAnF,OhD0yCL+E,EgDlyCCvP,UAAA6P,qBAAA,WACI,MAAAlP,MAAA6O,KAAAG,QAAA,GAAApF,ahDyyCLgF,EAAoBvP,UAAUkJ,cAAgB,WgDhyC7C,MAAAvI,MAAA6O,KAAAG,QAAA,GAAAG,ahDyyCDP,EAAoBvP,UAAUgK,gBAAkB,SAAU+F,GACtDA,EAASrD,QAAQ,SAAUxN,EAAO+H,GAAO,MAAO/H,GAAMwL,SAAWzD,KAE9DsI,IAEX5Q,GAAQ4B,QAAUgP,GiDl2ClB,SAAA3Q,EAAeD,EAACH,GjDy2ChB,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI8Q,GAAwBxR,EAAoB,IAC5CyR,EAAiBzR,EAAoB,GACzCG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4J,QAAQ,eAAgBwH,EAAsBzP,SACrD3B,EAAO4J,QAAQ,oBAAqByH,EAAe1P,WkDh3CvD,SAAA3B,EAAAD,EAAAH,GlDw3CA,YAEAe,QkDt3CGC,eAAAb,EAAA,cAAAO,OAAA,GACH,IAAAkB,GAAA5B,EAAA,GAOEoK,EAAApK,EAAa,GlDs3CX0R,EkDl3CkB,WlDq3ClB,QkDn3CEA,GAAaC,EAAaC,EAAAC,EAAAvH,GlDo3CxB,GkDn3CFhH,GAAAnB,IlDq5CE,QAjCAA,KkDn3CFwP,cAAeA,ElDo3CbxP,KkDn3CFyP,kBAAkBA,ElDo3ChBzP,KkDn3CF0P,MlDo3CE1P,KkDn3CFmI,aAAgBA,ElDo3CdnI,KkDn3CF2P,SAAW,sBlDo3CT1H,EAAG2H,OkDn3CL5P,MACA6P,OAAA7P,KAAAwP,cACCM,uBAAA9P,KAAA8P,uBAEHpP,SAAAV,KAAAU,SACIC,YAAGX,KAAYW,YlDm3CXoP,YkDl3CD/P,KAAY+P,YlDm3CXC,ekDl3CShQ,KAAKgQ,eACpBC,YAAYjQ,KAAGiQ,YAChBC,cAAAlQ,KAAAkQ,cAAKtP,uBAAwBZ,KAACY,yBAG7BqH,EAAAkI,YAAenQ,KAAK6P,OAACO,UACtBnI,EAAAkI,YAAAnQ,KAAA6P,OAAAQ,QAAQpI,EAAEkE,UAAGnM,KAAU6P,OAAKS,OlDq3CrBtQ,KkDp3CKoK,QAAU,MAEhBnC,EAAAkI,YAAUnQ,KAAQ6P,OAAAO,UACxBnI,EAAAkE,UAAAnM,KAAA6P,OAAAQ,QAEDpI,EAAAkE,UAAAnM,KAAA6P,OAA0BS,OAC1BtQ,KAAQoK,QAAK,MAETnC,EAAIkE,UAAUnM,KAAK6P,OAAAO,UlDo3CZnI,EkD/2CPkE,UAAMnM,KAAA6P,OAAAQ,QACRpI,EAAKkE,UAAKnM,KAAA6P,OAAAS,SlDg3CJtQ,KkD/2CJoK,QAAK,SASLpK,KAAKoK,SlD02CD,IkDj2CJ,MACApK,KAAIQ,UAAKf,EAAU8Q,UAASvQ,KAAAmI,aAAAI,gBAA0BvI,KAAA6P,OAAAS,OlDk2C9C,MACJ,KAAK,MACDtQ,KkDh2CHQ,UACDf,EAAA8Q,UAAAvQ,KAAAmI,aAAAI,gBAAAvI,KAAA6P,OAAAS,OAAAlH,cAAApJ,KAAA6P,OAAAQ,OACJ,MlDg2CI,KkD/1CJ,QACFrQ,KAAAQ,UAAAf,EAAA8Q,UAAAvQ,KAAAmI,aAAAI,gBAAAvI,KAAA6P,OAAAS,OAAAlH,cAAApJ,KAAA6P,OAAAQ,OAAA5G,cAAAzJ,KAAA6P,OAAAO,UAED,0BAAApQ,KAAAQ,UAAAgM,MACFxM,KAAAa,oBAAA2P,KAAA,SAAA/P,GAEDU,EAAAV,gBlDs9CE,MAxKA8O,GkDn3CUnP,SAAM,0DlDg7ChBmP,EAAgBlQ,UAAUwB,kBAAoB,WAC1C,MAAOb,MAAK0P,IAAI1Q,IAAI,kFAUxBuQ,EkD51CClQ,UAAA4Q,YAAA,SAAA9G,GACInJ,KAAA2P,SAAAxG,GASAoG,EAAAlQ,UAAA6Q,cAAc,SAArB/G,GACE,MAAOnJ,MAAK2P,WAAWxG,GlDk2CvBoG,EkDt0CElQ,UAAA2Q,eAAA,WlDu0CE,OkDt0CAhQ,KAAKoK,SACR,UACF,MAAA3K,GAAAgR,QAAAzQ,KAAAmI,aAAAI,gBAAAvI,KAAAmI,aAAAwB,WAAA3J,KAAAQ,UAED,WlDs0Cc,MAAOf,GAAEgR,QAAQzQ,KAAKmI,aAAaI,gBAAgBvI,KAAKmI,aAAawB,WAAWP,cAAcpJ,KAAK6P,OAAOQ,OAAQrQ,KAAKQ,UAC3H,KAAK,QACD,MAAOf,GAAEgR,QAAQzQ,KAAKmI,aAAaI,gBAAgBvI,KAAKmI,aAAawB,WAAWP,cAAcpJ,KAAK6P,OAAOQ,OAAO5G,cAAczJ,KAAK6P,OAAOO,SAAUpQ,KAAKQ,aAUtK+O,EkDj0CIlQ,UAAMyQ,uBAAA,WlDo0CN,OkDj0CA9P,KAAKoK,SlDk0CD,IkD7zCJ,MACApK,KAAKmI,aAAaI,gBAChBvI,KAAKmI,aAAawB,WAClBE,MAAA7J,KAAaQ,UACRqJ,MAGT7J,KAAKmI,aAAOI,gBAAAvI,KAAAmI,aAAAwB,WAAAC,YAAA5J,KAAAQ,UAAAoJ,WACV,MlD0zCI,KkDnzCJ,MAEA5J,KAAKmI,aAACI,gBAAAvI,KAAAmI,aAAAwB,WAAAP,cAAApJ,KAAA6P,OAAAQ,OAAAxG,MAAA7J,KAAAQ,UAAAqJ,MAGV7J,KAAAmI,aAAcI,gBAAAvI,KAAAmI,aAAAwB,WAAAP,cAAApJ,KAAA6P,OAAAQ,OAAAzG,YAAA5J,KAAAQ,UAAAoJ,WACT,MACN,aAED5J,KAAAmI,aAAAI,gBAAAvI,KAAAmI,aAAAwB,WAAAP,cAAApJ,KAAA6P,OAAAQ,OAAA5G,cAAAzJ,KAAA6P,OAAAO,SAAApQ,KAAAQ,UAKAR,KAAAyP,kBAYCiB,SlD6yCCnB,EAAgBlQ,UAAU0Q,YAAc,WACpC,GAAI5O,GAAQnB,IkDxyCfP,GAAAwK,OAAAjK,KAAAmI,aAAAI,gBAAAvI,KAAAmI,aAAAwB,WAAAP,cAAApJ,KAAA6P,OAAAQ,OAAA5G,cAAA,SAAAkB,GAAA,MAAAA,GAAAZ,WAAA5I,EAAA0O,OAAAO,UAEDpQ,KAAKyP,kBAAiBiB,SlDgzCtBnB,EkDxyCClQ,UAAAqB,SAAA,WACIV,KAAAQ,UAAA2N,OAAA5H,MAAA,SASAgJ,EAAAlQ,UAAAsB,YAAA,SAAsBgQ,GAC3BlR,EAAEmR,KAAK5Q,KAAAQ,UAAe2N,OAAAwC,IAWxBpB,EAAgBlQ,UAAAuB,uBAAA,WAChB,GAAAqH,EAAAkE,UAAAnM,KAAoBS,YAAA,MAAAhB,GAAAkH,KAAA3G,KAAAS,WAAcoQ,UAAA,KAAAC,OAAA9Q,KAAAQ,UAAAoF,QAAAmL,elDuyCzBxB,KAEPyB,EAAgB,WAGhB,QAASA,GAAaC,GkDlyCrBjR,KAAAiR,YlD4zCD,MA3BAD,GAAa5Q,SAAW,aAYxB4Q,EkDnyCK3R,UAAAkL,UAAA,SAAApB,EAAAK,EAAAmB,GlDoyCD,GAAIuG,IkDlyCNjR,SAAApC,EAAA,IACEmJ,WAAYuI,EAEhBjP,aAAa,KACd6Q,KAAA,KACHC,SAAC5B,cAAA,WlDoyCmB,OAASc,MAAOnH,EAAKkH,MAAO7G,EAAK4G,QAASzF,KAKtD,OADY3K,MAAKiR,UAAUI,KAAKH,GACnBI,OAAOC,MAAM,eAEvBP,IAEXhT,GAAQ4B,QAAUoR,GAKZ,SAAU/S,EAAQD,EAASH,GAEjC,YAEA,IAAI2T,GAAaxR,MAAQA,KAAKwR,WAAc,WACxC,GAAIC,GAAgB7S,OAAO8S,iBmDzlD/BC,uBAAAnL,QAAA,SAAqEhI,EAAAoT,GAAApT,EAAAmT,UAAAC,IACrE,SAAApT,EAAAoT,GAAA,IAA4B,GAAArS,KAAAqS,KAAAtS,eAAAC,KAAAf,EAAAe,GAAAqS,EAAArS,IAE5B,iBAAAf,EAAAoT,GnD2lDQ,QAASvN,KAAOrE,KAAK6R,YAAcrT,EADnCiT,EAAcjT,EAAGoT,GAEjBpT,EAAEa,UAAkB,OAANuS,EAAahT,OAAOkT,OAAOF,IAAMvN,EAAGhF,UAAYuS,EAAEvS,UAAW,GAAIgF,OAGvFzF,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,ImDzlDGwT,GAAAlU,EAAA,GACH4B,EAAA5B,EAAA,GnDkmDImU,EAAuB,SAAUC,GmDzlD5B,QAAAD,KACL,MAAa,QAAbC,GAAoBA,EAAYpL,MAAA7G,KAAAkS,YAAAlS,KnDqrDhC,MA5FAwR,GmD3lDCQ,EAAAC,GnDqmDDD,EmD5lDI3S,UAAe8S,aAAA,SAAAzP,GnD6lDfA,EmD5lDDoO,OAAApO,GACDjD,EAAA2S,MAAK1P,IACN1C,KAAAgB,gBAAAhB,KAAAmC,SAAAkB,QACFX,EAAA1C,KAAAgB,kBnD+lDa0B,GAAc,IACd1C,KAAKgB,gBAAkB,EACvB0B,EAAa,GAEjB1C,KAAKyC,QAAQC,KAWrBsP,EAAoB3S,UAAUgT,eAAiB,SAAUC,GACrD,OACIC,OAAQD,EAAOE,UACfC,uBAAwBH,EAAOE,YAWvCR,EAAoB3S,UAAUqT,cAAgB,SAAUC,EAAKC,GmDxlD5D,MAAAD,MAAAE,QACIF,EAAAE,MAAAD,GAAAtT,eAAP,SAAoBqT,EAAAE,MAAWD,GAAAtT,eAAA,WAUxB0S,EAAA3S,UAAAyT,aAAP,SAAAR,GACE,QAAOtS,KAAAmC,SAAA4Q,QAAA/S,KAAAmC,SAAA4Q,OAAAzN,WAAA0N,UAAAV,EAAAU,SnDgmDPhB,EAAoB3S,UAAU4T,aAAe,WACzC,OmDtlDHC,gBAAAlT,KAAAmC,SAAA4Q,QAAA/S,KAAAmC,SAAA4Q,OAAAnR,YACIuR,iBAAAnT,KAAAmC,SAAU4Q,QAAjB/S,KAAkBmC,SAAe4Q,OAAAnR,enDgmD/BoQ,EmDvlDW3S,UAAQ6F,WAAA,SAAAC,GnDwlDf,GmDvlDFhE,GAAGnB,IACJmF,GAAAhD,UAAAnC,KAAAmC,WAEGnC,KAACgB,gBAAmBhB,KAAAmC,SAAAkB,SAE5B8B,EAAA3C,UAhGyCxC,KAAAwC,QAAAmD,MAAA,IAAa3F,KAgGrDwC,QAAA4Q,WAhGYpT,KAAAwC,QAAAJ,MAAApC,KAAAwC,QAAAJ,MAAmBiR,IAAA,SAAAC,GnD0rDhB,MmDxlDhBA,GAAA3N,MAAA,IAAAxE,EAAAqB,QAAA4Q,WnDwlDuBE,KAGftT,KAAKmD,oBAEF6O,GACTD,EAAwBjR,cAC1B9C,GAAQgU,oBAAsBA,CAmC9B,IAAIuB,GmDxlDA,WnDylDA,QmDxlDAA,KnDylDIvT,KmDxlDJ+G,SAAU,EnDylDN/G,KmDxlDJC,SAAApC,EAAkB,InDylDdmC,KmDxlDJgH,WAAWgL,EnDylDPhS,KmDxlDJwT,YAAY,EnDylDRxT,KmDxlDJM,aAAgB,YnDylDZN,KmDxlDJO,UACHc,KAAA,IAADoS,QAAC,IAAAjR,QAAA,InD2lDWL,SAAU,IACVI,cAAe,IACfV,OAAQ,IACR6R,WAAY,IACZnS,eAAgB,KAGxB,MAAOgS,KAEXvV,GAAQ4B,QAAU2T,GAKZ,SAAUtV,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIoV,GAAuB9V,EAAoB,GAC/CG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,eAAgB,GAAI8T,GAAqB/T,WoD3wD5D,SAAA3B,EAAMD,EAAQH,GpDmxDhB,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIqV,GAAe/V,EAAoB,IACnCgW,EAAchW,EAAoB,GACtCG,GAAQ4B,QAAU,SAAU3B,GACxB2V,EAAahU,QAAQ3B,GACrB4V,EAAYjU,QAAQ3B,KqD1xDtB,SAAOA,EAAUD,EAAWH,GrDkyD9B,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIuV,GAAsBjW,EAAoB,IAC1CkW,EAAoBlW,EAAoB,GAC5CG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,cAAe,GAAIiU,GAAoBlU,SACxD3B,EAAO4B,UAAU,YAAa,GAAIkU,GAAkBnU,WAMlD,SAAU3B,EAAQD,EAASH,GAEjC,YAEAe,QsDhzDAC,eAAAb,EAAA,cAAAO,OAAA,GtDizDA,IAAIkB,GsD7yDM5B,EAAc,GtDozDpBmW,EAAoB,WACpB,QsD7yDCA,KACIhU,KAAAiU,UAAA,EtDs0DL,MAhBAD,GsD9yDO3U,UAAY6U,YAAa,SAAAvR,GtD+yD5B,GsD9yDFxB,GAAOnB,ItD+yDL,IAAI2C,EsD9yDJ3C,KAAKiU,UAAa,CACpB,GAAGE,GAAAnU,KAAAmC,SAAAkB,QAAArD,KAAAmC,SAAAQ,MAAA3C,KAAAiU,UAAA,EACJjU,KAAAmC,SAAAkB,QACMrD,KAAKmC,SAAMQ,MAAA3C,KAAAiU,UAAA,CACnBjU,MAAAoU,MAAA3U,EAAA4U,MAAArU,KAAAiU,UAAA,SAAAzS,GAAA,MAAA2S,GAAA3S,EAAA,QA3BUxB,MAAAoU,MAAA,GAAA5N,OAAA7D,GA8BblD,EAAA2B,KAAApB,KAAAoU,MAAA,SAAA5S,EAAA8E,GtDgzDgBnF,EAAMiT,MAAM9N,GAAOA,GAG3B,OAAOtG,MAAKoU,OAETJ,IAEXhW,GAAQgW,iBAAmBA,CAwB3B,IAAIM,GsDhzDA,WACJ,QAACA,KAADtU,KAAA+G,SAAC,EAAA/G,KAAAgH,WAAAgN,EtDmzDOhU,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKM,aAAe,aACpBN,KAAKO,UACD4B,SAAU,IACVoS,aAAc,KAGtB,MAAOD,KAEXtW,GAAQ4B,QAAU0U,GAKZ,SAAUrW,EAAQD,EAASH,GAEjC,YAEA,IAAI2T,GAAaxR,MAAQA,KAAKwR,WAAc,WACxC,GAAIC,GAAgB7S,OAAO8S,iBuD54D/BC,uBAAAnL,QAAmD,SAAAhI,EAAAoT,GAAApT,EAAAmT,UAAAC,IAEnD,SAAApT,EAAAoT,GAAA,OAAArS,KAAAqS,KAAAtS,eAAqEC,KAAAf,EAAAe,GAAAqS,EAAArS,IACrE,iBAAAf,EAAAoT,GvD84DQ,QAASvN,KAAOrE,KAAK6R,YAAcrT,EuD54D3CiT,EAAAjT,EAAAoT,GvD64DQpT,EAAEa,UAAkB,OAANuS,EAAahT,OAAOkT,OAAOF,IAAMvN,EAAGhF,UAAYuS,EAAEvS,UAAW,GAAIgF,OAGvFzF,QuD34DGC,eAAAb,EAAA,cAAAO,OAAA,GACH,IAAAiW,GAAA3W,EAAA,IAAwCkU,EAAAlU,EAAa,GAGnD4B,EAAA5B,EAAe,GAMf4W,EAAA,SAAAxC,GvD+4DE,QuD34DCwC,GAAAC,EAAA3T,GACK,GAAAI,GAAA8Q,EAAA7T,KAAA4B,KAAAe,IAARf,IvD84DM,OuD94DNmB,GAAAuT,OACEvT,EAAK8D,cACH9D,EvDmgEF,MA9HAqQ,GAAUiD,EAAoBxC,GAE9BwC,EAAmBrU,SAAW,OAAQ,uBAYtCqU,EuD54DapV,UAAE4F,YAAuB,WvD64DlC,GuD54DF9D,GAAAnB,IvD64DEA,MuD54DF4F,SACA+O,mBAAmB,KACnBC,aAAW,EACXC,aAAA,EACHC,eAAA,EAEDC,cAAA/U,KAAAgV,iBvD44DUC,QAAS,SAAUzT,EAAM0T,GAAS,MAAO/T,GAAMgU,YAAY3T,IAC3D4T,iBAAkB,SAAU5T,GAAQ,MAAOL,GAAMkU,aAAa7T,IAC9D8T,YAAa,SAAU9T,EAAM+T,GAAU,MAAOpU,GAAMuS,YAAalS,KAAMA,EAAM0T,MAAOK,KACpFC,kBAAmB,SAAUhU,GAAQ,MAAOL,GAAM6B,kBAAkBxB,IACpEiU,cAAe,SAAUjU,GAAQ,MAAOL,GAAMsU,cAAcjU,IuD14DnEkU,oBAAA,SAAAlU,GAAA,MAAAL,GAAAuU,oBAAAlU,IACIgL,KAAAxM,KAAAwM,OvDq5DLiI,EuD14DCpV,UAAAqW,oBAAA,SAAAlU,GACI,MAAAxB,MAAA0U,KAAAiB,YAAAnU,EAAAoU,WvDo5DLnB,EAAmBpV,UAAUoW,cAAgB,SAAUjU,GuDx4DtD,GAAAqU,GAAApW,EAAAsG,UAAA/F,KAAAyT,QAAA,SAAAqC,GAAA,MAAAA,GAAAnQ,OAAA,IAAAmQ,EAAAnQ,KAAAoQ,QAAA,SACI,YAAAF,GAAArU,EAAAqR,OAAPrR,EAAAqR,MAAkBgD,GAAlBrU,EAAAqR,MAAAgD,GAoBC,KAnBKrU,EAAAqR,MAAW,GAAO,MvDk5DtB4B,EuD14DOpV,UAAgB6F,WAAa,SAAUC,GvD24D1C,GAAIhE,GuD14DJnB,IvD24DImF,GuD14DGqH,KACTxM,KAAG4F,QAAA4G,KAAAxM,KAAAwM,KAGDrH,EAAWsO,UACbzT,KAAK4F,QAAQ6N,QAAAzT,KAAayT,SAGxBtO,EAAC3C,UACNxC,KAAAwC,QAAAmD,MAAA,IAAA3F,KAAAwC,QAAA4Q,WAEDpT,KAAAwC,QAAAJ,MAAApC,KAAAwC,QAAAJ,MAAAiR,IAAA,SAAAC,GvDy4Dc,MADAA,GAAQ3N,MAAQ,IAAMxE,EAAMqB,QAAQ4Q,WAC7BE,KuDp4DlBnO,EAAAhD,WACInC,KAAA4F,QAAAkP,eAAA9U,KAAPmC,SAAA6T,YvDy4DMhW,KuDv4DFmD,oBvD+4DFsR,EAAmBpV,UAAU8V,YAAc,SAAU3T,GAC5CxB,KAAKmC,SAAS6T,YACfhW,KAAKuB,gBAAiBC,KAAMA,EAAMC,YAAaD,EAAKyU,YAG5DxB,EuDr4DepV,UAACgW,aAAY,SAAA7T,GAC5BxB,KAAKuB,gBAAQC,KAAaA,EAAQC,WAAAD,EAAiByU,YAS9CxB,EAAApV,UAAA6W,gBAAP,SAAAzU,GACEzB,KAAAiB,WAAgBQ,GACjBzB,KAAA4F,QAAAmP,cAAA/U,KAAAgV,kBvD44DCP,EuDn4DOpV,UAAA2V,eAAA,WvDo4DH,MuDn4DFvV,GAAA0W,OAAAnW,KAAgBqB,MAAO+U,SAAS,KvD24DlC3B,EAAmBpV,UAAUgX,UAAY,WACrC,OACIC,iBAAkBtW,KAAKwM,OAASgI,EAAW+B,SAASC,MACpDC,qBAAsBzW,KAAKwM,OAASgI,EAAW+B,SAASG,MAGzDjC,GACT1C,EAAwBjR,cAC1B9C,GAAQyW,mBAAqBA,CAwC7B,IAAIkC,GuDr4DA,WvDs4DA,QuDr4DAA,KvDs4DI3W,KuDr4DJ+G,SAAA,EvDs4DI/G,KuDr4DJgH,WAAWyN,EvDs4DPzU,KuDr4DJC,SAAYpC,EAAG,IvDs4DXmC,KuDr4DJM,aAAgB,WvDs4DZN,KuDr4DJO,UACHiM,KAAA,IAADnL,KAAA,IAACoS,QAAA,IvDw4DWjR,QAAS,IACTL,SAAU,IACVI,cAAe,IACfV,OAAQ,IACR6R,WAAY,IACZnS,eAAgB,KAGxB,MAAOoV,KwD1lEX3Y,GAAA4B,QAAA+W,GxDimEM,SAAU1Y,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIqY,GAAwB/Y,EAAoB,GAChDG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAOkY,OAAO,gBAAiBS,EAAsBhX,QAAQuW,UAM3D,SyD3mEAlY,EAAYD,EAAOH,GzD6mEzB,YyD1mEAe,QAACC,eAAAb,EAAA,cAAAO,OAAA,GzD6mED,IAAIsY,GAAiB,WACjB,QAASA,MAOT,MALAA,GAAcV,OAAS,WACnB,MAAO,UAAU5X,EAAO8D,EAAOS,GAC3B,MAAOvE,GAAMiN,OAASnJ,EAAQS,EAAM,EAAIvE,EAAMuY,MAAM,EAAGzU,GAAS,MAAQ9D,EAAMuY,OAAOhU,GAAOvE,IAG7FsY,I0D3nEX7Y,GAAA4B,QAAAiX,GAKG,SAAA5Y,EAAAD,EAAAH,G1D+nEH,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,IAOtDP,E0D7nEKuY,U1DkoEDC,MAAO,QAKPE,IAAK,QAMH,SAAUzY,EAAQD,EAASH,GAEjC,YAEAe,Q2DnpEEC,eAAab,EAAA,cAAAO,OAAA,G3DopEf,I2DnpEEkB,GAAA5B,EAAA,G3D2pEEkZ,EAAoB,WAGpB,QAASA,GAAiBC,EAAOC,GAC7BjX,KAAKgX,MAAQA,EACbhX,KAAKiX,oBAAsBA,EAyG/B,MA5GAF,GAAiB3W,SAAW,QAAS,uBAoBrC2W,E2DjpEM1X,UAAU6X,8BAA0B,SAAAC,EAAAC,EAAAC,EAAAC,EAAAnV,EAAAoV,G3DkpEtC,GAAIpW,G2DjpEFnB,IACJ,OACAA,MAAAwX,UAAAT,EAAAU,eAAAN,EAAAC,EAAAC,EAAAC,EAAAnV,EAAAoV,IACH/G,KAAA,SAAAkH,G3DopES,M2DlpEVvW,GAAAsS,QAAAiE,EAAA7I,UAAA8I,K3DgpEUxW,EAAME,KAAOqW,EAAa7I,KAAKA,KAAKxN,KACpCF,EAAMgB,SAAWuV,EAAa7I,KAAK1M,U2D7oE1CyV,KAAAzW,EAAAsS,QACKpS,KAAAF,EAAAE,KACCwW,SAAWH,EACX7I,KAAAgJ,SAGR1V,SAAAuV,EAAA7I,KAAA1M,a3DqpEC4U,EAAiB1X,UAAUmY,UAAY,SAAUvT,G2D1oEhD,MAAAjE,MAAAgX,MAAAhY,IAAAgB,KAAAiX,oBAAAxP,UAAAzH,KAAAiX,oBAAAvP,UAAAR,cAAAjD,I3DupED8S,EAAiBU,eAAiB,SAAUN,EAAWC,EAAYC,EAAQC,EAAYnV,EAAUoV,GAC7F,GAAItT,IAAW6T,UAOf,OANArY,GAAEkN,OAAO1I,EAAO6T,OAAQf,EAAiBgB,oBAAoBZ,I2DpoEhE1X,EAAAkN,OAAA1I,EAAA6T,OAAAf,EAAAiB,yBAAAZ,IACY3X,EAAAkN,OAAA1I,EAAA6T,OAAAf,EAAfkB,uBAA4CZ,IAC1C5X,EAAAkN,OAAO1I,EAAS6T,OAAKf,EAAkBmB,uBAAAZ,IACxC7X,EAAAkN,OAAA1I,EAAA6T,OAAAf,EAAAoB,2BAAAhW,IAED1C,EAAAkN,OAAA1I,EAAA6T,OAAAf,EAAAqB,gBAAAb,I3DqoEatT,G2D5nEb8S,EAAAgB,oBAAA,SAAAZ,G3DooEM,MAAOA,KAAekB,MAAOlB,I2D3nEnCJ,EAAAiB,yBAAA,SAAAZ,G3DmoEM,MAAOA,KAAgBkB,YAAalB,I2D1nE3BL,EAAAkB,uBAAA,SAAfZ,GACE,MAAIA,IAAY,OAAAA,IAAAkB,SAAAlB,I3DwoEhBN,E2DjoEamB,uBAAC,SAAAZ,GACf,MAAAA,IAAA,OAAAA,IAAAkB,SAAAlB,I3DmoECP,E2DhoEOoB,2BAAgC,SAAWhW,GACnD,GAAA2V,K3DuoEK,O2DtoER3V,KAAC1C,EAAAkN,OAAAmL,EAAA3V,EAAAkB,UAAAoV,KAAAtW,EAAAkB,U3DkoEW5D,EAAEkN,OAAOmL,EAAQ3V,EAASS,UAAa8V,UAAWvW,EAASS,UAC3DnD,EAAEkN,OAAOmL,EAAQ3V,EAAS4Q,QAAU5Q,EAAS4Q,OAAOzN,aAAgBqT,YAAaxW,EAAS4Q,OAAOzN,WAAWK,OAC5GlG,EAAEkN,OAAOmL,EAAQ3V,EAAS4Q,QAAU5Q,EAAS4Q,OAAOnR,cAAiBgX,aAAczW,EAAS4Q,OAAOnR,eAEhGkW,GAEXf,EAAiBqB,gBAAkB,SAAUb,GACzC,MAAOA,IAAuB,OAAZA,IAAsBsB,YAAatB,IAElDR,I4DtxEX/Y,GAAA4B,QAAemX,G5D6xET,SAAU9Y,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIua,GAAqBjb,EAAoB,GAC7CG,GAAQ4B,QAAU,SAAU3B,G6D3xE5BA,EAAA4J,QAAA,sBAAAiR,EAAAlZ,WAMA,SAAA3B,EAAAD,EAAAH,G7D8xEA,Y6D7xEAe,QAACC,eAAAb,EAAA,cAAAO,OAAA,G7DsyED,IAAIwa,GAA0B,WAC1B,QAASA,MAET,MAAOA,KAEX/a,GAAQ+a,uBAAyBA,CAoCjC,IAAIC,GAAgB,WAChB,QAASA,KACLhZ,KAAKgH,WAAa+R,EAClB/Y,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKM,aAAe,OACpBN,KAAKO,UACD0Y,MAAO,KAGf,MAAOD,K8Dt2EXhb,GAAA4B,QAAeoZ,G9D62ET,SAAU/a,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI2a,GAAiBrb,EAAoB,GACzCG,GAAQ4B,QAAU,SAAU3B,G+Dt3E5Bib,EAAAtZ,QAAA3B,KAOE,SAAOA,EAAUD,EAAAH,G/Dw3EnB,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI4a,GAAqBtb,EAAoB,IACzCub,EAA2Bvb,EAAoB,IAC/Cwb,EAAyBxb,EAAoB,IAC7Cyb,EAAyBzb,EAAoB,GACjDG,GAAQ4B,QAAU,SAAU3B,GACxBA,EAAO4B,UAAU,iBAAkB,GAAIsZ,GAAmBvZ,SAC1D3B,EAAO4B,UAAU,iBAAkB,GAAIwZ,GAAuBzZ,SAC9D3B,EAAO4B,UAAU,iBAAkB,GAAIyZ,GAAuB1Z,SgEx4ElE3B,EAAAsb,UAAA,mBAAAH,EAAAxZ,QAAA4Z,ahE+4EM,SAAUvb,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GgE33EtC,IAAAkb,GAAO,WACnB,QAAIA,KACJzZ,KAAS+G,SAAQ,EACjB/G,KAAOC,SAAUpC,EAAA,IAClBmC,KAAAK,OhE64ESqZ,cAAe,IACfpE,YAAa,KAGrB,MAAOmE,KAEXA,GAAcD,QAAU,WACpB,GAAID,GAAY,WAAc,MAAO,IAAIE,GAEzC,OADAF,GAAUnZ,WACHmZ,GiEh7EXvb,EAAA4B,QAAA6Z,GjEu7EM,SAAUxb,EAAQD,EAASH,GAEjC,YiEh7EAe,QAAAC,eAAAb,EAAA,cAAAO,OAAA,GjEm7EA,IiE/6EEob,GAAa9b,EAAA,GjEy7EX+b,EAAqB,WAGrB,QAASA,GAAkB7R,EAAS8R,EAAWnF,GAC3C1U,KAAK+H,QAAUA,EACf/H,KAAK6Z,UAAYA,EACjB7Z,KAAK0U,KAAOA,EAiJhB,MArJAkF,GAAkBxZ,SAAW,UAAW,YAAa,QAmBrDwZ,EiEl7ECva,UAAAiW,YAAA,SAAA9T,EAAA+T,GACF/T,EAAAlC,eAAA,aAEDU,KAAA6Z,UAAAC,KAAAtY,EAAAuY,WjEm7EevY,EAAKlC,eAAe,eACzBU,KAAK+H,QAAQiS,SAASjT,QAAQvF,EAAKyY,aAE9BzY,EAAKlC,eAAe,kBACzBkC,EAAK0Y,iBAEA1Y,EAAKlC,eAAe,kBiEh7EhCkC,EAAA2Y,cAAA5E,IjE87EDqE,EiEh7ECva,UAAA+a,WAAA,SAAAC,GACI,MAAAA,IAEO,IAFPA,EAAAlE,OAAP,SAAmB3U,GACjB,MAAAA,KAAgBoY,EAAkBU,iBAAW9Y,IAAeoY,EAAAW,SAAA/Y,MAC5DgK,QAWFoO,EAACva,UAAAsW,YAAA,SAAA6E,GjEi7EK,MiE/6ENA,GAAAZ,EAAAa,WAAAD,GjE+6Eaxa,KAAK0U,KAAKiB,YAAY6E,IiEr6EnCZ,EAAAva,UAAAqb,mBAAA,WjE86EM,MAAOf,GAAcpW,YAAYG,eiEp6EhCkW,EAAAva,UAAAsb,cAAA,WACL,MAAOhB,GAAApW,YAAYC,QjEo7EnBoW,EiE36ECva,UAAAub,cAAA,WACW,MAAAjB,GAAApW,YAAdI,QjE66EEiW,EiE36Ecva,UAAMwb,kBAAA,WACpB,MAAOlB,GAAapW,YAAYE,kBAUnBmW,EAAAa,WAAf,SAAwBK,GACtB,GAAA/R,GAAOgS,SAASC,cAAa,MAG/B,OAFCjS,GAAAkS,UAAAH,EAED,IAAA/R,EAAAmS,WAAA1P,OAAA,GAAAzC,EAAAmS,WAAA,GAAAC,WASevB,EAAAW,SAAA,SAAf/Y,GACE,MAAOA,GAAK/C,MAAQ+C,EACf/C,OAAAkb,EAAkBpW,YAAoBI,QjEm7E3CiW,EAAkBU,iBAAmB,SAAU9Y,GAC3C,MAAOA,GAAKgL,OAAUoN,EAAkBwB,eAAe5Z,IAASA,EAAKY,OAA+B,IAAtBZ,EAAKY,MAAMoJ,QiEp6E5FoO,EAAAyB,SAAA7Z,IACYoY,EAAA0B,iBAAe9Z,KAE9BoY,EAAC0B,iBAAA,SAAA9Z,GAED,MAAAA,GAAAgL,OAAAmN,EAAApW,YAAAE,kBASAmW,EAACwB,eAAA,SAAA5Z,GACH,MAAAA,GAAAgL,OAACmN,EAAApW,YAAAG,ejE66EGkW,EAAkByB,SAAW,SAAU7Z,GACnC,MAAOA,GAAKgL,OAASmN,EAAcpW,YAAYC,QAE5CoW,IAEX5b,GAAQ4b,kBAAoBA,CAwC5B,IiEv6EA2B,GAAA,WAAC,QAAAA,KjEy6EOvb,KAAK+G,SAAU,EACf/G,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKgH,WAAa4S,EAClB5Z,KAAKM,aAAe,KACpBN,KAAKO,UACDib,aAAc,IACdC,aAAc,IACdC,YAAa,KkEvoFzB,MAAAH,KlE4oFAvd,GAAQ4B,QAAU2b,GkEtoFlB,SAAAtd,EAAAD,EAAAH,GlE6oFA,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GAOtD,IAAIod,GkEjoFiB,WlEkoFjB,QkEjoFCA,KACF3b,KAAA4b,SAAA,ElEypFC,MAhBAD,GkEhoFYtc,UAAW6F,WAAA,SAAAC,GACrBA,EAAK0W,cACL7b,KAAK4b,QAAA5b,KAAY8b,mBlEyoFnBH,EAAsBtc,UAAUyc,eAAiB,WAC7C,MAAO9b,MAAK6b,aACR7b,KAAK6b,YAAYzZ,OACjBpC,KAAK6b,YAAYzZ,MAAM+T,OAAO,SAAU3U,GAAQ,OAAQA,EAAKua,SAAWvQ,OAAS,GAElFmQ,IAEX3d,GAAQ2d,sBAAwBA,CAoBhC,IkEnoFAK,GAAA,WAAC,QAAAA,KlEqoFOhc,KAAK+G,SAAU,EACf/G,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKgH,WAAa2U,EAClB3b,KAAKM,aAAe,KACpBN,KAAKO,UACDsb,YAAa,IACbvG,YAAa,IACb9P,cAAe,KmEttF3B,MAAAwW,KnE2tFAhe,GAAQ4B,QAAUoc,GmErtFlB,SAAA/d,EAAAD,EAAAH,GnE4tFA,YmE5tFae,QAAAC,eAAAb,EAAA,cAAAO,OAAqB,GnEquFlC,IAAI0d,GAAyB,WACzB,QAASA,MAET,MAAOA,KAEXje,GAAQie,sBAAwBA,CmE5sFhC,IAACC,GAAA,WnE8tFG,QAASA,KACLlc,KAAK+G,SAAU,EACf/G,KAAKC,SAAWpC,EAAoB,IACpCmC,KAAKgH,WAAaiV,EAClBjc,KAAKM,aAAe,KACpBN,KAAKO,UACDib,aAAc,IACdlG,YAAa,KoEpxFzB,MAAA4G,KpEyxFAle,GoErxFE4B,QAAcsc,GpE0xFV,SAAUje,EAAQD,EAASH,GAEjC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAI4d,GAA2Bte,EAAoB,GqElyFnDG,GAAA4B,QAAA,SAAA3B,GACAA,EAAA4J,QAAA,4BAA4BsU,EAAAvc,WrEyyFtB,SqEryFI3B,EAAAD,EAA0BH,GrEuyFpC,YAEAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,GACtD,IAAIob,GqEhyFC9b,EAAA,GACI4B,EAAA5B,EAAA,GrEiyFLue,EqEhyFiB,WAInB,QAAAA,GAAApF,EAAAC,GrEgyFMjX,KAAKgX,MAAQA,EACbhX,KAAKiX,oBAAsBA,EqE9xF9BjX,KAAAqc,cAAA,ECrBL,MDgBED,GAAChc,SAAA,+BrE0yFCgc,EAAuB/c,UAAUid,gBAAkB,SAAUC,GqE7xF3DA,EAAAvc,KAAAqc,gBAAArc,KAAAqc,gBACIrc,KAAAwc,iBrEoyFNJ,EqE/xFS/c,UAAAod,SAAA,SAAuCC,GAC9C1c,KAAEqc,cAAAK,ErEgyFA1c,KqE/xFDwc,iBrEoyFHJ,EqE/xFI/c,UAAAmd,cAAA,WrEgyFA,GAAIrb,GqE/xFEnB,IACXP,GAAAkd,MAAA3c,KAAAoC,OAEDwa,UrE+xFWzG,OAAO,SAAU3U,GAAQ,MAAOA,KAChCJ,KAAK,SAAUI,GAChBL,EAAM0b,iCAAiCrb,KqE5xF1C6R,IAAA,SACAuJ,UACAzG,OAAK,SAAQ3U,GAAA,MAAcA,KAC3BJ,KAAA,SAAYI,GACjBL,EAAO0b,iCAAArb,KAELjD,SrEqyFF6d,EqE7xFC/c,UAAAyd,sBAAA,SAAAC,GAMF,MALM/c,MAAAqc,cAAA,EAAPrc,KAAAoC,MAAApC,KAKCgd,cAAAD,EAAA5G,OAAA,SAAA3U,GAAA,QAAAA,KAJCxB,KAAAid,UAAYjd,KACVkd,eAKJ9a,MAAApC,KAAAoC,MrE2xFU6a,UAAWjd,KAAKid,YAQxBb,EqE1xFgB/c,UAAC8d,YAAkB,SAAAC,GrE2xF/B,GAAIjc,GqE1xFAnB,IrE2xFJ,OAAOA,MqE1xFLqd,QAAArd,KAAAiX,oBAA+BxP,UAAWzH,KAAAiX,oBAAAvP,UAAAH,gBAAA6V,GAAA5M,KAAA,SAAApO,GAAA,MAAAjB,GAAA2b,sBAAA1a,MrEiyFhDga,EqE3xFO/c,UAAe2d,cAAA,SAAAvB,GACvB,GAAA6B,KrEuyFK,OqEryFN7B,GAAA1P,QAAA,SAAA3J,GrE2xFU,GAAImb,GAAaD,EAAe/W,QAChCnE,GAAM2J,QAAQ,SAAUvK,GqEzxF/BA,EAAAgL,OAAAmN,EAAApW,YAAAK,UACK0Z,EAAAC,EAAW,GAAnBhX,KAAA/E,GAKC+b,EAAAD,EAAA/W,arE4xFY+W,GqEjxFblB,EAAC/c,UAAA6d,YAAA,WAED,MAAAzd,GAAAmd,QAAA5c,KAAAoC,OrEuxFW+T,OAAO,SAAU3U,GAAQ,MAAOA,IAAQA,EAAKwE,IAAmC,IAA7BxE,EAAKwE,GAAG+P,QAAQ,YAQ5EqG,EqEvxFU/c,UAAAge,QAAA,SAAAG,EAAAC,GrEwxFN,MAAOzd,MqEvxFPgX,MAAAhY,IAAYwe,GAAO1F,OAAQ2F,IAC5BjN,KAAA,SAAAkN,GAAA,MAAAA,GAAA7O,QrE6xFHuN,EAAuB/c,UAAUwd,iCAAmC,SAAUxC,GqErxF7EA,EAAAsD,SACH,MAAetD,EAAAsD,OAAA7G,OAAA,GACNuD,EAAOuD,QAAY5d,KAAOqc,eAAmBD,EAAsByB,oBAAqBxD,EAAYsD,QAE9GtD,EAAAuD,QAAA5d,KAAAqc,gBAAAyB,SAAAzD,EAAAsD,OAAA,MC5IDvB,EAAAyB,oBAAA,SAAAE,GACA,WAAAA,EAAAhI,QAAA,KAAA+H,SAAAC,EAAAjH,MAAA,EAAAiH,EAAAvS,OAAA,OAAAsS,SAAAC,EAAA,KAEA3B,IAEApe,GAAA4B,QAAAwc,GAKA,SAAAne,EAAAD,EAAAH,GAeA,QAAAmgB,GAAAC,GACA,MAAApgB,GAAAqgB,EAAAD,ItE86FA,QAASC,GAAsBD,GAC9B,GAAIjY,GAAKqN,EAAI4K,EACb,MAAKjY,EAAK,GACT,KAAM,IAAImY,OAAM,uBAAyBF,EAAM,KAChD,OAAOjY,GsEh8FR,GAAAqN,IACA+K,mBAAA,GACAC,2BAAA,GACAC,iBAAA,GACAC,UAAA,EACAC,aAAA,EACAC,gCAAA,EACAC,mCAAA,EACAC,qCAAA,GACAC,qBAAA,GACAC,uBAAA,GACAC,kBAAA,GtEu7FAd,GAAee,KAAO,WACrB,MAAOngB,QAAOmgB,KAAK1L,IAEpB2K,EAAe5M,QAAU8M,EACzBjgB,EAAOD,QAAUggB,EACjBA,EAAehY,GAAK,IAIZ,CAEF,SAAU/H,EAAQD,EAASH,GAEjCA,EAAoB,GACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBI,EAAOD,QAAUH,EAAoB","file":"js/ui-components.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \".\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 88);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = _;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar modalFieldTemplateComponent_1 = __webpack_require__(3);\nexports.default = function (module) {\n    module.component('dialogEditorModalFieldTemplate', new modalFieldTemplateComponent_1.default);\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Controller for the Dialog Editor Modal Field Template component\n * @ngdoc controller\n * @name ModalFieldController\n */\nvar ModalFieldController = (function () {\n    function ModalFieldController() {\n    }\n    return ModalFieldController;\n}());\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorModalFieldTemplate\n * @description\n *    Component contains templates for the modal for each field type\n * @example\n * <dialog-editor-modal-field-template ng-switch-when=\"DialogFieldTextBox\"\n *                                     template=\"text-box.html\"\n *                                     modal-data=\"vm.modalData\">\n * </dialog-editor-modal-field-template>\n */\nvar ModalFieldTemplate = (function () {\n    function ModalFieldTemplate() {\n        /*@ngInject*/\n        this.template = function ($element, $attrs) { return __webpack_require__(86)(\"./\" + $attrs.template); };\n        this.template.$inject = [\"$element\", \"$attrs\"];\n        this.scope = true;\n        this.controllerAs = 'vm';\n        this.bindings = {\n            modalData: '=',\n            categories: '=?',\n            addEntry: '&?',\n            removeEntry: '&?',\n            currentCategoryEntries: '&?',\n            resolveCategories: '&?',\n        };\n    }\n    return ModalFieldTemplate;\n}());\nexports.default = ModalFieldTemplate;\n\n\n/***/ }),\n/* 4 */,\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\n/**\n * This is abstract controller for implementing shared methods between data table and tile views.\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name DataViewClass\n */\nvar DataViewClass = (function () {\n    /*@ngInject*/\n    DataViewClass.$inject = [\"MiQTranslateService\"];\n    function DataViewClass(MiQTranslateService) {\n        this.MiQTranslateService = MiQTranslateService;\n        this.currentPageView = 1;\n    }\n    /**\n     * Public method which will perform checking all entities.\n     * @memberof DataViewClass\n     * @function onCheckAll\n     * @param isChecked true | false based on checked value.\n     */\n    DataViewClass.prototype.onCheckAll = function (isChecked) {\n        var _this = this;\n        _.each(this.rows, function (oneRow) {\n            _this.onItemSelected({ item: oneRow, isSelected: isChecked });\n        });\n    };\n    /**\n     * Helper method which will pass sortId and isAscending to parent controller.\n     * @memberof DataViewClass\n     * @function onSortClick\n     * @param sortId id of sorted header column.\n     * @param isAscending true | false based on ascending order.\n     */\n    DataViewClass.prototype.onSortClick = function (sortId, isAscending) {\n        this.onSort({ headerId: sortId, isAscending: isAscending });\n    };\n    /**\n     * Helper method for calculating loading more items after selecting how many items per page should be visible.\n     * @memberof DataViewClass\n     * @function perPageClick\n     * @param item {Object} enhanced IToolbarItem with value.\n     */\n    DataViewClass.prototype.perPageClick = function (item) {\n        var maxPage = Math.ceil(this.settings.items / item.value);\n        this.currentPageView = this.currentPageView > maxPage ? maxPage : this.currentPageView;\n        var start = DataViewClass.calculateStartIndex(this.currentPageView, item.value);\n        this.loadMoreItems({ start: start, perPage: item.value });\n    };\n    /**\n     * Helper method for calculating what page should be visible, it works with perPage and total amount of values.\n     * @memberof DataViewClass\n     * @function setPage\n     * @param pageNumber {number} number of desired page, if this page is out of bound, it will be rounded.\n     */\n    DataViewClass.prototype.setPage = function (pageNumber) {\n        if (pageNumber > this.settings.total) {\n            this.currentPageView = this.settings.total;\n            pageNumber = this.currentPageView;\n        }\n        this.currentPageView = pageNumber;\n        var start = DataViewClass.calculateStartIndex(pageNumber, this.settings.perpage);\n        this.loadMoreItems({ start: start, perPage: this.settings.perpage });\n    };\n    DataViewClass.prototype.translateOf = function (start, end, total) {\n        return this.settings && this.settings.hasOwnProperty('translateTotalof') ?\n            this.settings.translateTotalOf(start, end, total) :\n            start + \" - \" + end + \" of \" + total;\n    };\n    DataViewClass.prototype.onItemButtonClick = function (item) {\n        if (item.hasOwnProperty('onclick')) {\n            new Function(item.onclick)();\n        }\n    };\n    DataViewClass.prototype.setPagingNumbers = function () {\n        if (this.settings.hasOwnProperty('current') && this.settings.hasOwnProperty('perpage')) {\n            this.settings.startIndex =\n                this.settings.startIndex ||\n                    DataViewClass.calculateStartIndex(this.settings.current, this.settings.perpage);\n            if (this.settings.current === this.settings.total) {\n                this.settings.endIndex = this.settings.items - 1;\n            }\n            else {\n                this.settings.endIndex = this.settings.current * this.settings.perpage - 1;\n            }\n        }\n    };\n    /**\n     * Helper static method for calculating start index based on pageNumber and number of visible items.\n     * @memberof DataViewClass\n     * @function calculateStartIndex\n     * @param pageNumber {number} current page number.\n     * @param perPage {number} how many of items are visible per page.\n     * @returns {number} start index for limit filter.\n     */\n    DataViewClass.calculateStartIndex = function (pageNumber, perPage) {\n        return (pageNumber - 1) * perPage;\n    };\n    return DataViewClass;\n}());\nexports.DataViewClass = DataViewClass;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for toolbar types. It holds string value of item's type.\n * @memberof miqStaticAssets\n * @ngdoc enum\n * @name ToolbarType\n */\nexports.ToolbarType = {\n    /**\n     * Button type: `button`\n     * @type {string}\n     */\n    BUTTON: 'button',\n    /**\n     * Button two state type: `buttonTwoState`\n     * @type {string}\n     */\n    BUTTON_TWO_STATE: 'buttonTwoState',\n    /**\n     * Button select type: `buttonSelect`\n     * @type {string}\n     */\n    BUTTON_SELECT: 'buttonSelect',\n    /**\n     * Custom type: `custom`\n     * @type {string}\n     */\n    CUSTOM: 'custom',\n    /**\n     * Separator type: `separator`\n     * @type {string}\n     */\n    SEPARATOR: 'separator'\n};\n\n\n/***/ }),\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 9 */,\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar services_1 = __webpack_require__(52);\nvar components_1 = __webpack_require__(49);\nvar angular = __webpack_require__(1);\nvar common;\n(function (common) {\n    common.app = angular.module('miqStaticAssets.common', []);\n    /*@ngInject*/\n    common.app.config([\"$windowProvider\", function ($windowProvider) {\n        var windowService = $windowProvider.$get();\n        if (!windowService.hasOwnProperty('__')) {\n            windowService.__ = function (translateString) { return translateString; };\n        }\n    }]);\n    services_1.default(common.app);\n    components_1.default(common.app);\n})(common || (common = {}));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar services_1 = __webpack_require__(64);\nvar components_1 = __webpack_require__(58);\nvar angular = __webpack_require__(1);\nvar dialogEditor;\n(function (dialogEditor) {\n    dialogEditor.app = angular.module('miqStaticAssets.dialogEditor', [\n        'ui.sortable',\n        'ngDragDrop',\n        'frapontillo.bootstrap-switch'\n    ]);\n    services_1.default(dialogEditor.app);\n    components_1.default(dialogEditor.app);\n})(dialogEditor || (dialogEditor = {}));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar services_1 = __webpack_require__(76);\nvar filters_1 = __webpack_require__(72);\nvar components_1 = __webpack_require__(68);\nvar angular = __webpack_require__(1);\nvar gtl;\n(function (gtl) {\n    gtl.app = angular.module('miqStaticAssets.gtl', []);\n    services_1.default(gtl.app);\n    filters_1.default(gtl.app);\n    components_1.default(gtl.app);\n})(gtl || (gtl = {}));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular = __webpack_require__(1);\nvar miqStaticAssets;\n(function (miqStaticAssets) {\n    angular.module('miqStaticAssets', [\n        'miqStaticAssets.toolbar',\n        'miqStaticAssets.common',\n        'miqStaticAssets.dialogEditor',\n        'miqStaticAssets.gtl',\n        'miqStaticAssets.siteSwitcher'\n    ]);\n})(miqStaticAssets || (miqStaticAssets = {}));\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar siteSwitcherComponent_1 = __webpack_require__(77);\nvar angular = __webpack_require__(1);\nvar siteSwitcher;\n(function (siteSwitcher) {\n    siteSwitcher.app = angular.module('miqStaticAssets.siteSwitcher', []);\n    siteSwitcher.app.component('miqSiteSwitcher', new siteSwitcherComponent_1.default);\n})(siteSwitcher || (siteSwitcher = {}));\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar services_1 = __webpack_require__(84);\nvar components_1 = __webpack_require__(78);\nvar angular = __webpack_require__(1);\nvar toolbar;\n(function (toolbar) {\n    toolbar.app = angular.module('miqStaticAssets.toolbar', ['ngSanitize']);\n    services_1.default(toolbar.app);\n    components_1.default(toolbar.app);\n})(toolbar || (toolbar = {}));\n\n\n/***/ }),\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class='dialog'>\\n  <div style=\\\"background-color: #f1f1f1; padding: 20px;\\\"\\n       ng-model='vm.dialogTabs[vm.service.activeTab].dialog_groups'\\n       ui-sortable='vm.sortableOptionsBox'\\n       ng-repeat='tab in vm.dialogTabs'\\n       ng-if='tab.position === vm.service.activeTab'>\\n    <!-- tab content -->\\n    <div ng-repeat='box in tab.dialog_groups track by $index'>\\n      <div class=\\\"panel panel-default\\\"\\n           data-drop='true'\\n           jqyoui-droppable='{multiple: true, onDrop: \\\"vm.droppableOptions\\\"}'\\n           ng-model='box.dialog_fields'>\\n        <div class=\\\"panel-heading\\\">\\n          <i class=\\\"pficon-edit\\\"\\n             ng-click='vm.editDialogModal(\\n               vm.service.activeTab,\\n               box.position\\n             )'></i>\\n          <strong>{{ box.label }}</strong>\\n          <button type=\\\"button\\\" class=\\\"close\\\"\\n                  ng-click=\\\"vm.removeBox(box.position)\\\">\\n            <span aria-hidden=\\\"true\\\">\\n              <i class=\\\"fa fa-times\\\"></i>\\n            </span>\\n          </button>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div ui-sortable='vm.sortableOptionsFields'\\n               ng-model='box.dialog_fields'>\\n            <div class=\\\"well well-lg nosort\\\"\\n                 ng-if='box.dialog_fields.length === 0'>\\n              <i class=\\\"fa fa-object-group\\\"></i>\\n              {{ 'Drag your components here' | translate }}\\n            </div>\\n            <div ng-repeat='field in box.dialog_fields'>\\n              <form class=\\\"form-horizontal\\\">\\n                <dialog-editor-field box-position=\\\"box.position\\\" field-data='field'></dialog-editor-field>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"blank-slate-pf nosort\\\"\\n         ng-if='tab.dialog_groups.length === 0'\\n         ng-click='vm.addBox()'>\\n      <div class=\\\"blank-slate-pf-icon\\\">\\n        <i class=\\\"fa fa-plus-circle\\\"></i>\\n      </div>\\n      <h1 translate>Start with adding a box</h1>\\n    </div>\\n    <div class=\\\"panel panel-default nosort\\\">\\n      <a ng-click='vm.addBox()' translate>\\n        <i class=\\\"pficon-add-circle-o\\\"></i>&nbsp;Create Box\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-switch on=\\\"vm.fieldData.type\\\" class=\\\"form-group\\\">\\n  <label class=\\\"control-label col-sm-2\\\">{{ vm.fieldData.label }}</label>\\n  <div class=\\\"col-sm-5\\\">\\n\\n    <!-- text box -->\\n    <input ng-switch-when=\\\"DialogFieldTextBox\\\"\\n           ng-model=\\\"vm.fieldData.default_value\\\"\\n           class=\\\"form-control\\\"\\n           type=\\\"{{ vm.fieldData.options.protected ? 'password' : 'text' }}\\\"\\n           placeholder=\\\"{{'Default value'|translate}}\\\">\\n\\n    <!-- text area -->\\n    <textarea ng-switch-when=\\\"DialogFieldTextAreaBox\\\"\\n              ng-model=\\\"vm.fieldData.default_value\\\"\\n              class=\\\"form-control\\\"\\n              rows=\\\"4\\\">\\n      {{ vm.fieldData.default_value }}\\n    </textarea>\\n\\n    <!-- check box -->\\n    <input ng-switch-when=\\\"DialogFieldCheckBox\\\"\\n           ng-model=\\\"vm.fieldData.default_value\\\"\\n           ng-true-value=\\\"'t'\\\"\\n           class=\\\"form-control\\\"\\n           type=\\\"checkbox\\\">\\n\\n    <!-- date control -->\\n    <input ng-switch-when=\\\"DialogFieldDateControl\\\"\\n           pf-datepicker options=\\\"vm.fieldData.options\\\"\\n           ng-disabled=\\\"true\\\"\\n           date=\\\"vm.fieldData.default_value\\\">\\n\\n    <!-- date time control -->\\n    <div ng-switch-when=\\\"DialogFieldDateTimeControl\\\">\\n      <div class=\\\"col-sm-6 dateTimePadding\\\">\\n        <input ng-model=\\\"vm.fieldData.default_value\\\"\\n               pf-datepicker options=\\\"vm.fieldData.dateOptions\\\"\\n               date=\\\"vm.fieldData.default_value\\\">\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <timepicker ng-model=\\\"vm.fieldData.default_value\\\"></timepicker>\\n      </div>\\n    </div>\\n\\n    <!-- drop down list -->\\n    <select ng-switch-when=\\\"DialogFieldDropDownList\\\"\\n            ng-model=\\\"vm.fieldData.default_value\\\"\\n            class=\\\"form-control\\\">\\n      <option ng-repeat=\\\"option in vm.fieldData.values\\\"\\n              value=\\\"{{ option[0] }}\\\">\\n        {{ option[1] }}\\n      </option>\\n    </select>\\n\\n    <!-- radio button -->\\n    <span ng-switch-when=\\\"DialogFieldRadioButton\\\"\\n          class=\\\"btn-group\\\">\\n      <label ng-repeat=\\\"option in vm.fieldData.values\\\"\\n             class=\\\"btn btn-primary\\\">\\n        <input type=\\\"radio\\\"\\n               ng-model=\\\"vm.fieldData.default_value\\\"\\n               name=\\\"vm.fieldData.name\\\"\\n               value=\\\"option[0]\\\">\\n        {{ option[1] }}\\n      </label>\\n    </span>\\n\\n    <!-- tag control -->\\n    <select ng-switch-when=\\\"DialogFieldTagControl\\\"\\n            class=\\\"form-control\\\">\\n      <option ng-repeat=\\\"option in vm.fieldData.values\\\"\\n              value=\\\"{{ option[0] }}\\\">\\n        {{ option[1] }}\\n      </option>\\n    </select>\\n\\n  </div>\\n  <div class=\\\"col-sm-5\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\"\\n            ng-click=\\\"vm.editDialogModal(\\n              vm.service.activeTab,\\n              vm.boxPosition,\\n              vm.fieldData.position\\n            )\\\">\\n      <span aria-hidden=\\\"true\\\">\\n        <i class=\\\"pficon-edit\\\"></i>\\n      </span>\\n    </button>\\n  </div>\\n</div>\\n\"\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- text check box -->\\n<div pf-form-group pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.default_value\\\"\\n         ng-true-value=\\\"'t'\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate }}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n\"\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- date time control -->\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Show Past Dates'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.options.show_past_dates\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n\"\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- any dynamic element -->\\n<div pf-form-group pf-label=\\\"{{'Entry Point'|translate}}\\\">\\n  <!-- TODO: until treepicker and API for it are in the SSUI -->\\n  <input ng-model=\\\"vm.modalData.resource_action.ae_namespace\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Show Refresh Button'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.show_refresh_button\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate }}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Load Values on Init'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.load_values_on_init\\\"\\n         switch-active=\\\"{{vm.modalData.show_refresh_button}}\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n\"\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- radio button -->\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.default_value\\\"\\n          ng-options=\\\"entry as entry[0] for entry in vm.modalData.values\\\">\\n    <option selected=\\\"selected\\\" value=\\\"\\\" translate>None</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Value type'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.data_type\\\">\\n    <option value=\\\"integer\\\" translate>Integer</option>\\n    <option selected=\\\"selected\\\" value=\\\"string\\\" translate>String</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort by'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_by\\\">\\n    <option value=\\\"none\\\" translate>None</option>\\n    <option value=\\\"description\\\" translate>Description</option>\\n    <option value=\\\"value\\\" translate>Value</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort order'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_order\\\">\\n    <option selected=\\\"selected\\\" value=\\\"ascending\\\" translate>Ascending</option>\\n    <option value=\\\"descending\\\" translate>Descending</option>\\n  </select>\\n</div>\\n<div pf-form-group class=\\\"form-inline\\\" pf-label=\\\"{{'Entries'|translate}}\\\" required>\\n  <div ng-repeat=\\\"entry in vm.modalData.values\\\">\\n    <input id=\\\"label\\\" name=\\\"label\\\"\\n           ng-model=\\\"entry[0]\\\" type=\\\"text\\\" placeholder=\\\"Key\\\" required/>\\n    <input id=\\\"label\\\" name=\\\"label\\\"\\n           ng-model=\\\"entry[1]\\\" type=\\\"text\\\" placeholder=\\\"Value\\\" required/>\\n    <a ng-click='vm.removeEntry(entry)'><i class='pficon-close'></i></a>\\n  </div>\\n  <a ng-click='vm.addEntry()'><i class='pficon-add-circle-o'></i></a>\\n</div>\\n\"\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- tag-contorl -->\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Category'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.category_id\\\"\\n          ng-options=\\\"category.id.toString() as category.description for category in vm.categories.resources\\\">\\n    <option selected=\\\"selected\\\" value=\\\"\\\" translate>None</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Single value'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.options.force_single_value\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Value type'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.data_type\\\">\\n    <option value=\\\"integer\\\" translate>Integer</option>\\n    <option selected=\\\"selected\\\" value=\\\"string\\\" translate>String</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort by'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_by\\\">\\n    <option value=\\\"none\\\" translate>None</option>\\n    <option value=\\\"description\\\" translate>Description</option>\\n    <option value=\\\"value\\\" translate>Value</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort order'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_order\\\">\\n    <option selected=\\\"selected\\\" value=\\\"ascending\\\" translate>Ascending</option>\\n    <option value=\\\"descending\\\" translate>Descending</option>\\n  </select>\\n</div>\\n<div pf-form-group class=\\\"form-inline\\\" pf-label=\\\"{{'Entries'|translate}}\\\" required>\\n  <div ng-repeat=\\\"entry in vm.currentCategoryEntries().children\\\">\\n    <input id=\\\"label\\\" name=\\\"label\\\"\\n           ng-model=\\\"entry.description\\\" type=\\\"text\\\" placeholder=\\\"Key\\\" readonly/>\\n  </div>\\n</div>\\n\"\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- text area box -->\\n<div pf-form-group pf-input-class=\\\"col-sm-9\\\" pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <textarea id=\\\"default_value\\\" name=\\\"default_value\\\"\\n            ng-model=\\\"vm.modalData.default_value\\\">\\n    {{ vm.modalData.default_value }}\\n  </textarea>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Validation'|translate}}\\\">\\n  <input id=\\\"validator_rule\\\" name=\\\"validator_rule\\\"\\n         ng-model=\\\"vm.modalData.validator_rule\\\"/>\\n</div>\\n\"\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- text box -->\\n<div pf-form-group pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <input id=\\\"default_value\\\" name=\\\"default_value\\\"\\n         ng-model=\\\"vm.modalData.default_value\\\"\\n         type=\\\"{{vm.modalData.options.protected ? 'password' : 'text'}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Protected'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.options.protected\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate }}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Validation'|translate}}\\\">\\n  <input id=\\\"validator_rule\\\" name=\\\"validator_rule\\\"\\n          ng-model=\\\"vm.modalData.validator_rule\\\"/>\\n</div>\\n\"\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul ui-sortable='vm.sortableOptions'\\n    ng-model='vm.tabList'\\n    class='nav nav-tabs'\\n    data-tabs='tabs'>\\n  <li ng-class='{active: tab.active}' ng-repeat='tab in vm.tabList'>\\n    <a class=\\\"select-tab\\\" ng-click='vm.selectTab(tab.position)' data-toggle='tab'>\\n      <i class=\\\"pficon-edit\\\" ng-click='vm.editDialogModal(tab.position)'></i>\\n      {{ tab.label }}\\n      <i class='delete-tab glyphicon glyphicon-remove' ng-click='vm.removeTab(tab.position)'></i>\\n    </a>\\n  </li>\\n  <li class='nosort'>\\n    <a ng-click='vm.addTab()'>\\n      <i class='pficon-add-circle-o'></i>\\n      &nbsp; {{ 'Create Tab' | translate }}\\n    </a>\\n  </li>\\n</ul>\\n\"\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"container-fluid container-cards-pf\\\">\\n  <div class=\\\"row row-cards-pf\\\">\\n    <div class=\\\"col-xs-6 col-sm-4 col-md-4\\\"\\n         ng-repeat='dialogField in vm.fields'\\n         data-drag=\\\"true\\\"\\n         jqyoui-draggable=\\\"{animate:true, placeholder: 'keep', deepCopy: true}\\\"\\n         data-jqyoui-options=\\\"{revert: 'invalid', helper: 'clone'}\\\"\\n         ng-model=\\\"dialogField.placeholders\\\">\\n      <div class=\\\"card-pf card-pf-aggregate-status\\\">\\n        <h2 class=\\\"card-pf-title\\\">\\n          {{dialogField.label}}\\n        </h2>\\n        <div class=\\\"card-pf-body\\\">\\n          <p class=\\\"card-pf-aggregate-status-notifications\\\">\\n            <span class=\\\"card-pf-aggregate-status-notification\\\">\\n              <i ng-class=\\\"dialogField.icon\\\"></i>\\n            </span>\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div><!-- /row -->\\n</div><!-- /container -->\\n\"\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"modal-header\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\" aria-hidden=\\\"true\\\">\\n    <span class=\\\"pficon pficon-close\\\"></span>\\n  </button>\\n  <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" translate>Edit Dialog field</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <ul class=\\\"nav nav-tabs dialog-editor-tab-list\\\">\\n    <li ng-class=\\\"{active:vm.modalTabIsSet('element_information')}\\\">\\n      <a ng-click=\\\"vm.modalTabSet('element_information')\\\" translate>Element Information</a>\\n    </li>\\n    <li ng-if=\\\"vm.element === 'field'\\\" ng-class=\\\"{active:vm.modalTabIsSet('options')}\\\">\\n      <a ng-click=\\\"vm.modalTabSet('options')\\\" translate>Options</a>\\n    </li>\\n    <li ng-if=\\\"vm.element === 'field'\\\" ng-class=\\\"{active:vm.modalTabIsSet('advanced')}\\\">\\n      <a ng-click=\\\"vm.modalTabSet('advanced')\\\" translate>Advanced</a>\\n    </li>\\n  </ul>\\n  <!-- general details same for each component - element information -->\\n  <div ng-show=\\\"vm.modalTabIsSet('element_information')\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <div pf-form-group pf-label=\\\"{{'Label'|translate}}\\\" required>\\n        <input id=\\\"label\\\" name=\\\"label\\\"\\n               ng-model=\\\"vm.modalData.label\\\" type=\\\"text\\\" required/>\\n      </div>\\n      <div ng-if=\\\"vm.element === 'field'\\\"\\n           pf-form-group\\n           pf-label=\\\"{{'Name'|translate}}\\\" required>\\n        <input id=\\\"name\\\" name=\\\"name\\\"\\n               ng-model=\\\"vm.modalData.name\\\" type=\\\"text\\\" required/>\\n      </div>\\n      <div pf-form-group pf-input-class=\\\"col-sm-9\\\" pf-label=\\\"{{'Description'|translate}}\\\">\\n        <textarea id=\\\"description\\\" name=\\\"description\\\" ng-model=\\\"vm.modalData.description\\\">\\n          {{ vm.modalData.description }}\\n        </textarea>\\n      </div>\\n      <div ng-if=\\\"vm.element === 'field' && vm.modalData.type !== 'DialogFieldTagControl'\\\"\\n           pf-form-group\\n           pf-label=\\\"{{'Dynamic'|translate}}\\\">\\n        <input bs-switch\\n               ng-model=\\\"vm.modalData.dynamic\\\"\\n               type=\\\"checkbox\\\"\\n               switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n               switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n      </div>\\n    </form>\\n  </div>\\n  <!-- field specific details -->\\n  <div ng-show=\\\"vm.modalTabIsSet('options')\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <div ng-if=\\\"!vm.modalData.dynamic\\\" ng-switch on=\\\"vm.modalData.type\\\">\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldTextBox\\\"\\n                                            template=\\\"text-box.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldTextAreaBox\\\"\\n                                            template=\\\"text-area-box.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldCheckBox\\\"\\n                                            template=\\\"check-box.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldDateControl\\\"\\n                                            template=\\\"date-time-control.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldDateTimeControl\\\"\\n                                            template=\\\"date-time-control.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldRadioButton\\\"\\n                                            template=\\\"radio-button-drop-down-list.html\\\"\\n                                            add-entry=\\\"vm.addEntry\\\"\\n                                            remove-entry=\\\"vm.removeEntry\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldDropDownList\\\"\\n                                            template=\\\"radio-button-drop-down-list.html\\\"\\n                                            add-entry=\\\"vm.addEntry\\\"\\n                                            remove-entry=\\\"vm.removeEntry\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldTagControl\\\"\\n                                            template=\\\"tag-control.html\\\"\\n                                            current-category-entries=\\\"vm.currentCategoryEntries\\\"\\n                                            categories=\\\"vm.categories\\\"\\n                                            resolve-categories=\\\"vm.resolveCategories\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n      </div>\\n      <div ng-if=\\\"vm.modalData.dynamic\\\">\\n        <dialog-editor-modal-field-template template=\\\"dynamic.html\\\">\\n        </dialog-editor-modal-field-template>\\n      </div>\\n    </form>\\n  </div>\\n  <!-- general details same for each field - advanced -->\\n  <div ng-show=\\\"vm.modalTabIsSet('advanced')\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <div pf-form-group pf-label=\\\"{{'Reconfigurable'|translate}}\\\">\\n        <input bs-switch\\n               ng-model=\\\"vm.modalData.reconfigurable\\\"\\n               type=\\\"checkbox\\\"\\n               switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n               switch-off-text=\\\"{{'No'|translate}}\\\" >\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-danger\\\"\\n          type=\\\"button\\\"\\n          ng-click=\\\"vm.deleteField()\\\" translate>Delete</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"$dismiss()\\\" translate>Cancel</button>\\n  <button type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"vm.saveDialogFieldDetails()\\\"\\n          ng-disabled=\\\"vm.modalUnchanged()\\\" translate>Save\\n  </button>\\n</div>\\n\"\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"miq-data-table\\\">\\n  <div ng-if=\\\"tableCtrl.settings.isLoading\\\" class=\\\"spinner spinner-lg\\\"></div>\\n  <div class=\\\"row miq-pagination\\\"\\n       ng-if=\\\"tableCtrl.settings && tableCtrl.settings.sortBy && (tableCtrl.settings.isLoading || tableCtrl.rows.length !== 0)\\\">\\n    <div ng-if=\\\"!tableCtrl.settings.hideSelect\\\"\\n         class=\\\"miq-select-all col-md-2 col-lg-2 col-xs-2\\\">\\n      <label>{{tableCtrl.settings.selectAllTitle}}: </label>\\n      <input type=\\\"checkbox\\\" ng-model=\\\"isChecked\\\" ng-click=\\\"tableCtrl.onCheckAll(isChecked)\\\" title=\\\"{{tableCtrl.settings.selectAllTitle}}\\\" />\\n    </div>\\n    <miq-sort-items ng-if=\\\"tableCtrl.settings.sortBy\\\"\\n                    class=\\\"miq-sort-items col-md-2 col-lg-2 col-xs-2\\\"\\n                    sort-object=\\\"tableCtrl.settings.sortBy\\\"\\n                    headers=\\\"tableCtrl.columns\\\"\\n                    drop-down-class=\\\"tableCtrl.settings.dropDownClass\\\"\\n                    on-sort=\\\"tableCtrl.onSortClick(sortObject.colId, isAscending)\\\"></miq-sort-items>\\n    <div class=\\\"col-md-7 col-lg-7 col-xs-7\\\">\\n      <div class=\\\"miq-pager\\\">\\n        <div class=\\\"miq-per-page\\\">\\n          <miq-toolbar-list on-item-click=\\\"tableCtrl.perPageClick(item)\\\"\\n                            drop-down-class=\\\"tableCtrl.settings.dropDownClass\\\"\\n                            toolbar-list=\\\"tableCtrl.perPage\\\"></miq-toolbar-list>\\n        </div>\\n        <div class=\\\"miq-paging\\\" ng-if=\\\"tableCtrl.settings.current\\\">\\n          <miq-paging settings=\\\"tableCtrl.settings\\\" on-change-page=\\\"tableCtrl.setTablePage(pageNumber)\\\"></miq-paging>\\n        </div>\\n      </div>\\n    </div>\\n    <div ng-if=\\\"tableCtrl.settings.items\\\" class=\\\"col-md-1 col-lg-1 col-xs-1 miq-page-counter\\\">\\n      <label>\\n        {{tableCtrl.translateOf(tableCtrl.settings.startIndex, tableCtrl.settings.endIndex, tableCtrl.settings.items)}}\\n      </label>\\n    </div>\\n  </div>\\n  <table class=\\\"table table-bordered table-striped table-hover miq-table-with-footer miq-table\\\"\\n         ng-if=\\\"tableCtrl.rows && tableCtrl.rows.length !== 0\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"narrow\\\">\\n\\n      </th>\\n      <th ng-if=\\\"$index !== 0\\\"\\n          ng-repeat=\\\"column in tableCtrl.columns track by $index\\\"\\n          ng-click=\\\"tableCtrl.onSortClick($index, !!tableCtrl.settings.sortBy && !tableCtrl.settings.sortBy.isAscending)\\\"\\n          ng-class=\\\"tableCtrl.getColumnClass(column)\\\">\\n        {{column.text}}\\n        <div class=\\\"pull-right\\\" ng-if=\\\"tableCtrl.isFilteredBy(column)\\\" >\\n          <i class=\\\"fa\\\" ng-class=\\\"tableCtrl.getSortClass()\\\"></i>\\n        </div>\\n      </th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr ng-repeat=\\\"row in tableCtrl.rows\\\"\\n        ng-class=\\\"{active : row.selected}\\\"\\n        ng-click=\\\"tableCtrl.onRowClick({item: row, event: $event})\\\">\\n      <td ng-repeat=\\\"(columnKey, column) in tableCtrl.columns\\\"\\n          ng-class=\\\"{\\n            narrow: row.cells[columnKey].is_checkbox || row.cells[columnKey].icon || row.cells[columnKey].is_button\\n          }\\\">\\n        <input ng-if=\\\"row.cells[columnKey].is_checkbox && !tableCtrl.settings.hideSelect\\\"\\n               ng-click=\\\"tableCtrl.onItemSelected({item: row, isSelected: isSelected})\\\"\\n               onclick=\\\"event.stopPropagation();\\\"\\n               type=\\\"checkbox\\\"\\n               ng-model=\\\"isSelected\\\"\\n               name=\\\"check_{{row.id}}\\\"\\n               value=\\\"{{row.id}}\\\"\\n               ng-checked=\\\"row.checked\\\"\\n               class=\\\"list-grid-checkbox\\\">\\n        <i ng-if=\\\"row.cells[columnKey].icon && tableCtrl.isIconOrImage(row, columnKey)\\\"\\n           class=\\\"{{row.cells[columnKey].icon}}\\\"\\n           title=\\\"{{row.cells[columnKey].title}}\\\">\\n          <i ng-if=\\\"row.cells[columnKey].icon2\\\" ng-class=\\\"row.cells[columnKey].icon2\\\"></i>\\n        </i>\\n        <img ng-if=\\\"row.cells[columnKey].icon === null && tableCtrl.isIconOrImage(row, columnKey)\\\"\\n             ng-src=\\\"{{row.img_url}}\\\"\\n             alt=\\\"{{row.cells[columnKey].title}}\\\"\\n             title=\\\"{{row.cells[columnKey].title}}\\\" />\\n        <span ng-if=\\\"row.cells[columnKey].text && !row.cells[columnKey].is_button\\\">\\n              {{row.cells[columnKey].text}}\\n        </span>\\n        <button ng-if=\\\"row.cells[columnKey].is_button && row.cells[columnKey].onclick\\\"\\n                class=\\\"btn btn-primary\\\"\\n                title=\\\"{{row.cells[columnKey].title}}\\\"\\n                alt=\\\"{{row.cells[columnKey].title}}\\\"\\n                ng-click=\\\"tableCtrl.onItemButtonClick(row.cells[columnKey])\\\">\\n          {{row.cells[columnKey].text}}\\n        </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ul class=\\\"pagination\\\">\\n  <li>\\n    <a ng-class=\\\"{disabled: pagingCtrl.settings.current === 1}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: 1})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-double-left\\\"></span>\\n    </a>\\n  </li>\\n  <li>\\n    <a ng-class=\\\"{disabled: pagingCtrl.settings.current === 1}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: pagingCtrl.settings.current - 1})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-left\\\"></span>\\n    </a>\\n  </li>\\n  <li ng-repeat=\\\"page in pagingCtrl.updatePages(pagingCtrl.settings.total) track by $index\\\">\\n    <a ng-class=\\\"{disabled: pagingCtrl.settings.current === (page + 1)}\\\"\\n       href=\\\"javascript:void(0)\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: page + 1})\\\">\\n      {{page + 1}}\\n    </a>\\n  </li>\\n  <li>\\n    <a ng-class=\\\"{disabled: (pagingCtrl.settings.current) === pagingCtrl.settings.total}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: (pagingCtrl.settings.current + 1)})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-right\\\"></span>\\n    </a>\\n  </li>\\n  <li>\\n    <a ng-class=\\\"{disabled: (pagingCtrl.settings.current) === pagingCtrl.settings.total}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: pagingCtrl.settings.total})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-double-right\\\"></span>\\n    </a>\\n  </li>\\n</ul>\\n\"\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"miq-tile-section\\\">\\n    <div ng-if=\\\"tileCtrl.settings.isLoading\\\" class=\\\"spinner spinner-lg\\\"></div>\\n    <div class=\\\"row miq-pagination\\\"\\n         ng-if=\\\"tileCtrl.settings && tileCtrl.settings.sortBy && (tileCtrl.settings.isLoading || tileCtrl.rows.length !== 0)\\\">\\n      <div class=\\\"miq-select-all col-md-2 col-lg-2 col-xs-2\\\"\\n           ng-if=\\\"!tileCtrl.settings.hideSelect\\\">\\n        <label>{{tileCtrl.settings.selectAllTitle}}: </label>\\n        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked\\\" ng-click=\\\"tileCtrl.onCheckAllTiles(isChecked)\\\" title=\\\"{{tileCtrl.settings.selectAllTitle}}\\\" />\\n      </div>\\n      <miq-sort-items ng-if=\\\"tileCtrl.settings.sortBy\\\"\\n                      class=\\\"miq-sort-items col-md-2 col-lg-2 col-xs-2\\\"\\n                      sort-object=\\\"tileCtrl.settings.sortBy\\\"\\n                      headers=\\\"tileCtrl.columns\\\"\\n                      drop-down-class=\\\"tileCtrl.settings.dropDownClass\\\"\\n                      on-sort=\\\"tileCtrl.onSortClick(sortObject.colId, isAscending)\\\"></miq-sort-items>\\n      <div class=\\\"col-md-7 col-lg-7 col-xs-7\\\">\\n        <div class=\\\"miq-pager\\\">\\n          <div class=\\\"miq-per-page\\\">\\n            <miq-toolbar-list on-item-click=\\\"tileCtrl.perPageClick(item)\\\"\\n                              drop-down-class=\\\"tileCtrl.settings.dropDownClass\\\"\\n                              toolbar-list=\\\"tileCtrl.perPage\\\"></miq-toolbar-list>\\n          </div>\\n          <div class=\\\"miq-paging\\\" ng-if=\\\"tileCtrl.settings.current\\\">\\n            <miq-paging settings=\\\"tileCtrl.settings\\\" on-change-page=\\\"tileCtrl.setPage(pageNumber)\\\"></miq-paging>\\n          </div>\\n        </div>\\n      </div>\\n      <div ng-if=\\\"tileCtrl.settings.items\\\" class=\\\"col-md-1 col-lg-1 col-xs-1 miq-page-counter\\\">\\n        <label>\\n          {{tileCtrl.translateOf(tileCtrl.settings.startIndex, tileCtrl.settings.endIndex, tileCtrl.settings.items)}}\\n        </label>\\n      </div>\\n    </div>\\n  <div pf-card-view\\n       config=\\\"tileCtrl.options\\\"\\n       items=\\\"tileCtrl.rows\\\"\\n       class=\\\"miq-tile-view\\\"\\n       ng-class=\\\"tileCtrl.tileClass()\\\">\\n    <div ng-switch=\\\"config.type\\\">\\n      <ng-switch-when ng-switch-when=\\\"small\\\">\\n        <div class=\\\"miq-tile-head\\\">\\n          <a href=\\\"javascript:void(0)\\\" title=\\\"{{config.fetchTileName(item)}}\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">{{config.fetchTileName(item) | limitToSuffix : 5 : 5 }}</a>\\n        </div>\\n        <div class=\\\"miq-quadicon\\\">\\n          <a href=\\\"javascript:void(0)\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">\\n            <div ng-bind-html=\\\"config.trustAsHtmlQuadicon(item)\\\"></div>\\n          </a>\\n        </div>\\n      </ng-switch-when>\\n      <ng-switch-when ng-switch-when=\\\"big\\\">\\n        <a href=\\\"javascript:void(0)\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">{{config.fetchTileName(item)}}</a>\\n        <div class=\\\"row miq-row-margin-only-top \\\">\\n          <div class=\\\"col-md-3 col-lg-3 col-xs-3 miq-icon-section\\\">\\n            <a href=\\\"javascript:void(0)\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">\\n              <div ng-bind-html=\\\"config.trustAsHtmlQuadicon(item)\\\"></div>\\n            </a>\\n          </div>\\n          <div class=\\\"col-md-9 col-lg-9 col-xs-9 miq-info-section\\\">\\n            <dl class=\\\"dl-horizontal tile\\\">\\n              <dt ng-repeat-start=\\\"(key, header) in config.columns | limitTo: 7 track by $index\\\" ng-if=\\\"header.text && header.text.indexOf('Name') === -1\\\" title=\\\"{{header.text}}\\\">{{header.text}}:</dt>\\n              <dd ng-repeat-end ng-if=\\\"header.text && header.text.indexOf('Name') === -1\\\" title=\\\"{{item.cells[key].text}}\\\">{{item.cells[key].text | limitToSuffix : 25 : 25}}</dd>\\n            </dl>\\n            <div ng-repeat=\\\"(columnKey, column) in config.columns\\\"\\n                 ng-if=\\\"item.cells[columnKey].is_button && item.cells[columnKey].onclick\\\"\\n                 align=\\\"right\\\">\\n              <button class=\\\"btn btn-primary\\\"\\n                      title=\\\"{{item.cells[columnKey].title}}\\\"\\n                      alt=\\\"{{item.cells[columnKey].title}}\\\"\\n                      ng-click=\\\"config.onButtonItemClick(item.cells[columnKey])\\\">\\n                {{item.cells[columnKey].text}}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-switch-when>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"uib-dropdown miq-siteswitcher\\\">\\n  <button class=\\\"btn btn-link uib-dropdown-toggle\\\" type=\\\"button\\\" id=\\\"domain-switcher\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n    <span class=\\\"fa fa-lg fa-th miq-siteswitcher-icon\\\"></span>\\n  </button>\\n  <div class=\\\"uib-dropdown-menu uib-dropdown-menu-right\\\" aria-labelledby=\\\"domain-switcher\\\">\\n    <div ng-repeat=\\\"site in ctrl.sites\\\" class=\\\"miq-siteswitcher-entry\\\">\\n      <a class=\\\"miq-siteswitcher-link\\\" ng-href=\\\"{{site.url}}\\\" target=\\\"_blank\\\">\\n        <span title=\\\"{{site.tooltip}}\\\" class=\\\"fa fa-3x\\\" ng-class=\\\"site.iconClass\\\"></span>\\n        <div>{{site.title}}</div>\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<button title=\\\"{{toolbarButton.title}}\\\"\\n        data-explorer=\\\"{{toolbarButton.explorer}}\\\"\\n        data-confirm-tb=\\\"{{toolbarButton.confirm}}\\\"\\n        id=\\\"{{toolbarButton.id}}\\\"\\n        name=\\\"{{toolbarButton.name}}\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-default\\\"\\n        data-click=\\\"{{toolbarButton.id}}\\\"\\n        data-url=\\\"{{toolbarButton.url}}\\\"\\n        data-url_parms=\\\"{{toolbarButton.url_parms}}\\\"\\n        data-prompt=\\\"{{toolbarButton.prompt}}\\\"\\n        data-popup=\\\"{{toolbarButton.popup}}\\\"\\n        ng-class=\\\"{active: toolbarButton.selected, disabled: !toolbarButton.enabled}\\\"\\n        ng-hide=\\\"toolbarButton.hidden\\\"\\n        ng-click=\\\"onItemClick({item: toolbarButton, $event: $event})\\\">\\n  <i ng-if=\\\"toolbarButton.icon && toolbarButton.text\\\" class=\\\"{{toolbarButton.icon}}\\\" style=\\\"margin-right: 5px;\\\"></i>\\n  <i ng-if=\\\"toolbarButton.icon && !toolbarButton.text\\\" class=\\\"{{toolbarButton.icon}}\\\"></i>\\n  <img ng-if=\\\"toolbarButton.img_url && !toolbarButton.icon\\\" ng-src=\\\"{{toolbarButton.img_url}}\\\"\\n       data-enabled=\\\"{{toolbarButton.img_url}}\\\"\\n       data-disabled=\\\"{{toolbarButton.img_url}}\\\">\\n  {{toolbarButton.text}}\\n</button>\\n\"\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"btn-group\\\" ng-class=\\\"vm.dropDownClass\\\" uib-dropdown ng-if=\\\"vm.isEmpty\\\">\\n  <button type=\\\"button\\\" uib-dropdown-toggle class=\\\"btn uib-dropdown-toggle btn-default\\\"\\n          ng-class=\\\"{disabled: !vm.toolbarList.enabled}\\\" title=\\\"{{vm.toolbarList.title}}\\\">\\n    <i class=\\\"{{vm.toolbarList.icon}}\\\" style=\\\"margin-right: 5px;\\\" ng-if=\\\"vm.toolbarList.icon\\\"></i>\\n    {{vm.toolbarList.text}}\\n    <span class=\\\"caret\\\"></span>\\n  </button>\\n  <ul class=\\\"uib-dropdown-menu\\\" role=\\\"menu\\\">\\n    <li ng-repeat=\\\"item in vm.toolbarList.items track by $index\\\" ng-class=\\\"{disabled: !item.enabled}\\\">\\n      <a ng-if=\\\"item.type !== 'separator'\\\"\\n         ng-hide=\\\"item.hidden\\\"\\n         href=\\\"\\\"\\n         title=\\\"{{item.title}}\\\"\\n         data-explorer=\\\"{{item.explorer}}\\\"\\n         data-confirm-tb=\\\"{{item.confirm}}\\\"\\n         ng-click=\\\"vm.onItemClick({item: item, $event: $event})\\\"\\n         data-function=\\\"{{item.data.function}}\\\"\\n         data-function-data=\\\"{{item.data['function-data']}}\\\"\\n         data-target=\\\"{{item.data.target}}\\\"\\n         data-toggle=\\\"{{item.data.toggle}}\\\"\\n         data-click=\\\"{{item.id}}\\\"\\n         name=\\\"{{item.id}}\\\"\\n         id=\\\"{{item.id}}\\\"\\n         data-url_parms=\\\"{{item.url_parms}}\\\"\\n         data-prompt=\\\"{{item.prompt}}\\\"\\n         data-popup=\\\"{{item.popup}}\\\"\\n         data-url=\\\"{{item.url}}\\\">\\n        <i ng-if=\\\"item.icon && item.text\\\" class=\\\"{{item.icon}}\\\" style=\\\"margin-right: 5px;\\\"></i>\\n        <i ng-if=\\\"item.icon && !item.text\\\" class=\\\"{{item.icon}}\\\"></i>\\n        <img ng-if=\\\"item.img_url && !item.icon\\\" ng-src=\\\"{{item.img_url}}\\\"\\n             data-enabled=\\\"{{item.img_url}}\\\"\\n             data-disabled=\\\"{{item.img_url}}\\\">\\n        {{item.text}}\\n      </a>\\n      <div ng-if=\\\"item.type === 'separator'\\\" class=\\\"divider \\\" role=\\\"presentation\\\" ng-hide=\\\"item.hidden\\\"></div>\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"toolbar-pf-actions miq-toolbar-actions\\\">\\n  <div class=\\\"form-group miq-toolbar-group\\\"\\n       ng-repeat=\\\"toolbarItem in vm.toolbarItems\\\"\\n       ng-if=\\\"vm.hasContent(toolbarItem)\\\">\\n    <ng-repeat ng-repeat=\\\"item in toolbarItem \\\">\\n      <miq-toolbar-button ng-if=\\\"item.type === vm.getButtonType()\\\"\\n                          toolbar-button=\\\"item\\\"\\n                          on-item-click=\\\"vm.onItemClick(item, $event)\\\">\\n      </miq-toolbar-button>\\n      <miq-toolbar-button ng-if=\\\"item.type === vm.getButtonTwoState() && item.id.indexOf('view_') === -1\\\"\\n                          toolbar-button=\\\"item\\\"\\n                          on-item-click=\\\"vm.onItemClick(item, $event)\\\">\\n      </miq-toolbar-button>\\n      <miq-toolbar-list ng-if=\\\"item.type === vm.getToolbarListType() && item.items.length > 0\\\"\\n                        toolbar-list=\\\"item\\\"\\n                        on-item-click=\\\"vm.onItemClick(item, $event)\\\">\\n      </miq-toolbar-list>\\n      <div ng-if=\\\"item.name == 'custom' && item.args && item.args.html\\\"\\n           ng-bind-html=\\\"vm.trustAsHtml(item.args.html)\\\"\\n           class=\\\"miq-custom-html\\\"></div>\\n    </ng-repeat>\\n  </div>\\n  <miq-toolbar-view toolbar-views=\\\"vm.toolbarViews\\\"\\n                    on-item-click=\\\"vm.onViewClick({item: item, $event: $event})\\\"\\n                    class=\\\"miq-view-list\\\">\\n  </miq-toolbar-view>\\n</div>\\n\"\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"toolbar-pf-view-selector pull-right form-group\\\">\\n  <button class=\\\"btn btn-link\\\"\\n          ng-repeat=\\\"item in vm.toolbarViews\\\"\\n          ng-class=\\\"{active: item.selected}\\\"\\n          title=\\\"{{item.title}}\\\"\\n          id=\\\"{{item.id}}\\\"\\n          data-url=\\\"{{item.url}}\\\"\\n          data-url_parms=\\\"{{item.url_parms}}\\\"\\n          data-prompt=\\\"{{item.prompt}}\\\"\\n          data-popup=\\\"{{item.popup}}\\\"\\n          ng-click=\\\"vm.onItemClick({item: item, $event: $event})\\\"\\n          name=\\\"{{item.name}}\\\">\\n    <i class=\\\"{{item.icon}}\\\" style=\\\"\\\"></i>\\n  </button>\\n</div>\\n\"\n\n/***/ }),\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sortItemsComponent_1 = __webpack_require__(50);\nexports.default = function (module) {\n    module.component('miqSortItems', new sortItemsComponent_1.default);\n};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\n/**\n * Controller for sort items component, it filters headers to fit config object of `pf-sort`.\n * @memberof miqStaticAssets.common\n * @ngdoc controller\n * @name SortItemsController\n */\nvar SortItemsController = (function () {\n    /* @ngInject */\n    SortItemsController.$inject = [\"$element\", \"$timeout\"];\n    function SortItemsController($element, $timeout) {\n        this.$element = $element;\n        this.$timeout = $timeout;\n        this.initOptions();\n    }\n    /**\n     * Angular's method for checking one way data bounded properties changes.\n     * @memberof SortItemsController\n     * @function $onChanges\n     * @param changesObj {Object} angular changes object.\n     */\n    SortItemsController.prototype.$onChanges = function (changesObj) {\n        if (changesObj.headers) {\n            this.fillFields();\n            if (this.sortObject) {\n                this.setSortItem();\n            }\n        }\n        if (changesObj.dropDownClass) {\n            this.applyClass();\n        }\n    };\n    SortItemsController.prototype.$postLink = function () {\n        var _this = this;\n        //we have to wait for rendering of components, hence $timeout\n        this.$timeout(function () { return _this.applyClass(); });\n    };\n    /**\n     * Public method for setting item which is currently sorted by. It will take id of object in `headers` as `colId`,\n     * it's text as actual Id and same applies to `title`.\n     * @memberof SortItemsController\n     * @function setSortItem\n     */\n    SortItemsController.prototype.setSortItem = function () {\n        if (this.sortObject && this.sortObject.sortObject && this.sortObject && this.sortObject.sortObject.text) {\n            this.options.currentField = {\n                colId: _.findIndex(this.headers, this.sortObject.sortObject),\n                id: this.sortObject.sortObject.text.toLowerCase(),\n                title: this.sortObject.sortObject.text\n            };\n            this.options.isAscending = this.sortObject.isAscending;\n        }\n    };\n    /**\n     * Public method which is called after constructing this controller. It will set default values for config object,\n     * along side with sort method.\n     * @memberof SortItemsController\n     * @function initOptions\n     */\n    SortItemsController.prototype.initOptions = function () {\n        var _this = this;\n        this.options = {\n            fields: [],\n            onSortChange: function (item, isAscending) { return _this.onSort({ sortObject: item, isAscending: isAscending }); },\n            currentField: {}\n        };\n    };\n    /**\n     * Private method which will filter out and transform headers to config object. This function will filter out all\n     * columns which has `is_narrow` and no `text` is set fot them. Also it will use each header key as `colId`,\n     * text as `id` and again text as `title`.\n     * @memberof SortItemsController\n     * @function fillFields\n     */\n    SortItemsController.prototype.fillFields = function () {\n        var _this = this;\n        _.each(this.headers, function (oneCol, key) {\n            if (!oneCol.hasOwnProperty('is_narrow') && oneCol.hasOwnProperty('text')) {\n                _this.options.fields.push({\n                    colId: key,\n                    id: oneCol.text.toLowerCase(),\n                    title: oneCol.text\n                });\n            }\n        });\n    };\n    /**\n     * Method for applying additional class for dropdown.\n     * dropDownClass can be either string of classes, or array.\n     */\n    SortItemsController.prototype.applyClass = function () {\n        if (this.dropDownClass) {\n            Array.isArray(this.dropDownClass) ? (_a = this.$element.find('.uib-dropdown')).addClass.apply(_a, this.dropDownClass) :\n                this.$element.find('.uib-dropdown').addClass(this.dropDownClass);\n        }\n        var _a;\n    };\n    return SortItemsController;\n}());\nexports.SortItemsController = SortItemsController;\n/**\n * @description\n *    Component for showing sort component. See {@link miqStaticAssets.common.SortItemsController} on how functions\n *    and properties are handled, This component requires `pf-sort` (see\n *    <a href=\"http://angular-patternfly.rhcloud.com/#/api/patternfly.sort.directive:pfSort\">patternfly's\n *    implemetnation</a>) component to be part of application scope.\n *    If you do not provide such component no sort will be show. `pf-sort` requires `config` property which consists of:\n *    ```javascript\n *    config = {\n *      fields: [],\n *      onSortChange: (item: any, isAscending: boolean) => void,\n *      currentField: {}\n *    }\n *    ```\n * @memberof miqStaticAssets.common\n * @ngdoc component\n * @name miqSortItems\n * @attr {Expression} onSort function which is called after sorting has changed.\n * @attr {Object} headers items which will be present in sort chooser.\n * @attr {Object} sortObject object which is currently sorted by.\n * @example\n * <miq-sort-items on-sort=\"ctrl.onSort(sortObject, isAscending)\"\n *                 headers=\"ctrl.headers\"\n *                 sort-object=\"ctrl.currentSortObject\">\n * </miq-sort-items>\n */\nvar SortItems = (function () {\n    function SortItems() {\n        this.replace = true;\n        this.template = \"<div pf-sort config=\\\"vm.options\\\"></div>\";\n        this.controller = SortItemsController;\n        this.controllerAs = 'vm';\n        this.bindings = {\n            onSort: '&',\n            headers: '<',\n            sortObject: '<',\n            dropDownClass: '<'\n        };\n    }\n    return SortItems;\n}());\nexports.default = SortItems;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultEndpoints = (function () {\n    function DefaultEndpoints() {\n        this.listDataTable = '/list';\n        this.deleteItemDataTable = '/delete';\n        this.validateItem = '/validate';\n        this.createItem = '/create';\n        this.providerSettings = '/list_providers_settings';\n        this.toolbarSettings = '/toolbar';\n    }\n    return DefaultEndpoints;\n}());\nexports.DefaultEndpoints = DefaultEndpoints;\nvar EndpointsService = (function () {\n    function EndpointsService() {\n        this.rootPoint = '';\n        this.endpoints = new DefaultEndpoints;\n    }\n    return EndpointsService;\n}());\nexports.default = EndpointsService;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar endpointsService_1 = __webpack_require__(51);\nvar translateService_1 = __webpack_require__(53);\nexports.default = function (module) {\n    module.service('MiQEndpointsService', endpointsService_1.default);\n    module.service('MiQTranslateService', translateService_1.default);\n};\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TranslateService = (function () {\n    /*@ngInject*/\n    TranslateService.$inject = [\"$window\"];\n    function TranslateService($window) {\n        this.$window = $window;\n    }\n    TranslateService.prototype.translateString = function (stringToTranslate) {\n        return this.$window.__(stringToTranslate);\n    };\n    return TranslateService;\n}());\nexports.default = TranslateService;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ng = __webpack_require__(1);\nvar _ = __webpack_require__(0);\n/**\n * Controller for the Dialog Editor box component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name BoxController\n */\nvar BoxController = (function () {\n    /*@ngInject*/\n    BoxController.$inject = [\"DialogEditor\", \"DialogEditorModal\"];\n    function BoxController(DialogEditor, DialogEditorModal) {\n        this.DialogEditor = DialogEditor;\n        this.DialogEditorModal = DialogEditorModal;\n    }\n    /**\n     * Load service to be able to access it form the template.\n     * Load status of tabs.\n     * @memberof BoxController\n     * @function $onInit\n     */\n    BoxController.prototype.$onInit = function () {\n        var _this = this;\n        this.service = this.DialogEditor;\n        this.dialogTabs = this.DialogEditor.getDialogTabs();\n        // Rules for Drag&Drop sorting of boxes\n        this.sortableOptionsBox = {\n            axis: 'y',\n            cancel: '.nosort',\n            cursor: 'move',\n            opacity: 0.5,\n            revert: 50,\n            stop: function (e, ui) {\n                var sortedBox = ui.item.scope().$parent.tab.dialog_groups;\n                // update indexes of other boxes after changing their order\n                _this.DialogEditor.updatePositions(sortedBox);\n            },\n        };\n        // Rules for Drag&Drop sorting of elements inside of boxes\n        this.sortableOptionsFields = {\n            axis: 'y',\n            cancel: '.nosort',\n            cursor: 'move',\n            revert: 50,\n            stop: function (e, ui) {\n                var sortedField = ui.item.scope().$parent.box.dialog_fields;\n                // update indexes of other fields after changing their order\n                _this.DialogEditor.updatePositions(sortedField);\n            },\n        };\n    };\n    /**\n     * Add a new box to the list.\n     * The new box is automatically appended to the last position of the list\n     * @memberof BoxController\n     * @function addBox\n     */\n    BoxController.prototype.addBox = function () {\n        this.dialogTabs[this.DialogEditor.activeTab].dialog_groups\n            .push({\n            description: __('Description'),\n            label: __('Label'),\n            display: 'edit',\n            position: 0,\n            dialog_fields: [],\n        });\n        // update indexes of other boxes after adding a new one\n        this.DialogEditor.updatePositions(this.dialogTabs[this.DialogEditor.activeTab].dialog_groups);\n    };\n    /**\n     * Remove box and all its content from the dialog.\n     * @memberof BoxController\n     * @function removeBox\n     * @param {number} id as index of removed box\n     */\n    BoxController.prototype.removeBox = function (id) {\n        _.remove(this.dialogTabs[this.DialogEditor.activeTab].dialog_groups, function (box) { return box.position === id; });\n        // update indexes of other boxes after removing\n        this.DialogEditor.updatePositions(this.dialogTabs[this.DialogEditor.activeTab].dialog_groups);\n    };\n    /**\n     * Handle Drag&Drop event.\n     * @memberof BoxController\n     * @function droppableOptions\n     * @param {number} event jQuery object\n     * @param {number} ui jQuery object\n     */\n    BoxController.prototype.droppableOptions = function (e, ui) {\n        var droppedItem = ng.element(e.target).scope();\n        // update indexes of other boxes after changing their order\n        this.DialogEditor.updatePositions(droppedItem.box.dialog_fields);\n    };\n    /**\n     * Show modal to edit label and description of the box.\n     * @memberof BoxController\n     * @function editDialogModal\n     * @param {number} tab is an index of tab, where the box is placed\n     * @param {number} box is an index of box\n     */\n    BoxController.prototype.editDialogModal = function (tab, box) {\n        this.DialogEditorModal.showModal(tab, box);\n    };\n    return BoxController;\n}());\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorBoxes\n * @description\n *    Component implementing behaviour for the boxes inside of\n *    the dialogs tabs.\n * @example\n * <dialog-editor-boxes>\n * </dialog-editor-boxes>\n */\nvar Box = (function () {\n    function Box() {\n        this.template = __webpack_require__(23);\n        this.controller = BoxController;\n        this.controllerAs = 'vm';\n    }\n    return Box;\n}());\nexports.default = Box;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar boxComponent_1 = __webpack_require__(54);\nexports.default = function (module) {\n    module.component('dialogEditorBoxes', new boxComponent_1.default);\n};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Controller for the Dialog Editor field component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name FieldController\n */\nvar FieldController = (function () {\n    /*@ngInject*/\n    FieldController.$inject = [\"DialogEditor\", \"DialogEditorModal\"];\n    function FieldController(DialogEditor, DialogEditorModal) {\n        this.DialogEditor = DialogEditor;\n        this.DialogEditorModal = DialogEditorModal;\n    }\n    /**\n     * Load service to be able to access it form the template.\n     * @memberof FieldController\n     * @function $onInit\n     */\n    FieldController.prototype.$onInit = function () {\n        this.service = this.DialogEditor;\n    };\n    /**\n     * Show modal to edit details of the component\n     * @memberof FieldController\n     * @function editDialogModal\n     * @param {number} tab is an index of tab, where the box is placed\n     * @param {number} box is an index of box, where the field is placed\n     * @param {number} field is an index of field\n     */\n    FieldController.prototype.editDialogModal = function (tab, box, field) {\n        this.DialogEditorModal.showModal(tab, box, field);\n    };\n    return FieldController;\n}());\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorField\n * @description\n *    Component implementing behaviour for the fields inside of\n *    the dialogs boxes.\n * @example\n * <dialog-editor-field box-position=\"box.position\"\n *                      field-data='field'\n * </dialog-editor-field>\n */\nvar Field = (function () {\n    function Field() {\n        this.template = __webpack_require__(24);\n        this.controller = FieldController;\n        this.controllerAs = 'vm';\n        this.bindings = {\n            fieldData: '<',\n            boxPosition: '<',\n        };\n    }\n    return Field;\n}());\nexports.default = Field;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fieldComponent_1 = __webpack_require__(56);\nexports.default = function (module) {\n    module.component('dialogEditorField', new fieldComponent_1.default);\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tab_list_1 = __webpack_require__(59);\nvar box_1 = __webpack_require__(55);\nvar field_1 = __webpack_require__(57);\nvar toolbox_1 = __webpack_require__(61);\nvar modal_field_template_1 = __webpack_require__(2);\nexports.default = function (module) {\n    tab_list_1.default(module);\n    box_1.default(module);\n    field_1.default(module);\n    toolbox_1.default(module);\n    modal_field_template_1.default(module);\n};\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tabListComponent_1 = __webpack_require__(60);\nexports.default = function (module) {\n    module.component('dialogEditorTabs', new tabListComponent_1.default);\n};\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ng = __webpack_require__(1);\nvar _ = __webpack_require__(0);\n/**\n * Controller for the Dialog Editor tab list component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name TabListController\n */\nvar TabListController = (function () {\n    /*@ngInject*/\n    TabListController.$inject = [\"DialogEditor\", \"DialogEditorModal\"];\n    function TabListController(DialogEditor, DialogEditorModal) {\n        this.DialogEditor = DialogEditor;\n        this.DialogEditorModal = DialogEditorModal;\n    }\n    /**\n     * Activate the first tab in tab list, if there is any.\n     * @memberof TabListController\n     * @function onInit\n     */\n    TabListController.prototype.$onInit = function () {\n        var _this = this;\n        // load tabs data from the service\n        this.tabList = this.DialogEditor.getDialogTabs();\n        // set active tab\n        if (this.tabList.length !== 0) {\n            this.DialogEditor.activeTab = 0;\n            this.tabList[this.DialogEditor.activeTab].active = true;\n        }\n        // set options for sorting tabs in list\n        this.sortableOptions = {\n            cancel: '.nosort',\n            cursor: 'move',\n            helper: 'clone',\n            revert: 50,\n            stop: function (e, ui) {\n                var sortedTab = ng.element(ui.item).scope().$parent;\n                var tabList = sortedTab.vm.tabList;\n                _this.DialogEditor.updatePositions(tabList);\n                _this.DialogEditor.activeTab = _.find(tabList, { active: true }).position;\n            },\n        };\n    };\n    /**\n     * Add a new tab to the list.\n     * New tab is automatically appended to the last position of the list and\n     * set as active.\n     * @memberof TabListController\n     * @function addTab\n     */\n    TabListController.prototype.addTab = function () {\n        // deactivate currently active tab\n        this.tabList.forEach(function (tab) { return tab.active = false; });\n        // create a new tab\n        var nextIndex = this.tabList.length;\n        this.tabList.push({\n            description: __('New tab ') + nextIndex,\n            display: 'edit',\n            label: __('New tab ') + nextIndex,\n            position: nextIndex,\n            active: true,\n            dialog_groups: [],\n        });\n        this.DialogEditor.activeTab = nextIndex;\n        this.DialogEditor.updatePositions(this.tabList);\n    };\n    /**\n     * Delete tab and all its content from the dialog.\n     * After removing tab, position attributes needs to be updated.\n     * If the tab to delete is active in the moment of the deletion, the\n     * activity goes to the other tab.\n     * @memberof TabListController\n     * @function removeTab\n     * @param {number} id is an index of remove tab\n     */\n    TabListController.prototype.removeTab = function (id) {\n        // pass the activity to other tab, if the deleted is active\n        if (this.tabList[id].active) {\n            if ((this.tabList.length - 1) === this.tabList[id].position &&\n                (this.tabList.length - 1) !== 0) {\n                // active tab was at the end → new active tab is on previous index\n                this.tabList[id - 1].active = true;\n            }\n            else if ((this.tabList.length - 1) > this.tabList[id].position) {\n                // active tab was not at the end → new active tab is on following index\n                this.tabList[id + 1].active = true;\n            }\n        }\n        // remove tab with matching id\n        _.remove(this.tabList, function (tab) { return tab.position === id; });\n        // update indexes of other tabs after removing\n        if (this.tabList.length !== 0) {\n            this.DialogEditor.updatePositions(this.tabList);\n        }\n        else {\n            return;\n        }\n        // set activity in the service\n        var activeTabData = _.find(this.tabList, { active: true });\n        if (ng.isDefined(activeTabData)) {\n            this.DialogEditor.activeTab = activeTabData.position;\n        }\n    };\n    /**\n     * Assign activity to the selected tab.\n     * @memberof TabListController\n     * @function selectTab\n     * @param {number} id is an index of remove tab\n     */\n    TabListController.prototype.selectTab = function (id) {\n        // deactivate currently active\n        var deselectedTab = _.find(this.tabList, { active: true });\n        deselectedTab.active = false;\n        // activate selected\n        var selectedTab = this.tabList[id];\n        selectedTab.active = true;\n        this.DialogEditor.activeTab = id;\n    };\n    /**\n     * Show modal to edit label and description of the tab\n     * @memberof TabListController\n     * @function editDialogModal\n     * @param {number} tab is an index of tab\n     */\n    TabListController.prototype.editDialogModal = function (tab) {\n        this.DialogEditorModal.showModal(tab);\n    };\n    return TabListController;\n}());\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorTabs\n * @description\n *    Component implementing behaviour for the tabs inside of\n *    the dialogs.\n * @example\n * <dialog-editor-tabs>\n * </dialog-editor-tabs>\n */\nvar TabList = (function () {\n    function TabList() {\n        this.template = __webpack_require__(32);\n        this.controller = TabListController;\n        this.controllerAs = 'vm';\n    }\n    return TabList;\n}());\nexports.default = TabList;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toolboxComponent_1 = __webpack_require__(62);\nexports.default = function (module) {\n    module.component('dialogEditorFieldStatic', new toolboxComponent_1.default);\n};\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DialogField = (function () {\n    function DialogField(type, icon, label, options) {\n        if (options === void 0) { options = {}; }\n        this.icon = icon;\n        this.label = label;\n        this.placeholders = Object.assign({\n            name: '',\n            description: '',\n            type: type,\n            display: 'edit',\n            display_method_options: {},\n            read_only: false,\n            required: false,\n            required_method_options: {},\n            default_value: '',\n            values_method_options: {},\n            label: label,\n            position: 0,\n            dynamic: false,\n            show_refresh_button: false,\n            load_values_on_init: false,\n            auto_refresh: false,\n            trigger_auto_refresh: false,\n            reconfigurable: false,\n            visible: true,\n            options: {\n                protected: false,\n            },\n            resource_action: { resource_type: 'DialogField', ae_attributes: {} },\n        }, options);\n    }\n    return DialogField;\n}());\n/**\n * Controller for the Dialog Editor toolbox component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolboxController\n */\nvar ToolboxController = (function () {\n    function ToolboxController() {\n        this.fields = {\n            dialogFieldTextBox: new DialogField('DialogFieldTextBox', 'fa fa-font', __('Text Box')),\n            dialogFieldTextAreaBox: new DialogField('DialogFieldTextAreaBox', 'fa fa-file-text-o', __('Text Area')),\n            dialogFieldCheckBox: new DialogField('DialogFieldCheckBox', 'fa fa-check-square-o', __('Check Box')),\n            dialogFieldDropDownList: new DialogField('DialogFieldDropDownList', 'fa fa-caret-square-o-down', __('Dropdown List'), {\n                data_type: 'string',\n                values: [],\n                options: { sort_by: 'description', sort_order: 'ascending' },\n            }),\n            dialogFieldRadioButton: new DialogField('DialogFieldRadioButton', 'fa fa-circle-o', __('Radio Button'), {\n                data_type: 'string',\n                values: [],\n                options: { sort_by: 'description', sort_order: 'ascending' },\n            }),\n            dialogFieldDateControl: new DialogField('DialogFieldDateControl', 'fa fa-calendar', __('Date Control')),\n            dialogFieldDateTimeControl: new DialogField('DialogFieldDateTimeControl', 'fa fa-clock-o', __('Date Time Control')),\n            dialogFieldTagControl: new DialogField('DialogFieldTagControl', 'fa fa-tags', __('Tag Control'), {\n                data_type: 'string',\n                values: [],\n                options: {\n                    force_single_value: false,\n                    sort_by: 'description',\n                    sort_order: 'ascending',\n                },\n            }),\n        };\n    }\n    return ToolboxController;\n}());\nexports.ToolboxController = ToolboxController;\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorFieldStatic\n * @description\n *    Component is used as a toolbox for the Dialog Editor.\n * @example\n * <dialog-editor-field-static>\n * </dialog-editor-field-static>\n */\nvar Toolbox = (function () {\n    function Toolbox() {\n        this.template = __webpack_require__(33);\n        this.controller = ToolboxController;\n        this.controllerAs = 'vm';\n    }\n    return Toolbox;\n}());\nexports.default = Toolbox;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DialogEditorService = (function () {\n    function DialogEditorService() {\n        this.data = {};\n        this.activeTab = 0;\n    }\n    /**\n     * Store data passed in parameter.\n     * @memberof DialogEditorService\n     * @function setData\n     * @param {any} nested object containing data of the dialog\n     */\n    DialogEditorService.prototype.setData = function (data) {\n        this.data = data;\n    };\n    /**\n     * Return dialog id loaded at service.\n     * @memberof DialogEditorService\n     * @function getDialogId\n     */\n    DialogEditorService.prototype.getDialogId = function () {\n        return this.data.content[0].id;\n    };\n    /**\n     * Return dialog label loaded at service.\n     * @memberof DialogEditorService\n     * @function getDialogLabel\n     */\n    DialogEditorService.prototype.getDialogLabel = function () {\n        return this.data.content[0].label;\n    };\n    /**\n     * Return dialog description loaded at service.\n     * @memberof DialogEditorService\n     * @function getDialogDescription\n     */\n    DialogEditorService.prototype.getDialogDescription = function () {\n        return this.data.content[0].description;\n    };\n    /**\n     * Return dialog tabs loaded at service.\n     * @memberof DialogEditorService\n     * @function getDialogTabs\n     */\n    DialogEditorService.prototype.getDialogTabs = function () {\n        return this.data.content[0].dialog_tabs;\n    };\n    /**\n     * Update positions for elements in array.\n     * @memberof DialogEditorService\n     * @function updatePositions\n     * @param {any[]} array of elements to sort\n     */\n    DialogEditorService.prototype.updatePositions = function (elements) {\n        elements.forEach(function (value, key) { return value.position = key; });\n    };\n    return DialogEditorService;\n}());\nexports.default = DialogEditorService;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dialogEditorService_1 = __webpack_require__(63);\nvar modalService_1 = __webpack_require__(65);\nexports.default = function (module) {\n    module.service('DialogEditor', dialogEditorService_1.default);\n    module.service('DialogEditorModal', modalService_1.default);\n};\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\nvar ng = __webpack_require__(1);\n/**\n * Controller for the Dialog Editor modal service\n * @ngdoc controller\n * @name ModalController\n */\nvar ModalController = (function () {\n    /*@ngInject*/\n    ModalController.$inject = [\"dialogDetails\", \"$uibModalInstance\", \"API\", \"DialogEditor\"];\n    function ModalController(dialogDetails, $uibModalInstance, API, DialogEditor) {\n        var _this = this;\n        this.dialogDetails = dialogDetails;\n        this.$uibModalInstance = $uibModalInstance;\n        this.API = API;\n        this.DialogEditor = DialogEditor;\n        this.modalTab = 'element_information';\n        ng.extend(this, {\n            dialog: this.dialogDetails,\n            saveDialogFieldDetails: this.saveDialogFieldDetails,\n            addEntry: this.addEntry,\n            removeEntry: this.removeEntry,\n            deleteField: this.deleteField,\n            modalUnchanged: this.modalUnchanged,\n            modalTabSet: this.modalTabSet,\n            modalTabIsSet: this.modalTabIsSet,\n            currentCategoryEntries: this.currentCategoryEntries,\n        });\n        // recognize edited element type\n        if (ng.isUndefined(this.dialog.fieldId)\n            && ng.isUndefined(this.dialog.boxId)\n            && ng.isDefined(this.dialog.tabId)) {\n            this.element = 'tab';\n        }\n        else if (ng.isUndefined(this.dialog.fieldId)\n            && ng.isDefined(this.dialog.boxId)\n            && ng.isDefined(this.dialog.tabId)) {\n            this.element = 'box';\n        }\n        else if (ng.isDefined(this.dialog.fieldId)\n            && ng.isDefined(this.dialog.boxId)\n            && ng.isDefined(this.dialog.tabId)) {\n            this.element = 'field';\n        }\n        // clone data from service\n        switch (this.element) {\n            case 'tab':\n                this.modalData = _.cloneDeep(this.DialogEditor.getDialogTabs()[this.dialog.tabId]);\n                break;\n            case 'box':\n                this.modalData = _.cloneDeep(this.DialogEditor.getDialogTabs()[this.dialog.tabId].dialog_groups[this.dialog.boxId]);\n                break;\n            case 'field':\n                this.modalData = _.cloneDeep(this.DialogEditor.getDialogTabs()[this.dialog.tabId].dialog_groups[this.dialog.boxId].dialog_fields[this.dialog.fieldId]);\n                // load categories from API, if the field is Tag Control\n                if (this.modalData.type === 'DialogFieldTagControl') {\n                    this.resolveCategories().then(function (categories) {\n                        _this.categories = categories;\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Load categories data from API.\n     * @memberof ModalController\n     * @function resolveCategories\n     */\n    ModalController.prototype.resolveCategories = function () {\n        return this.API.get('/api/categories' +\n            '?expand=resources' +\n            '&attributes=description,single_value,children');\n    };\n    /**\n     * Store the name of the tab, that is currently selected.\n     * @memberof ModalController\n     * @function modalTabSet\n     * @param tab is a name of the tab in the modal\n     */\n    ModalController.prototype.modalTabSet = function (tab) {\n        this.modalTab = tab;\n    };\n    /**\n     * Returns true/false according to which tab is currently\n     * selected in the modal.\n     * @memberof ModalController\n     * @function modalTabIsSet\n     */\n    ModalController.prototype.modalTabIsSet = function (tab) {\n        return this.modalTab === tab;\n    };\n    /**\n     * Check for changes in the modal.\n     * @memberof ModalController\n     * @function modalUnchanged\n     */\n    ModalController.prototype.modalUnchanged = function () {\n        switch (this.element) {\n            case 'tab':\n                return _.isMatch(this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab], this.modalData);\n            case 'box':\n                return _.isMatch(this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].dialog_groups[this.dialog.boxId], this.modalData);\n            case 'field':\n                return _.isMatch(this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].dialog_groups[this.dialog.boxId].dialog_fields[this.dialog.fieldId], this.modalData);\n            default:\n                break;\n        }\n    };\n    /**\n     * Store modified data back to the service.\n     * @memberof ModalController\n     * @function saveDialogFieldDetails\n     */\n    ModalController.prototype.saveDialogFieldDetails = function () {\n        // TODO: add verification for required forms\n        // store data to service\n        switch (this.element) {\n            case 'tab':\n                this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].label = this.modalData.label;\n                // description\n                this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].description = this.modalData.description;\n                break;\n            case 'box':\n                // label\n                this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].dialog_groups[this.dialog.boxId].label = this.modalData.label;\n                // description\n                this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].dialog_groups[this.dialog.boxId].description = this.modalData.description;\n                break;\n            case 'field':\n                this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].dialog_groups[this.dialog.boxId].dialog_fields[this.dialog.fieldId] = this.modalData;\n                break;\n            default:\n                break;\n        }\n        // close modal\n        this.$uibModalInstance.close();\n    };\n    /**\n     * Delete dialog field selected in modal.\n     * @memberof ModalController\n     * @function deleteField\n     */\n    ModalController.prototype.deleteField = function () {\n        var _this = this;\n        _.remove(this.DialogEditor.getDialogTabs()[this.DialogEditor.activeTab].dialog_groups[this.dialog.boxId].dialog_fields, function (field) { return field.position === _this.dialog.fieldId; });\n        // close modal\n        this.$uibModalInstance.close();\n    };\n    /**\n     * Add entry for radio button / dropdown select.\n     * @memberof ModalFieldController\n     * @function addEntry\n     */\n    ModalController.prototype.addEntry = function () {\n        this.modalData.values.push(['', '']);\n    };\n    /**\n     * Remove entry for radio button / dropdown select\n     * @memberof ModalFieldController\n     * @function removeEntry\n     * @param entry to remove from array\n     */\n    ModalController.prototype.removeEntry = function (entry) {\n        _.pull(this.modalData.values, entry);\n    };\n    /**\n     * Finds entries for the selected category.\n     * @memberof ModalController\n     * @function currentCategoryEntries\n     */\n    ModalController.prototype.currentCategoryEntries = function () {\n        if (ng.isDefined(this.categories)) {\n            return _.find(this.categories.resources, 'id', Number(this.modalData.options.category_id));\n        }\n    };\n    return ModalController;\n}());\nvar ModalService = (function () {\n    /** @ngInject */\n    ModalService.$inject = [\"$uibModal\"];\n    function ModalService($uibModal) {\n        this.$uibModal = $uibModal;\n    }\n    /**\n     * Show modal of the element.\n     * @memberof ModalService\n     * @function showModal\n     * @param {number} index of tab, where the box is placed\n     * @param {number} index of box, where the field is placed\n     * @param {number} index of field\n     */\n    ModalService.prototype.showModal = function (tab, box, field) {\n        var modalOptions = {\n            template: __webpack_require__(34),\n            controller: ModalController,\n            controllerAs: 'vm',\n            size: 'lg',\n            resolve: {\n                dialogDetails: function () {\n                    return { tabId: tab, boxId: box, fieldId: field };\n                },\n            },\n        };\n        var modal = this.$uibModal.open(modalOptions);\n        return modal.result.catch(function () { return undefined; });\n    };\n    return ModalService;\n}());\nexports.default = ModalService;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar abstractDataViewClass_1 = __webpack_require__(5);\nvar _ = __webpack_require__(0);\n/**\n * This controller is for managing data table entities. It extends {@link miqStaticAssets.gtl.DataViewClass}\n * which is abstract class with basic methods for filtering, sorting and limiting entries in data table.\n * @extends miqStaticAssets.gtl.DataViewClass\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name DataTableController\n */\nvar DataTableController = (function (_super) {\n    __extends(DataTableController, _super);\n    function DataTableController() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This method will check if user wants to go to non existent page and will validate it.\n     * @memberof DataTableController\n     * @function setTablePage\n     * @param pageNumber {Number} desired page.\n     */\n    DataTableController.prototype.setTablePage = function (pageNumber) {\n        pageNumber = Number(pageNumber);\n        if (_.isNaN(pageNumber)) {\n            this.currentPageView = this.settings.current;\n            pageNumber = this.currentPageView;\n        }\n        else {\n            if (pageNumber <= 0) {\n                this.currentPageView = 1;\n                pageNumber = 1;\n            }\n            this.setPage(pageNumber);\n        }\n    };\n    /**\n     * Public method for getting column class, narrow column with checkbox or image.\n     * @memberof DataTableController\n     * @function getColumnClass\n     * @param column {Object} header column. This column will have `is_narrow` property set to true and `narrow` class\n     * will be present in classes.\n     * @returns {Object} angular class object. `{narrow: boolean}`\n     */\n    DataTableController.prototype.getColumnClass = function (column) {\n        return {\n            narrow: column.is_narrow,\n            'table-view-pf-select': column.is_narrow\n        };\n    };\n    /**\n     * Public method for checking if column of table is icon or image.\n     * @memberof DataTableController\n     * @function isIconOrImage\n     * @param row {object} whole row with data.\n     * @param columnKey header column key.\n     * @returns {boolean} true | false, if column is image or icon.\n     */\n    DataTableController.prototype.isIconOrImage = function (row, columnKey) {\n        return row && row.cells &&\n            (row.cells[columnKey].hasOwnProperty('icon') || row.cells[columnKey].hasOwnProperty('image'));\n    };\n    /**\n     * Public method for finding out if it's filtered by header column.\n     * @memberof DataTableController\n     * @function isFilteredBy\n     * @param column column which is checked if it's filtered by.\n     * @returns {boolean} true | false if `this.settings.sortBy.sortObject.col_idx` is equal to `column.col_idx`.\n     */\n    DataTableController.prototype.isFilteredBy = function (column) {\n        return !!this.settings.sortBy && (this.settings.sortBy.sortObject.col_idx === column.col_idx);\n    };\n    /**\n     * Public method for getting sort class, either `fa-sort-asc` or `fa-sort-desc`.\n     * @memberof DataTableController\n     * @function getSortClass\n     * @returns {Object} angular class object: `{fa-sort-asc: boolean, fa-sort-desc: boolean}`\n     */\n    DataTableController.prototype.getSortClass = function () {\n        return {\n            'fa-sort-asc': !!this.settings.sortBy && this.settings.sortBy.isAscending,\n            'fa-sort-desc': !(!!this.settings.sortBy && this.settings.sortBy.isAscending)\n        };\n    };\n    /**\n     * Angular's $onchange function to find out if one of bounded option has changed.\n     * @memberof DataTableController\n     * @function $onChanges\n     * @param changesObj angular changed object.\n     */\n    DataTableController.prototype.$onChanges = function (changesObj) {\n        var _this = this;\n        if (changesObj.settings && this.settings) {\n            this.currentPageView = this.settings.current;\n        }\n        if (changesObj.perPage) {\n            this.perPage.text += ' ' + this.perPage.labelItems;\n            this.perPage.items = this.perPage.items.map(function (oneItem) {\n                oneItem.text += ' ' + _this.perPage.labelItems;\n                return oneItem;\n            });\n        }\n        this.setPagingNumbers();\n    };\n    return DataTableController;\n}(abstractDataViewClass_1.DataViewClass));\nexports.DataTableController = DataTableController;\n/**\n * @description\n *    Component for data table.\n * @memberof miqStaticAssets.gtl\n * @ngdoc component\n * @name miqDataTable\n * @attr {Object} rows\n *    Array of rows which will be displayed.\n * @attr {Object} perPage\n *    Object which will be displayed as dropdown picker to filter number of rows.\n * @attr {Object} columns\n *    Columns which will be displayed as header in table.\n * @attr {Object} settings\n *    Table settings look at {@see ITableSettings} for more information.\n * @attr {Expression} loadMoreItems\n *    Function which will be called upon loading more items. Function call has to have `start`, `perPage` params.\n * @attr {Expression} onSort\n *    Function to triggering sorting items. Function call has to have `headerId`, `isAscending` params.\n * @attr {Expression} onRowClick\n *    Function which will be executed when click on row event is fired. Function call has to have `item` param.\n * @attr {Expression} onItemSelected\n *    Function to be called on selecting item (trough selectbox next to each row). Function call has to have `item`,\n *    `isSelected` params.\n * @example\n * <miq-data-table rows=\"ctrl.rows\"\n *                 columns=\"ctrl.columns\"\n *                 per-page=\"ctrl.perPage\"\n *                 settings=\"ctrl.settings\"\n *                 load-more-items=\"ctrl.onLoadMoreItems(start, perPage)\"\n *                 on-sort=\"ctrl.onSort(headerId, isAscending)\"\n *                 on-row-click=\"ctrl.onRowClick(item)\"\n *                 on-item-selected=\"ctrl.onItemSelect(item, isSelected)\">\n * </miq-data-table>\n */\nvar DataTable = (function () {\n    function DataTable() {\n        this.replace = true;\n        this.template = __webpack_require__(35);\n        this.controller = DataTableController;\n        this.transclude = true;\n        this.controllerAs = 'tableCtrl';\n        this.bindings = {\n            rows: '<',\n            columns: '<',\n            perPage: '<',\n            settings: '<',\n            loadMoreItems: '&',\n            onSort: '&',\n            onRowClick: '&',\n            onItemSelected: '&'\n        };\n    }\n    return DataTable;\n}());\nexports.default = DataTable;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dataTableComponent_1 = __webpack_require__(66);\nexports.default = function (module) {\n    module.component('miqDataTable', new dataTableComponent_1.default);\n};\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_table_1 = __webpack_require__(67);\nvar tile_view_1 = __webpack_require__(69);\nexports.default = function (module) {\n    data_table_1.default(module);\n    tile_view_1.default(module);\n};\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tileViewComponent_1 = __webpack_require__(71);\nvar pagingComponent_1 = __webpack_require__(70);\nexports.default = function (module) {\n    module.component('miqTileView', new tileViewComponent_1.default);\n    module.component('miqPaging', new pagingComponent_1.default);\n};\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\n/**\n * Controller for paging component\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name PagingController\n */\nvar PagingController = (function () {\n    function PagingController() {\n        this.MAX_PAGES = 6;\n    }\n    /**\n     * Public method for updating current paging, it will limit number of visible pages to `MAX_PAGES`.\n     * @memberof PagingController\n     * @function updatePages\n     * @param total number of all item's pages.\n     * @returns {any} array with page numbers which will be visible.\n     */\n    PagingController.prototype.updatePages = function (total) {\n        var _this = this;\n        if (total > this.MAX_PAGES) {\n            var currentPage_1 = (this.settings.current < (this.settings.total - this.MAX_PAGES + 1)) ?\n                this.settings.current :\n                (this.settings.total - this.MAX_PAGES + 1);\n            this.pages = _.times(this.MAX_PAGES, function (item) { return (currentPage_1 + item) - 1; });\n        }\n        else {\n            this.pages = new Array(total);\n            _.each(this.pages, function (item, key) {\n                _this.pages[key] = key;\n            });\n        }\n        return this.pages;\n    };\n    return PagingController;\n}());\nexports.PagingController = PagingController;\n/**\n * @description\n *    Component for show paging for some long list (e.g. these are used in tile lists).\n *    Settings object example:\n *    ```javascript\n *    {\n *      current: 1,\n *      total: 5\n *    }\n *    ```\n * @memberof miqStaticAssets.gtl\n * @ngdoc component\n * @name miqPaging\n * @attr {Object} settings\n *    settings for paging component. It has `current` attribute `Number` and total `Number`\n *\n * @attr {Expression} onChangePage\n *    object which is currently sorted by.\n * @example\n * <miq-paging settings=\"settings\"\n *             on-change-page=\"setPage(pageNumber)\">\n * </miq-paging>\n */\nvar Paging = (function () {\n    function Paging() {\n        this.replace = true;\n        this.controller = PagingController;\n        this.template = __webpack_require__(36);\n        this.controllerAs = 'pagingCtrl';\n        this.bindings = {\n            settings: '<',\n            onChangePage: '&'\n        };\n    }\n    return Paging;\n}());\nexports.default = Paging;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tileType_1 = __webpack_require__(74);\nvar abstractDataViewClass_1 = __webpack_require__(5);\nvar _ = __webpack_require__(0);\n/**\n * Controller for tile components. It extends {@link miqStaticAssets.gtl.DataViewClass}.\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name TileViewController\n */\nvar TileViewController = (function (_super) {\n    __extends(TileViewController, _super);\n    /* @ngInject */\n    TileViewController.$inject = [\"$sce\", \"MiQTranslateService\"];\n    function TileViewController($sce, MiQTranslateService) {\n        var _this = _super.call(this, MiQTranslateService) || this;\n        _this.$sce = $sce;\n        _this.initOptions();\n        return _this;\n    }\n    /**\n     * Method for creating basic options for tiles.\n     * @memberof TileViewController\n     * @function initOptions\n     */\n    TileViewController.prototype.initOptions = function () {\n        var _this = this;\n        this.options = {\n            selectionMatchProp: 'id',\n            selectItems: false,\n            multiSelect: true,\n            showSelectBox: true,\n            selectedItems: this.filterSelected(),\n            onClick: function (item, event) { return _this.onTileClick(item); },\n            onCheckBoxChange: function (item) { return _this.onTileSelect(item); },\n            onItemClick: function (item, $event) { return _this.onRowClick({ item: item, event: $event }); },\n            onButtonItemClick: function (item) { return _this.onItemButtonClick(item); },\n            fetchTileName: function (item) { return _this.fetchTileName(item); },\n            trustAsHtmlQuadicon: function (item) { return _this.trustAsHtmlQuadicon(item); },\n            type: this.type\n        };\n    };\n    /**\n     * Method for enabling quadicons html to be displayed inside tile.\n     * @memberof TileViewController\n     * @function trustAsHtmlQuadicon\n     * @param item item with quadicon.\n     * @returns {any} trusted html object, which cn be used as `bind-html`.\n     */\n    TileViewController.prototype.trustAsHtmlQuadicon = function (item) {\n        return this.$sce.trustAsHtml(item.quadicon);\n    };\n    /**\n     * Method for fetching name of item, it will try to guess which column should be showed as name of tile, usually it's\n     * column with Name in them.\n     * @memberof TileViewController\n     * @function fetchTileName\n     * @param item which will be displayed in tile. If no column with name is not present third cell text will be used.\n     * @returns {string} text which will be displayed as tile header.\n     */\n    TileViewController.prototype.fetchTileName = function (item) {\n        var nameIndex = _.findIndex(this.columns, function (oneColumn) { return oneColumn.text && oneColumn.text.indexOf('Name') !== -1; });\n        return (nameIndex !== -1 && item.cells && item.cells[nameIndex]) ?\n            item.cells[nameIndex]['text'] :\n            item.cells[2]['text'];\n    };\n    /**\n     * Angular's method for fetching change events.\n     * @memberof TileViewController\n     * @function $onChanges\n     * @param changesObj angular's change object.\n     */\n    TileViewController.prototype.$onChanges = function (changesObj) {\n        var _this = this;\n        if (changesObj.type) {\n            this.options.type = this.type;\n        }\n        else if (changesObj.columns) {\n            this.options.columns = this.columns;\n        }\n        if (changesObj.perPage) {\n            this.perPage.text += ' ' + this.perPage.labelItems;\n            this.perPage.items = this.perPage.items.map(function (oneItem) {\n                oneItem.text += ' ' + _this.perPage.labelItems;\n                return oneItem;\n            });\n        }\n        if (changesObj.settings) {\n            this.options.showSelectBox = !this.settings.hideSelect;\n        }\n        this.setPagingNumbers();\n    };\n    /**\n     * Method which will be called when clicking on tile.\n     * @memberof TileViewController\n     * @function onTileClick\n     * @param item which tile was clicked.\n     */\n    TileViewController.prototype.onTileClick = function (item) {\n        if (!this.settings.hideSelect) {\n            this.onItemSelected({ item: item, isSelected: !item.selected });\n        }\n    };\n    TileViewController.prototype.onTileSelect = function (item) {\n        this.onItemSelected({ item: item, isSelected: item.selected });\n    };\n    /**\n     * Method for checking all tiles and then filtering selected items.\n     * @memberof TileViewController\n     * @function tileClass\n     * @param isSelected true | false.\n     */\n    TileViewController.prototype.onCheckAllTiles = function (isSelected) {\n        this.onCheckAll(isSelected);\n        this.options.selectedItems = this.filterSelected();\n    };\n    /**\n     * Method for filtering selected tiles based on checked property.\n     * @memberof TileViewController\n     * @function tileClass\n     * @returns filtered array of checked items.\n     */\n    TileViewController.prototype.filterSelected = function () {\n        return _.filter(this.rows, { checked: true });\n    };\n    /**\n     * Angular's method for getting tile's class based on it's type.\n     * @memberof TileViewController\n     * @function tileClass\n     * @returns {Object} it will return angular class object: `{miq-small-tile: boolean, miq-tile-with-body: boolean}`\n     */\n    TileViewController.prototype.tileClass = function () {\n        return {\n            'miq-small-tile': this.type === tileType_1.TileType.SMALL,\n            'miq-tile-with-body': this.type === tileType_1.TileType.BIG\n        };\n    };\n    return TileViewController;\n}(abstractDataViewClass_1.DataViewClass));\nexports.TileViewController = TileViewController;\n/**\n * @description\n *    Component for tile list. This component requires pf-tile to be part of angular's components. For patternfly's\n *    implementation look at\n *    <a href=\"http://angular-patternfly.rhcloud.com/#/api/patternfly.views.directive:pfCardView\">pfCardView</a>\n * @memberof miqStaticAssets.gtl\n * @ngdoc component\n * @name miqTileView\n * @attr {Object} type\n *    Type of tile look at {@see miqStaticAssets.gtl.TileType}\n * @attr {Object} rows\n *    Array of rows which will be displayed.\n * @attr {Object} perPage\n *    Object which will be displayed as dropdown picker to filter number of tiles.\n * @attr {Object} columns\n *    Columns which will be displayed as header in tile.\n * @attr {Object} settings\n *    Tile settings look at {@see ITableSettings} for more information.\n * @attr {Expression} loadMoreItems\n *    Function which will be called upon loading more items. Function call has to have `start`, `perPage` params.\n * @attr {Expression} onSort\n *    Function to triggering sorting items. Function call has to have `headerId`, `isAscending` params.\n * @attr {Expression} onRowClick\n *    Function which will be executed when click on tile event is fired. Function call has to have `item` param.\n * @attr {Expression} onItemSelected\n *    Function to be called on selecting item (trough clicking on tile). Function call has to have `item`, `isSelected`\n *    params.\n * @example\n * <miq-tile-view type=\"ctrl.type\"\n *                rows=\"ctrl.rows\"\n *                columns=\"ctrl.columns\"\n *                per-page=\"ctrl.perPage\"\n *                settings=\"ctrl.settings\"\n *                load-more-items=\"ctrl.onLoadMoreItems(start, perPage)\"\n *                on-sort=\"ctrl.onSort(headerId, isAscending)\"\n *                on-row-click=\"ctrl.onRowClick(item)\"\n *                on-item-selected=\"ctrl.onItemSelect(item, isSelected)>\n * </miq-tile-view>\n */\nvar TileView = (function () {\n    function TileView() {\n        this.replace = true;\n        this.controller = TileViewController;\n        this.template = __webpack_require__(37);\n        this.controllerAs = 'tileCtrl';\n        this.bindings = {\n            type: '<',\n            rows: '<',\n            columns: '<',\n            perPage: '<',\n            settings: '<',\n            loadMoreItems: '&',\n            onSort: '&',\n            onRowClick: '&',\n            onItemSelected: '&'\n        };\n    }\n    return TileView;\n}());\nexports.default = TileView;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar limitToSuffixFilter_1 = __webpack_require__(73);\nexports.default = function (module) {\n    module.filter('limitToSuffix', limitToSuffixFilter_1.default.filter);\n};\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LimitToSuffix = (function () {\n    function LimitToSuffix() {\n    }\n    LimitToSuffix.filter = function () {\n        return function (value, start, end) {\n            return value.length > start + end + 3 ? value.slice(0, start) + \"...\" + value.slice(-end) : value;\n        };\n    };\n    return LimitToSuffix;\n}());\nexports.default = LimitToSuffix;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum for tile types. It holds string value of types for tiles.\n * @memberof miqStaticAssets.gtl\n * @ngdoc enum\n * @name TileType\n */\nexports.TileType = {\n    /**\n     * Tile type: `small`\n     * @type {string}\n     */\n    SMALL: 'small',\n    /**\n     * Tile type: `big`\n     * @type {string}\n     */\n    BIG: 'big'\n};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\n/**\n * @memberof miqStaticAssets.gtl\n * @ngdoc service\n * @name DataTableService\n * @param $http {ng.IHttpService} http service for fetching rows and columns of data table.\n * @param MiQEndpointsService {Object} service which holds endpoints to each data store.\n */\nvar DataTableService = (function () {\n    /*@ngInject*/\n    DataTableService.$inject = [\"$http\", \"MiQEndpointsService\"];\n    function DataTableService($http, MiQEndpointsService) {\n        this.$http = $http;\n        this.MiQEndpointsService = MiQEndpointsService;\n    }\n    /**\n     * Public method for fetching data from url combined from `MiQEndpointsService.rootPoint` and\n     * `MiQEndpointsService.endpoints.listDataTable`. Result will be promise with type `IRowsColsResponse`. Which is\n     * ```javascript\n     * interface IRowsColsResponse {\n     *  rows: any[];\n     *  cols: any[];\n     *  settings: ITableSettings;\n     * }\n     * ```\n     * @methodOf miqStaticAssets.gtl\n     * @memberof DataTableService\n     * @function retrieveRowsAndColumnsFromUrl\n     * @returns {ng.IPromise<IRowsColsResponse>} promise with type `IRowsColsResponse`.\n     */\n    DataTableService.prototype.retrieveRowsAndColumnsFromUrl = function (modelName, activeTree, currId, isExplorer, settings, records) {\n        var _this = this;\n        return this.fetchData(DataTableService.generateConfig(modelName, activeTree, currId, isExplorer, settings, records))\n            .then(function (responseData) {\n            _this.columns = responseData.data.data.head;\n            _this.rows = responseData.data.data.rows;\n            _this.settings = responseData.data.settings;\n            return {\n                cols: _this.columns,\n                rows: _this.rows,\n                messages: responseData.data.messages,\n                settings: responseData.data.settings\n            };\n        });\n    };\n    /**\n     * Method which will do actual http get request using $http service.\n     * @param config which contains config params.\n     * @returns {IHttpPromise<any>} promise for later data filtering.\n     */\n    DataTableService.prototype.fetchData = function (config) {\n        return this.$http.get(this.MiQEndpointsService.rootPoint + this.MiQEndpointsService.endpoints.listDataTable, config);\n    };\n    /**\n     * Static function which will generate http get config from given variables.\n     * @param modelName string with name of model.\n     * @param activeTree string with active tree.\n     * @param currId ID of current item.\n     * @param isExplorer\n     * @param settings\n     * @param records\n     * @returns {{params: {}}} config object with params set.\n     */\n    DataTableService.generateConfig = function (modelName, activeTree, currId, isExplorer, settings, records) {\n        var config = { params: {} };\n        _.assign(config.params, DataTableService.generateModelConfig(modelName));\n        _.assign(config.params, DataTableService.generateActiveTreeConfig(activeTree));\n        _.assign(config.params, DataTableService.generateModuleIdConfig(currId));\n        _.assign(config.params, DataTableService.generateExplorerConfig(isExplorer));\n        _.assign(config.params, DataTableService.generateParamsFromSettings(settings));\n        _.assign(config.params, DataTableService.generateRecords(records));\n        return config;\n    };\n    /**\n     * Static function for generating model object, this object will be assigned to `config.params`.\n     * @param modelName name of currently selected model.\n     * @returns {any|{model: any}} object if any model is selected.\n     */\n    DataTableService.generateModelConfig = function (modelName) {\n        return modelName && { model: modelName };\n    };\n    /**\n     * Static function for generating active tree object, this object will be assigned to `config.params`.\n     * @param activeTree name of currently selected tree.\n     * @returns {any|{active_tree: any}} object if any tree is selected.\n     */\n    DataTableService.generateActiveTreeConfig = function (activeTree) {\n        return activeTree && { active_tree: activeTree };\n    };\n    /**\n     * Static function for generating module id object, this object will be assigned to `config.params`.\n     * @param currId currently selected module's ID.\n     * @returns {any|{model_id: any}} object if any module ID is present.\n     */\n    DataTableService.generateModuleIdConfig = function (currId) {\n        return currId && currId !== null && { model_id: currId };\n    };\n    /**\n     *\n     * @param isExplorer\n     * @returns {any|boolean|{explorer: any}}\n     */\n    DataTableService.generateExplorerConfig = function (isExplorer) {\n        return isExplorer && isExplorer !== null && { explorer: isExplorer };\n    };\n    DataTableService.generateParamsFromSettings = function (settings) {\n        var params = {};\n        if (settings) {\n            _.assign(params, settings.current && { page: settings.current });\n            _.assign(params, settings.perpage && { ppsetting: settings.perpage });\n            _.assign(params, settings.sortBy && settings.sortBy.sortObject && { sort_choice: settings.sortBy.sortObject.text });\n            _.assign(params, settings.sortBy && settings.sortBy.isAscending && { is_ascending: settings.sortBy.isAscending });\n        }\n        return params;\n    };\n    DataTableService.generateRecords = function (records) {\n        return records && records !== null && { 'records[]': records };\n    };\n    return DataTableService;\n}());\nexports.default = DataTableService;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dataTableService_1 = __webpack_require__(75);\nexports.default = function (module) {\n    module.service('MiQDataTableService', dataTableService_1.default);\n};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Controller for site switcher component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name SiteSwitcherController\n */\nvar SiteSwitcherController = (function () {\n    function SiteSwitcherController() {\n    }\n    return SiteSwitcherController;\n}());\nexports.SiteSwitcherController = SiteSwitcherController;\n/**\n * @description\n *    Component for showing a site switcher drop down for moving between different UI's.\n *    Settings object example:\n *    ```javascript\n *    {\n *      sites: [{\n *        title: 'Launch Operations UI',\n *        tooltip: 'Launch Operations UI',\n *        iconClass: 'fa-cogs',\n *        url: 'http://www.manageiq.com'\n *      }, {\n *        title: 'Launch Service UI',\n *        tooltip: 'Launch Service UI',\n *        iconClass: 'fa-cog',\n *        url: 'http://www.manageiq.com'\n *      }, {\n *        title: 'Home',\n *        tooltip: 'Home',\n *        iconClass: 'fa-home',\n *        url: 'http://www.manageiq.com'\n *      }]\n *    }\n *    ```\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqSiteSwitcher\n * @attr {Array} sites\n *     An array of sites to display in the switcher (includes url, iconClass, tooltip and title).\n *     Since we use typescript this attribute has specific type of: `Array<ISite>`\n *\n * @example\n * <miq-site-switcher sites=\"sites\">\n * </miq-site-switcher>\n */\nvar SiteSwitcher = (function () {\n    function SiteSwitcher() {\n        this.controller = SiteSwitcherController;\n        this.template = __webpack_require__(38);\n        this.controllerAs = 'ctrl';\n        this.bindings = {\n            sites: '<'\n        };\n    }\n    return SiteSwitcher;\n}());\nexports.default = SiteSwitcher;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toolbar_menu_1 = __webpack_require__(79);\nexports.default = function (module) {\n    toolbar_menu_1.default(module);\n};\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toolbarComponent_1 = __webpack_require__(81);\nvar toolbarButtonDirective_1 = __webpack_require__(80);\nvar toolbarListComponent_1 = __webpack_require__(82);\nvar toolbarViewComponent_1 = __webpack_require__(83);\nexports.default = function (module) {\n    module.component('miqToolbarMenu', new toolbarComponent_1.default);\n    module.component('miqToolbarList', new toolbarListComponent_1.default);\n    module.component('miqToolbarView', new toolbarViewComponent_1.default);\n    module.directive('miqToolbarButton', toolbarButtonDirective_1.default.Factory());\n};\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @memberof miqStaticAssets\n * @ngdoc directive\n * @name miqToolbarButton\n * @description\n *    Directive withou controller. It will create new toolbar button in toolbar.\n *\n * @attr {Expression} onItemClick\n *    Method for handling clicking on this button (will be called with `{item: item}` object).\n * @attr {IToolbarItem} toolbarButton\n *    Toolbar item based on which will be this button generated.\n * @example\n * <miq-toolbar-button toolbar-button=\"toolbarButton\"\n *                   on-item-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-button>\n */\nvar ToolbarButton = (function () {\n    function ToolbarButton() {\n        this.replace = true;\n        this.template = __webpack_require__(39);\n        this.scope = {\n            toolbarButton: '<',\n            onItemClick: '&'\n        };\n    }\n    return ToolbarButton;\n}());\nToolbarButton.Factory = function () {\n    var directive = function () { return new ToolbarButton(); };\n    directive.$inject = [];\n    return directive;\n};\nexports.default = ToolbarButton;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toolbarType_1 = __webpack_require__(6);\n/**\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolbarController\n * @param $window {ng.IWindowService} window service for redirecting to non angular pages.\n * @param $location {ng.ILocationService} location service to handle redirect to different angular pages.\n * @param $sce {ng.ISCEService} service for enabling html strings to be html objects injected to page as html and not as\n * string.\n */\nvar ToolbarController = (function () {\n    /*@ngInject*/\n    ToolbarController.$inject = [\"$window\", \"$location\", \"$sce\"];\n    function ToolbarController($window, $location, $sce) {\n        this.$window = $window;\n        this.$location = $location;\n        this.$sce = $sce;\n    }\n    /**\n     * Handle clicking on item in toolbar.\n     * Check what function has item for handling click action it's one of [actionUrl, redirectUrl, actionFunction,\n     * eventFunction].\n     *    * actionUrl      - will perform location path change.\n     *    * redirectUrl    - will perform window redirect.\n     *    * actionFunction - will perform call without any arguments.\n     *    * eventFunction  - will perform call to this function with $event specified.\n     * @memberof ToolbarController\n     * @function onItemClick\n     * @param {Object} item what was clicked in toolbar (member of toolbar items).\n     * @param {Object} $event for passing it to eventFunction of item (good for checking target).\n     */\n    ToolbarController.prototype.onItemClick = function (item, $event) {\n        if (item.hasOwnProperty('actionUrl')) {\n            this.$location.path(item.actionUrl);\n        }\n        else if (item.hasOwnProperty('redirectUrl')) {\n            this.$window.location.replace(item.redirectUrl);\n        }\n        else if (item.hasOwnProperty('actionFunction')) {\n            item.actionFunction();\n        }\n        else if (item.hasOwnProperty('eventFunction')) {\n            item.eventFunction($event);\n        }\n    };\n    /**\n     * Filter out items which does not have buttons, select or custom html in them and check if array is not empty. If\n     * this array would be empty there is no content which could be shown in toolbar group.\n     *    * see {@link miqStaticAssets.ToolbarController#isButtonOrSelect} on how it is checked button or select item.\n     *    * see {@link miqStaticAssets.ToolbarController#isCustom} on how it is checked custom html item.\n     * @memberof ToolbarController\n     * @function hasContent\n     * @param {Array<IToolbarItem>} toolbarItem array of items which are checked for content.\n     * @returns {boolean} true|false isEmpty or not.\n     */\n    ToolbarController.prototype.hasContent = function (toolbarItem) {\n        return toolbarItem && toolbarItem.filter(function (item) {\n            return item && (ToolbarController.isButtonOrSelect(item) || ToolbarController.isCustom(item));\n        }).length !== 0;\n    };\n    /**\n     * Escape html custom data and make them available for html insertion to toolbar.\n     * @memberof ToolbarController\n     * @function hasContent\n     * @param escapedString html string without escaped items.\n     * @returns {any} html object, this object can be bound to see\n     * {@link https://docs.angularjs.org/api/ng/directive/ngBindHtml}\n     */\n    ToolbarController.prototype.trustAsHtml = function (escapedString) {\n        escapedString = ToolbarController.htmlDecode(escapedString);\n        return this.$sce.trustAsHtml(escapedString);\n    };\n    /**\n     * Helper method for getting string value of {@link ToolbarType.BUTTON_SELECT}\n     * @memberof ToolbarController\n     * @function getToolbarListType\n     * @returns {string}\n     */\n    ToolbarController.prototype.getToolbarListType = function () {\n        return toolbarType_1.ToolbarType.BUTTON_SELECT;\n    };\n    /**\n     * Helper method for getting string value of {@link ToolbarType.BUTTON}\n     * @memberof ToolbarController\n     * @function getToolbarListType\n     * @returns {string}\n     */\n    ToolbarController.prototype.getButtonType = function () {\n        return toolbarType_1.ToolbarType.BUTTON;\n    };\n    /**\n     * Helper method for getting string value of {@link ToolbarType.CUSTOM}\n     * @memberof ToolbarController\n     * @function getToolbarListType\n     * @returns {string}\n     */\n    ToolbarController.prototype.getCustomType = function () {\n        return toolbarType_1.ToolbarType.CUSTOM;\n    };\n    ToolbarController.prototype.getButtonTwoState = function () {\n        return toolbarType_1.ToolbarType.BUTTON_TWO_STATE;\n    };\n    /**\n     * Private static function for decoding html.\n     * @memberof ToolbarController\n     * @function htmlDecode\n     * @param input html string containing custom html.\n     * @returns {string} unescaped html string.\n     */\n    ToolbarController.htmlDecode = function (input) {\n        var e = document.createElement('div');\n        e.innerHTML = input;\n        return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n    };\n    /**\n     * Private static function for checking if toolbar item has name and if this name is `\"custom\"`.\n     * @memberof ToolbarController\n     * @function hasContent\n     * @param {IToolbarItem} item which is checked for name property.\n     * @returns {boolean} true|false if it's item with custom html.\n     */\n    ToolbarController.isCustom = function (item) {\n        return item.name && item.name === toolbarType_1.ToolbarType.CUSTOM;\n    };\n    /**\n     * Private static function for checking if toolbar item type and if this type is button or select.\n     *    * see {@link miqStaticAssets.ToolbarController#isButtonSelect} on how it's checked for select type.\n     *    * see {@link miqStaticAssets.ToolbarController#isButton} on how it's checked for button type.\n     * @memberof ToolbarController\n     * @function isButtonOrSelect\n     * @param {IToolbarItem} item which is checked for type property.\n     * @returns {boolean} true|false if it's item with button or button select type.\n     */\n    ToolbarController.isButtonOrSelect = function (item) {\n        return item.type && ((ToolbarController.isButtonSelect(item) && item.items && item.items.length !== 0)\n            || ToolbarController.isButton(item)\n            || ToolbarController.isButtonTwoState(item));\n    };\n    ToolbarController.isButtonTwoState = function (item) {\n        return item.type === toolbarType_1.ToolbarType.BUTTON_TWO_STATE;\n    };\n    /**\n     * Private static function for checking if toolbar item type is buttonSelect.\n     * @memberof ToolbarController\n     * @function isButtonSelect\n     * @param {IToolbarItem} item item which is checked for type property.\n     * @returns {boolean} true|false if it's item with type equals to `\"buttonSelect\"`.\n     */\n    ToolbarController.isButtonSelect = function (item) {\n        return item.type === toolbarType_1.ToolbarType.BUTTON_SELECT;\n    };\n    /**\n     * Private static function for checking if toolbar item type is button.\n     * @memberof ToolbarController\n     * @function isButton\n     * @param {IToolbarItem} item item which is checked for type property.\n     * @returns {boolean} true|false if it's item with type equals to `\"button\"`.\n     */\n    ToolbarController.isButton = function (item) {\n        return item.type === toolbarType_1.ToolbarType.BUTTON;\n    };\n    return ToolbarController;\n}());\nexports.ToolbarController = ToolbarController;\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqToolbarMenu\n * @description\n *    This component is for whole toolbar implementation. It's advantages are, that it takes custom components as well\n *    so they can be used instead of just plain JS objects (pass html inside toolbarItems attribute).\n *    See {@link miqStaticAssets.ToolbarController} for implementation of all methods and behavior of this component.\n *    Attribute toolbarItems for custom html needs to have set `args.html`:\n *    ```JSON\n *    [[\n *      {\"name\" : \"custom\",\n *      \"args\" : {\n *        ...\n *        \"html\" : \"<div>html string, this string will be generated as part of form group</div>\"\n *        ...\n *      }}\n *    ]]\n *    ```\n *    How each button is treated see {@link miqStaticAssets.ToolbarController#hasContent} and observe each static\n *    function which\n *    is responsible for deciding what type of button will be used.\n *\n * @attr {Expression} onViewClick\n *    Method which will be executed when clicked on view. See {@link miqStaticAssets.ToolbarController#onViewClick}\n *    which arguments are\n *    needed.\n * @attr {Array} toolbarViews\n *    List of all views which are used in toolbar. Since we use typescript this attribute has specific type of:\n *    `Array<IToolbarItem>` See {@link IToolbarItem} for entities of toolbarViews.\n * @attr {Array} toolbarItems\n *    List of all items which are used in toolbar. Since we use typescript this attribute has specific type of:\n *    `Array<Array<IToolbarItem>>` See {@link IToolbarItem} for entities of toolbarItems.\n * @example\n * <miq-toolbar-menu toolbar-views=\"ctrl.toolbarViews\"\n *                   toolbar-items=\"ctrl.toolbarItems\"\n *                   on-view-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-menu>\n */\nvar Toolbar = (function () {\n    function Toolbar() {\n        this.replace = true;\n        this.template = __webpack_require__(41);\n        this.controller = ToolbarController;\n        this.controllerAs = 'vm';\n        this.bindings = {\n            toolbarViews: '<',\n            toolbarItems: '<',\n            onViewClick: '&'\n        };\n    }\n    return Toolbar;\n}());\nexports.default = Toolbar;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolbarListController\n * @implements {IToolbarListBindings}\n */\nvar ToolbarListController = (function () {\n    function ToolbarListController() {\n        this.isEmpty = false;\n    }\n    /**\n     * Angular's function to observe on changes.\n     * @memberof ToolbarListController\n     * @function isToolbarEmpty\n     * @param changesObj changed object.\n     */\n    ToolbarListController.prototype.$onChanges = function (changesObj) {\n        if (changesObj.toolbarList) {\n            this.isEmpty = this.isToolbarEmpty();\n        }\n    };\n    /**\n     * Method which filters out\n     * @memberof ToolbarListController\n     * @function isToolbarEmpty\n     * @returns {boolean}\n     */\n    ToolbarListController.prototype.isToolbarEmpty = function () {\n        return this.toolbarList &&\n            this.toolbarList.items &&\n            this.toolbarList.items.filter(function (item) { return !item.hidden; }).length > 0;\n    };\n    return ToolbarListController;\n}());\nexports.ToolbarListController = ToolbarListController;\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqToolbarList\n * @description\n *    Component which will generate list in toolbar with toolbarItems as dropdown menu.\n *\n * @attr {Expression} onItemClick\n *    Method which will be executed when clicked on view. See\n *    {@link miqStaticAssets.ToolbarListController#onItemClick} which arguments are\n *    needed.\n * @attr {Array} toolbarItems\n *    List of all items which are used in toolbar. Since we use typescript this attribute has specific type of:\n *    `Array<Array<IToolbarItem>>` See {@link IToolbarItem} for entities of toolbarItems.\n * @example\n * <miq-toolbar-list toolbar-list=\"ctrl.toolbarItems\"\n *                   on-item-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-list>\n */\nvar ToolbarList = (function () {\n    function ToolbarList() {\n        this.replace = true;\n        this.template = __webpack_require__(40);\n        this.controller = ToolbarListController;\n        this.controllerAs = 'vm';\n        this.bindings = {\n            toolbarList: '<',\n            onItemClick: '&',\n            dropDownClass: '<'\n        };\n    }\n    return ToolbarList;\n}());\nexports.default = ToolbarList;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolbarViewController\n * @implements {IToolbarViewBindings}\n */\nvar ToolbarViewController = (function () {\n    function ToolbarViewController() {\n    }\n    return ToolbarViewController;\n}());\nexports.ToolbarViewController = ToolbarViewController;\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqToolbarView\n * @description\n *    Component which will generate list in toolbar with toolbarItems as dropdown menu.\n *\n * @attr {Expression} onItemClick\n *    Method which will be executed when clicked on view.\n * @attr {Array} toolbarViews\n *    List of all views which are used in toolbar.\n * @example\n * <miq-toolbar-view toolbar-views=\"ctrl.toolbarViews\"\n *                   on-item-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-view>\n */\nvar ToolbarView = (function () {\n    function ToolbarView() {\n        this.replace = false;\n        this.template = __webpack_require__(42);\n        this.controller = ToolbarViewController;\n        this.controllerAs = 'vm';\n        this.bindings = {\n            toolbarViews: '<',\n            onItemClick: '&'\n        };\n    }\n    return ToolbarView;\n}());\nexports.default = ToolbarView;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toolbarSettingsService_1 = __webpack_require__(85);\nexports.default = function (module) {\n    module.service('MiQToolbarSettingsService', toolbarSettingsService_1.default);\n};\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toolbarType_1 = __webpack_require__(6);\nvar _ = __webpack_require__(0);\nvar ToolbarSettingsService = (function () {\n    /*@ngInject*/\n    ToolbarSettingsService.$inject = [\"$http\", \"MiQEndpointsService\"];\n    function ToolbarSettingsService($http, MiQEndpointsService) {\n        this.$http = $http;\n        this.MiQEndpointsService = MiQEndpointsService;\n        this.countSelected = 0;\n    }\n    /**\n     * FIXME: the method is obsolete and should be removed once setCount is being used instead\n     * @param isClicked\n     */\n    ToolbarSettingsService.prototype.checkboxClicked = function (isClicked) {\n        isClicked ? this.countSelected++ : this.countSelected--;\n        this.updateByCount();\n    };\n    /**\n     * Update the selected item count, and enable/disable onwhen toolbar items\n     * @param count - the number of currently selected items\n     */\n    ToolbarSettingsService.prototype.setCount = function (count) {\n        this.countSelected = count;\n        this.updateByCount();\n    };\n    /**\n      * Traverses through all the items and enables them by number of selected items.\n      */\n    ToolbarSettingsService.prototype.updateByCount = function () {\n        var _this = this;\n        _.chain(this.items)\n            .flatten()\n            .filter(function (item) { return item; })\n            .each(function (item) {\n            _this.enableToolbarItemByCountSelected(item);\n        })\n            .map('items')\n            .flatten()\n            .filter(function (item) { return item; })\n            .each(function (item) {\n            _this.enableToolbarItemByCountSelected(item);\n        })\n            .value();\n    };\n    /**\n     *\n     * @param toolbarObject\n     * @returns {{items: Array<Array<IToolbarItem>>, dataViews: Array<IToolbarItem>}}\n     */\n    ToolbarSettingsService.prototype.generateToolbarObject = function (toolbarObject) {\n        this.countSelected = 0;\n        this.items = this.separateItems(toolbarObject.filter(function (item) { return !!item; }));\n        this.dataViews = this.filterViews();\n        return {\n            items: this.items,\n            dataViews: this.dataViews\n        };\n    };\n    /**\n     *\n     * @returns {ng.IPromise<IToolbarSettings>}\n     * @param getData\n     */\n    ToolbarSettingsService.prototype.getSettings = function (getData) {\n        var _this = this;\n        return this.httpGet(this.MiQEndpointsService.rootPoint + this.MiQEndpointsService.endpoints.toolbarSettings, getData).then(function (items) { return _this.generateToolbarObject(items); });\n    };\n    /**\n     * Helper method for separating items in toolbar by separators.\n     * @param toolbarItems all toolbar items.\n     * @returns {Array} of separated items.\n     */\n    ToolbarSettingsService.prototype.separateItems = function (toolbarItems) {\n        var separatedArray = [];\n        toolbarItems.forEach(function (items) {\n            var arrayIndex = separatedArray.push([]);\n            items.forEach(function (item) {\n                if (item.type !== toolbarType_1.ToolbarType.SEPARATOR) {\n                    separatedArray[arrayIndex - 1].push(item);\n                }\n                else {\n                    arrayIndex = separatedArray.push([]);\n                }\n            });\n        });\n        return separatedArray;\n    };\n    /**\n     *\n     * @returns {Array<IToolbarItem>}\n     */\n    ToolbarSettingsService.prototype.filterViews = function () {\n        return _.flatten(this.items)\n            .filter(function (item) { return item && item.id && item.id.indexOf('view_') === 0; });\n    };\n    /**\n     *\n     * @param url\n     * @param dataObject\n     * @returns {ng.IPromise<Array<Array<IToolbarItem>>>}\n     */\n    ToolbarSettingsService.prototype.httpGet = function (url, dataObject) {\n        return this.$http.get(url, { params: dataObject })\n            .then(function (dataResponse) { return dataResponse.data; });\n    };\n    /**\n     *\n     * @param toolbarItem\n     */\n    ToolbarSettingsService.prototype.enableToolbarItemByCountSelected = function (toolbarItem) {\n        if (toolbarItem.onwhen) {\n            if (toolbarItem.onwhen.slice(-1) === '+') {\n                toolbarItem.enabled = this.countSelected >= ToolbarSettingsService.parseNumberFromWhen(toolbarItem.onwhen);\n            }\n            else {\n                toolbarItem.enabled = this.countSelected === parseInt(toolbarItem.onwhen, 10);\n            }\n        }\n    };\n    /**\n     *\n     * @param onWhen\n     * @returns {number}\n     */\n    ToolbarSettingsService.parseNumberFromWhen = function (onWhen) {\n        return onWhen.indexOf('+') !== -1 ? parseInt(onWhen.slice(0, onWhen.length - 1), 10) : parseInt(onWhen, 10);\n    };\n    return ToolbarSettingsService;\n}());\nexports.default = ToolbarSettingsService;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./check-box.html\": 25,\n\t\"./date-time-control.html\": 26,\n\t\"./dynamic.html\": 27,\n\t\"./index\": 2,\n\t\"./index.ts\": 2,\n\t\"./modalFieldTemplateComponent\": 3,\n\t\"./modalFieldTemplateComponent.ts\": 3,\n\t\"./radio-button-drop-down-list.html\": 28,\n\t\"./tag-control.html\": 29,\n\t\"./text-area-box.html\": 30,\n\t\"./text-box.html\": 31\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 86;\n\n\n/***/ }),\n/* 87 */,\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(8);\n__webpack_require__(13);\n__webpack_require__(15);\n__webpack_require__(10);\n__webpack_require__(11);\n__webpack_require__(12);\nmodule.exports = __webpack_require__(14);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/ui-components.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \".\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 88);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 09b7d93a612dd8590b80","module.exports = _;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 0\n// module chunks = 0 1","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 1\n// module chunks = 0 1","import ModalFieldTemplate from './modalFieldTemplateComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('dialogEditorModalFieldTemplate', new ModalFieldTemplate);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/modal-field-template/index.ts","import * as _ from 'lodash';\n\n/**\n * Controller for the Dialog Editor Modal Field Template component\n * @ngdoc controller\n * @name ModalFieldController\n */\nclass ModalFieldController {\n  public modalData: any;\n\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorModalFieldTemplate\n * @description\n *    Component contains templates for the modal for each field type\n * @example\n * <dialog-editor-modal-field-template ng-switch-when=\"DialogFieldTextBox\"\n *                                     template=\"text-box.html\"\n *                                     modal-data=\"vm.modalData\">\n * </dialog-editor-modal-field-template>\n */\nexport default class ModalFieldTemplate {\n  /*@ngInject*/\n  public template = ($element: any, $attrs: any) => require(`./${$attrs.template}`);\n  public scope: boolean = true;\n  public controllerAs: string = 'vm';\n  public bindings: any = {\n    modalData: '=',\n    categories: '=?',\n    addEntry: '&?',\n    removeEntry: '&?',\n    currentCategoryEntries: '&?',\n    resolveCategories: '&?',\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/modal-field-template/modalFieldTemplateComponent.ts","import {IDataTableBinding, ITableSettings} from './dataTable';\nimport * as _ from 'lodash';\n/**\n * This is abstract controller for implementing shared methods between data table and tile views.\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name DataViewClass\n */\nexport abstract class DataViewClass implements IDataTableBinding {\n  public perPage: any;\n  public rows: any[];\n  public columns: any[];\n\n  public onRowClick: (args: {item: any, event: ng.IAngularEvent}) => void;\n  public settings: ITableSettings;\n  public currentPageView: number = 1;\n\n  public onSort: (args: {headerId: any, isAscending: boolean}) => void;\n  public onItemSelected: (args: {item: any, isSelected: boolean}) => void;\n  public loadMoreItems: (args: {start: number, perPage: number}) => void;\n\n  /*@ngInject*/\n  constructor(public MiQTranslateService: any) {\n  }\n\n  /**\n   * Public method which will perform checking all entities.\n   * @memberof DataViewClass\n   * @function onCheckAll\n   * @param isChecked true | false based on checked value.\n   */\n  public onCheckAll(isChecked: boolean) {\n    _.each(this.rows, oneRow => {\n      this.onItemSelected({item: oneRow, isSelected: isChecked});\n    });\n  }\n\n  /**\n   * Helper method which will pass sortId and isAscending to parent controller.\n   * @memberof DataViewClass\n   * @function onSortClick\n   * @param sortId id of sorted header column.\n   * @param isAscending true | false based on ascending order.\n   */\n  public onSortClick(sortId, isAscending) {\n    this.onSort({headerId: sortId, isAscending: isAscending});\n  }\n\n  /**\n   * Helper method for calculating loading more items after selecting how many items per page should be visible.\n   * @memberof DataViewClass\n   * @function perPageClick\n   * @param item {Object} enhanced IToolbarItem with value.\n   */\n  public perPageClick(item) {\n    const maxPage = Math.ceil(this.settings.items / item.value);\n    this.currentPageView = this.currentPageView > maxPage ? maxPage : this.currentPageView;\n    const start = DataViewClass.calculateStartIndex(this.currentPageView, item.value);\n    this.loadMoreItems({start: start, perPage: item.value});\n  }\n\n  /**\n   * Helper method for calculating what page should be visible, it works with perPage and total amount of values.\n   * @memberof DataViewClass\n   * @function setPage\n   * @param pageNumber {number} number of desired page, if this page is out of bound, it will be rounded.\n   */\n  public setPage(pageNumber) {\n    if (pageNumber > this.settings.total) {\n      this.currentPageView = this.settings.total;\n      pageNumber = this.currentPageView;\n    }\n    this.currentPageView = pageNumber;\n    const start = DataViewClass.calculateStartIndex(pageNumber, this.settings.perpage);\n    this.loadMoreItems({start: start, perPage: this.settings.perpage});\n  }\n\n  public translateOf(start, end, total): string {\n    return this.settings && this.settings.hasOwnProperty('translateTotalof') ?\n      this.settings.translateTotalOf(start, end, total) :\n      `${start} - ${end} of ${total}`;\n  }\n\n  public onItemButtonClick(item: any) {\n    if (item.hasOwnProperty('onclick')) {\n      new Function(item.onclick)();\n    }\n  }\n\n  protected setPagingNumbers() {\n    if (this.settings.hasOwnProperty('current') && this.settings.hasOwnProperty('perpage')) {\n      this.settings.startIndex =\n        this.settings.startIndex ||\n        DataViewClass.calculateStartIndex(this.settings.current, this.settings.perpage);\n\n      if (this.settings.current === this.settings.total) {\n        this.settings.endIndex = this.settings.items - 1;\n      } else {\n        this.settings.endIndex = this.settings.current * this.settings.perpage - 1;\n      }\n    }\n  }\n\n  /**\n   * Helper static method for calculating start index based on pageNumber and number of visible items.\n   * @memberof DataViewClass\n   * @function calculateStartIndex\n   * @param pageNumber {number} current page number.\n   * @param perPage {number} how many of items are visible per page.\n   * @returns {number} start index for limit filter.\n   */\n  protected static calculateStartIndex(pageNumber, perPage) {\n    return (pageNumber - 1) * perPage;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/interfaces/abstractDataViewClass.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/ui-components.scss\n// module id = 8\n// module chunks = 0","import services from './services';\nimport components from './components';\nimport * as angular from 'angular';\n\nmodule common {\n  export const app: ng.IModule = angular.module('miqStaticAssets.common', []);\n  /*@ngInject*/\n  app.config(($windowProvider: any) => {\n    let windowService = $windowProvider.$get();\n    if (!windowService.hasOwnProperty('__')) {\n      windowService.__ = translateString => translateString;\n    }\n  });\n  services(app);\n  components(app);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/index.ts","import services from './services';\nimport components from './components';\nimport * as angular from 'angular';\n\nmodule dialogEditor {\n  export const app = angular.module('miqStaticAssets.dialogEditor', [\n    'ui.sortable',\n    'ngDragDrop',\n    'frapontillo.bootstrap-switch'\n  ]);\n  services(app);\n  components(app);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/index.ts","import services from './services';\nimport filters from './filters';\nimport components from './components';\nimport * as angular from 'angular';\n\nmodule gtl {\n  export const app = angular.module('miqStaticAssets.gtl', []);\n  services(app);\n  filters(app);\n  components(app);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/index.ts","import * as angular from 'angular';\n\nmodule miqStaticAssets {\n  angular.module('miqStaticAssets', [\n    'miqStaticAssets.toolbar',\n    'miqStaticAssets.common',\n    'miqStaticAssets.dialogEditor',\n    'miqStaticAssets.gtl',\n    'miqStaticAssets.siteSwitcher'\n  ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","import SiteSwitcher from './siteSwitcherComponent';\nimport * as angular from 'angular';\nmodule siteSwitcher {\n  export const app = angular.module('miqStaticAssets.siteSwitcher', []);\n  app.component('miqSiteSwitcher', new SiteSwitcher);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/site-switcher/index.ts","import services from './services';\nimport components from './components';\nimport * as angular from 'angular';\n\nmodule toolbar {\n  export const app = angular.module('miqStaticAssets.toolbar', ['ngSanitize']);\n  services(app);\n  components(app);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/index.ts","module.exports = \"<div class='dialog'>\\n  <div style=\\\"background-color: #f1f1f1; padding: 20px;\\\"\\n       ng-model='vm.dialogTabs[vm.service.activeTab].dialog_groups'\\n       ui-sortable='vm.sortableOptionsBox'\\n       ng-repeat='tab in vm.dialogTabs'\\n       ng-if='tab.position === vm.service.activeTab'>\\n    <!-- tab content -->\\n    <div ng-repeat='box in tab.dialog_groups track by $index'>\\n      <div class=\\\"panel panel-default\\\"\\n           data-drop='true'\\n           jqyoui-droppable='{multiple: true, onDrop: \\\"vm.droppableOptions\\\"}'\\n           ng-model='box.dialog_fields'>\\n        <div class=\\\"panel-heading\\\">\\n          <i class=\\\"pficon-edit\\\"\\n             ng-click='vm.editDialogModal(\\n               vm.service.activeTab,\\n               box.position\\n             )'></i>\\n          <strong>{{ box.label }}</strong>\\n          <button type=\\\"button\\\" class=\\\"close\\\"\\n                  ng-click=\\\"vm.removeBox(box.position)\\\">\\n            <span aria-hidden=\\\"true\\\">\\n              <i class=\\\"fa fa-times\\\"></i>\\n            </span>\\n          </button>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div ui-sortable='vm.sortableOptionsFields'\\n               ng-model='box.dialog_fields'>\\n            <div class=\\\"well well-lg nosort\\\"\\n                 ng-if='box.dialog_fields.length === 0'>\\n              <i class=\\\"fa fa-object-group\\\"></i>\\n              {{ 'Drag your components here' | translate }}\\n            </div>\\n            <div ng-repeat='field in box.dialog_fields'>\\n              <form class=\\\"form-horizontal\\\">\\n                <dialog-editor-field box-position=\\\"box.position\\\" field-data='field'></dialog-editor-field>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"blank-slate-pf nosort\\\"\\n         ng-if='tab.dialog_groups.length === 0'\\n         ng-click='vm.addBox()'>\\n      <div class=\\\"blank-slate-pf-icon\\\">\\n        <i class=\\\"fa fa-plus-circle\\\"></i>\\n      </div>\\n      <h1 translate>Start with adding a box</h1>\\n    </div>\\n    <div class=\\\"panel panel-default nosort\\\">\\n      <a ng-click='vm.addBox()' translate>\\n        <i class=\\\"pficon-add-circle-o\\\"></i>&nbsp;Create Box\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/box/box.html\n// module id = 23\n// module chunks = 0","module.exports = \"<div ng-switch on=\\\"vm.fieldData.type\\\" class=\\\"form-group\\\">\\n  <label class=\\\"control-label col-sm-2\\\">{{ vm.fieldData.label }}</label>\\n  <div class=\\\"col-sm-5\\\">\\n\\n    <!-- text box -->\\n    <input ng-switch-when=\\\"DialogFieldTextBox\\\"\\n           ng-model=\\\"vm.fieldData.default_value\\\"\\n           class=\\\"form-control\\\"\\n           type=\\\"{{ vm.fieldData.options.protected ? 'password' : 'text' }}\\\"\\n           placeholder=\\\"{{'Default value'|translate}}\\\">\\n\\n    <!-- text area -->\\n    <textarea ng-switch-when=\\\"DialogFieldTextAreaBox\\\"\\n              ng-model=\\\"vm.fieldData.default_value\\\"\\n              class=\\\"form-control\\\"\\n              rows=\\\"4\\\">\\n      {{ vm.fieldData.default_value }}\\n    </textarea>\\n\\n    <!-- check box -->\\n    <input ng-switch-when=\\\"DialogFieldCheckBox\\\"\\n           ng-model=\\\"vm.fieldData.default_value\\\"\\n           ng-true-value=\\\"'t'\\\"\\n           class=\\\"form-control\\\"\\n           type=\\\"checkbox\\\">\\n\\n    <!-- date control -->\\n    <input ng-switch-when=\\\"DialogFieldDateControl\\\"\\n           pf-datepicker options=\\\"vm.fieldData.options\\\"\\n           ng-disabled=\\\"true\\\"\\n           date=\\\"vm.fieldData.default_value\\\">\\n\\n    <!-- date time control -->\\n    <div ng-switch-when=\\\"DialogFieldDateTimeControl\\\">\\n      <div class=\\\"col-sm-6 dateTimePadding\\\">\\n        <input ng-model=\\\"vm.fieldData.default_value\\\"\\n               pf-datepicker options=\\\"vm.fieldData.dateOptions\\\"\\n               date=\\\"vm.fieldData.default_value\\\">\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <timepicker ng-model=\\\"vm.fieldData.default_value\\\"></timepicker>\\n      </div>\\n    </div>\\n\\n    <!-- drop down list -->\\n    <select ng-switch-when=\\\"DialogFieldDropDownList\\\"\\n            ng-model=\\\"vm.fieldData.default_value\\\"\\n            class=\\\"form-control\\\">\\n      <option ng-repeat=\\\"option in vm.fieldData.values\\\"\\n              value=\\\"{{ option[0] }}\\\">\\n        {{ option[1] }}\\n      </option>\\n    </select>\\n\\n    <!-- radio button -->\\n    <span ng-switch-when=\\\"DialogFieldRadioButton\\\"\\n          class=\\\"btn-group\\\">\\n      <label ng-repeat=\\\"option in vm.fieldData.values\\\"\\n             class=\\\"btn btn-primary\\\">\\n        <input type=\\\"radio\\\"\\n               ng-model=\\\"vm.fieldData.default_value\\\"\\n               name=\\\"vm.fieldData.name\\\"\\n               value=\\\"option[0]\\\">\\n        {{ option[1] }}\\n      </label>\\n    </span>\\n\\n    <!-- tag control -->\\n    <select ng-switch-when=\\\"DialogFieldTagControl\\\"\\n            class=\\\"form-control\\\">\\n      <option ng-repeat=\\\"option in vm.fieldData.values\\\"\\n              value=\\\"{{ option[0] }}\\\">\\n        {{ option[1] }}\\n      </option>\\n    </select>\\n\\n  </div>\\n  <div class=\\\"col-sm-5\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\"\\n            ng-click=\\\"vm.editDialogModal(\\n              vm.service.activeTab,\\n              vm.boxPosition,\\n              vm.fieldData.position\\n            )\\\">\\n      <span aria-hidden=\\\"true\\\">\\n        <i class=\\\"pficon-edit\\\"></i>\\n      </span>\\n    </button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/field/field.html\n// module id = 24\n// module chunks = 0","module.exports = \"<!-- text check box -->\\n<div pf-form-group pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.default_value\\\"\\n         ng-true-value=\\\"'t'\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate }}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/check-box.html\n// module id = 25\n// module chunks = 0","module.exports = \"<!-- date time control -->\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Show Past Dates'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.options.show_past_dates\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/date-time-control.html\n// module id = 26\n// module chunks = 0","module.exports = \"<!-- any dynamic element -->\\n<div pf-form-group pf-label=\\\"{{'Entry Point'|translate}}\\\">\\n  <!-- TODO: until treepicker and API for it are in the SSUI -->\\n  <input ng-model=\\\"vm.modalData.resource_action.ae_namespace\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Show Refresh Button'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.show_refresh_button\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate }}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Load Values on Init'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.load_values_on_init\\\"\\n         switch-active=\\\"{{vm.modalData.show_refresh_button}}\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/dynamic.html\n// module id = 27\n// module chunks = 0","module.exports = \"<!-- radio button -->\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.default_value\\\"\\n          ng-options=\\\"entry as entry[0] for entry in vm.modalData.values\\\">\\n    <option selected=\\\"selected\\\" value=\\\"\\\" translate>None</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Value type'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.data_type\\\">\\n    <option value=\\\"integer\\\" translate>Integer</option>\\n    <option selected=\\\"selected\\\" value=\\\"string\\\" translate>String</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort by'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_by\\\">\\n    <option value=\\\"none\\\" translate>None</option>\\n    <option value=\\\"description\\\" translate>Description</option>\\n    <option value=\\\"value\\\" translate>Value</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort order'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_order\\\">\\n    <option selected=\\\"selected\\\" value=\\\"ascending\\\" translate>Ascending</option>\\n    <option value=\\\"descending\\\" translate>Descending</option>\\n  </select>\\n</div>\\n<div pf-form-group class=\\\"form-inline\\\" pf-label=\\\"{{'Entries'|translate}}\\\" required>\\n  <div ng-repeat=\\\"entry in vm.modalData.values\\\">\\n    <input id=\\\"label\\\" name=\\\"label\\\"\\n           ng-model=\\\"entry[0]\\\" type=\\\"text\\\" placeholder=\\\"Key\\\" required/>\\n    <input id=\\\"label\\\" name=\\\"label\\\"\\n           ng-model=\\\"entry[1]\\\" type=\\\"text\\\" placeholder=\\\"Value\\\" required/>\\n    <a ng-click='vm.removeEntry(entry)'><i class='pficon-close'></i></a>\\n  </div>\\n  <a ng-click='vm.addEntry()'><i class='pficon-add-circle-o'></i></a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/radio-button-drop-down-list.html\n// module id = 28\n// module chunks = 0","module.exports = \"<!-- tag-contorl -->\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Category'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.category_id\\\"\\n          ng-options=\\\"category.id.toString() as category.description for category in vm.categories.resources\\\">\\n    <option selected=\\\"selected\\\" value=\\\"\\\" translate>None</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Single value'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.options.force_single_value\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Value type'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.data_type\\\">\\n    <option value=\\\"integer\\\" translate>Integer</option>\\n    <option selected=\\\"selected\\\" value=\\\"string\\\" translate>String</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort by'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_by\\\">\\n    <option value=\\\"none\\\" translate>None</option>\\n    <option value=\\\"description\\\" translate>Description</option>\\n    <option value=\\\"value\\\" translate>Value</option>\\n  </select>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Sort order'|translate}}\\\">\\n  <select class=\\\"form-control\\\" ng-model=\\\"vm.modalData.options.sort_order\\\">\\n    <option selected=\\\"selected\\\" value=\\\"ascending\\\" translate>Ascending</option>\\n    <option value=\\\"descending\\\" translate>Descending</option>\\n  </select>\\n</div>\\n<div pf-form-group class=\\\"form-inline\\\" pf-label=\\\"{{'Entries'|translate}}\\\" required>\\n  <div ng-repeat=\\\"entry in vm.currentCategoryEntries().children\\\">\\n    <input id=\\\"label\\\" name=\\\"label\\\"\\n           ng-model=\\\"entry.description\\\" type=\\\"text\\\" placeholder=\\\"Key\\\" readonly/>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/tag-control.html\n// module id = 29\n// module chunks = 0","module.exports = \"<!-- text area box -->\\n<div pf-form-group pf-input-class=\\\"col-sm-9\\\" pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <textarea id=\\\"default_value\\\" name=\\\"default_value\\\"\\n            ng-model=\\\"vm.modalData.default_value\\\">\\n    {{ vm.modalData.default_value }}\\n  </textarea>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Validation'|translate}}\\\">\\n  <input id=\\\"validator_rule\\\" name=\\\"validator_rule\\\"\\n         ng-model=\\\"vm.modalData.validator_rule\\\"/>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/text-area-box.html\n// module id = 30\n// module chunks = 0","module.exports = \"<!-- text box -->\\n<div pf-form-group pf-label=\\\"{{'Default value'|translate}}\\\">\\n  <input id=\\\"default_value\\\" name=\\\"default_value\\\"\\n         ng-model=\\\"vm.modalData.default_value\\\"\\n         type=\\\"{{vm.modalData.options.protected ? 'password' : 'text'}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Protected'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.options.protected\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate }}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Required'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.required\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Read only'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.read_only\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Visible'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.visible\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\">\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Auto refresh on change'|translate}}\\\">\\n  <input bs-switch\\n         ng-model=\\\"vm.modalData.trigger_auto_refresh\\\"\\n         type=\\\"checkbox\\\"\\n         switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n         switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n</div>\\n<div pf-form-group pf-label=\\\"{{'Validation'|translate}}\\\">\\n  <input id=\\\"validator_rule\\\" name=\\\"validator_rule\\\"\\n          ng-model=\\\"vm.modalData.validator_rule\\\"/>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template/text-box.html\n// module id = 31\n// module chunks = 0","module.exports = \"<ul ui-sortable='vm.sortableOptions'\\n    ng-model='vm.tabList'\\n    class='nav nav-tabs'\\n    data-tabs='tabs'>\\n  <li ng-class='{active: tab.active}' ng-repeat='tab in vm.tabList'>\\n    <a class=\\\"select-tab\\\" ng-click='vm.selectTab(tab.position)' data-toggle='tab'>\\n      <i class=\\\"pficon-edit\\\" ng-click='vm.editDialogModal(tab.position)'></i>\\n      {{ tab.label }}\\n      <i class='delete-tab glyphicon glyphicon-remove' ng-click='vm.removeTab(tab.position)'></i>\\n    </a>\\n  </li>\\n  <li class='nosort'>\\n    <a ng-click='vm.addTab()'>\\n      <i class='pficon-add-circle-o'></i>\\n      &nbsp; {{ 'Create Tab' | translate }}\\n    </a>\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/tab-list/tab-list.html\n// module id = 32\n// module chunks = 0","module.exports = \"<div class=\\\"container-fluid container-cards-pf\\\">\\n  <div class=\\\"row row-cards-pf\\\">\\n    <div class=\\\"col-xs-6 col-sm-4 col-md-4\\\"\\n         ng-repeat='dialogField in vm.fields'\\n         data-drag=\\\"true\\\"\\n         jqyoui-draggable=\\\"{animate:true, placeholder: 'keep', deepCopy: true}\\\"\\n         data-jqyoui-options=\\\"{revert: 'invalid', helper: 'clone'}\\\"\\n         ng-model=\\\"dialogField.placeholders\\\">\\n      <div class=\\\"card-pf card-pf-aggregate-status\\\">\\n        <h2 class=\\\"card-pf-title\\\">\\n          {{dialogField.label}}\\n        </h2>\\n        <div class=\\\"card-pf-body\\\">\\n          <p class=\\\"card-pf-aggregate-status-notifications\\\">\\n            <span class=\\\"card-pf-aggregate-status-notification\\\">\\n              <i ng-class=\\\"dialogField.icon\\\"></i>\\n            </span>\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div><!-- /row -->\\n</div><!-- /container -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/toolbox/toolbox.html\n// module id = 33\n// module chunks = 0","module.exports = \"<div class=\\\"modal-header\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"$dismiss()\\\" aria-hidden=\\\"true\\\">\\n    <span class=\\\"pficon pficon-close\\\"></span>\\n  </button>\\n  <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\" translate>Edit Dialog field</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <ul class=\\\"nav nav-tabs dialog-editor-tab-list\\\">\\n    <li ng-class=\\\"{active:vm.modalTabIsSet('element_information')}\\\">\\n      <a ng-click=\\\"vm.modalTabSet('element_information')\\\" translate>Element Information</a>\\n    </li>\\n    <li ng-if=\\\"vm.element === 'field'\\\" ng-class=\\\"{active:vm.modalTabIsSet('options')}\\\">\\n      <a ng-click=\\\"vm.modalTabSet('options')\\\" translate>Options</a>\\n    </li>\\n    <li ng-if=\\\"vm.element === 'field'\\\" ng-class=\\\"{active:vm.modalTabIsSet('advanced')}\\\">\\n      <a ng-click=\\\"vm.modalTabSet('advanced')\\\" translate>Advanced</a>\\n    </li>\\n  </ul>\\n  <!-- general details same for each component - element information -->\\n  <div ng-show=\\\"vm.modalTabIsSet('element_information')\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <div pf-form-group pf-label=\\\"{{'Label'|translate}}\\\" required>\\n        <input id=\\\"label\\\" name=\\\"label\\\"\\n               ng-model=\\\"vm.modalData.label\\\" type=\\\"text\\\" required/>\\n      </div>\\n      <div ng-if=\\\"vm.element === 'field'\\\"\\n           pf-form-group\\n           pf-label=\\\"{{'Name'|translate}}\\\" required>\\n        <input id=\\\"name\\\" name=\\\"name\\\"\\n               ng-model=\\\"vm.modalData.name\\\" type=\\\"text\\\" required/>\\n      </div>\\n      <div pf-form-group pf-input-class=\\\"col-sm-9\\\" pf-label=\\\"{{'Description'|translate}}\\\">\\n        <textarea id=\\\"description\\\" name=\\\"description\\\" ng-model=\\\"vm.modalData.description\\\">\\n          {{ vm.modalData.description }}\\n        </textarea>\\n      </div>\\n      <div ng-if=\\\"vm.element === 'field' && vm.modalData.type !== 'DialogFieldTagControl'\\\"\\n           pf-form-group\\n           pf-label=\\\"{{'Dynamic'|translate}}\\\">\\n        <input bs-switch\\n               ng-model=\\\"vm.modalData.dynamic\\\"\\n               type=\\\"checkbox\\\"\\n               switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n               switch-off-text=\\\"{{'No'|translate}}\\\"/>\\n      </div>\\n    </form>\\n  </div>\\n  <!-- field specific details -->\\n  <div ng-show=\\\"vm.modalTabIsSet('options')\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <div ng-if=\\\"!vm.modalData.dynamic\\\" ng-switch on=\\\"vm.modalData.type\\\">\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldTextBox\\\"\\n                                            template=\\\"text-box.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldTextAreaBox\\\"\\n                                            template=\\\"text-area-box.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldCheckBox\\\"\\n                                            template=\\\"check-box.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldDateControl\\\"\\n                                            template=\\\"date-time-control.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldDateTimeControl\\\"\\n                                            template=\\\"date-time-control.html\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldRadioButton\\\"\\n                                            template=\\\"radio-button-drop-down-list.html\\\"\\n                                            add-entry=\\\"vm.addEntry\\\"\\n                                            remove-entry=\\\"vm.removeEntry\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldDropDownList\\\"\\n                                            template=\\\"radio-button-drop-down-list.html\\\"\\n                                            add-entry=\\\"vm.addEntry\\\"\\n                                            remove-entry=\\\"vm.removeEntry\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n        <dialog-editor-modal-field-template ng-switch-when=\\\"DialogFieldTagControl\\\"\\n                                            template=\\\"tag-control.html\\\"\\n                                            current-category-entries=\\\"vm.currentCategoryEntries\\\"\\n                                            categories=\\\"vm.categories\\\"\\n                                            resolve-categories=\\\"vm.resolveCategories\\\"\\n                                            modal-data=\\\"vm.modalData\\\">\\n        </dialog-editor-modal-field-template>\\n      </div>\\n      <div ng-if=\\\"vm.modalData.dynamic\\\">\\n        <dialog-editor-modal-field-template template=\\\"dynamic.html\\\">\\n        </dialog-editor-modal-field-template>\\n      </div>\\n    </form>\\n  </div>\\n  <!-- general details same for each field - advanced -->\\n  <div ng-show=\\\"vm.modalTabIsSet('advanced')\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <div pf-form-group pf-label=\\\"{{'Reconfigurable'|translate}}\\\">\\n        <input bs-switch\\n               ng-model=\\\"vm.modalData.reconfigurable\\\"\\n               type=\\\"checkbox\\\"\\n               switch-on-text=\\\"{{'Yes'|translate}}\\\"\\n               switch-off-text=\\\"{{'No'|translate}}\\\" >\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-danger\\\"\\n          type=\\\"button\\\"\\n          ng-click=\\\"vm.deleteField()\\\" translate>Delete</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"$dismiss()\\\" translate>Cancel</button>\\n  <button type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"vm.saveDialogFieldDetails()\\\"\\n          ng-disabled=\\\"vm.modalUnchanged()\\\" translate>Save\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/services/modal/modal.html\n// module id = 34\n// module chunks = 0","module.exports = \"<div class=\\\"miq-data-table\\\">\\n  <div ng-if=\\\"tableCtrl.settings.isLoading\\\" class=\\\"spinner spinner-lg\\\"></div>\\n  <div class=\\\"row miq-pagination\\\"\\n       ng-if=\\\"tableCtrl.settings && tableCtrl.settings.sortBy && (tableCtrl.settings.isLoading || tableCtrl.rows.length !== 0)\\\">\\n    <div ng-if=\\\"!tableCtrl.settings.hideSelect\\\"\\n         class=\\\"miq-select-all col-md-2 col-lg-2 col-xs-2\\\">\\n      <label>{{tableCtrl.settings.selectAllTitle}}: </label>\\n      <input type=\\\"checkbox\\\" ng-model=\\\"isChecked\\\" ng-click=\\\"tableCtrl.onCheckAll(isChecked)\\\" title=\\\"{{tableCtrl.settings.selectAllTitle}}\\\" />\\n    </div>\\n    <miq-sort-items ng-if=\\\"tableCtrl.settings.sortBy\\\"\\n                    class=\\\"miq-sort-items col-md-2 col-lg-2 col-xs-2\\\"\\n                    sort-object=\\\"tableCtrl.settings.sortBy\\\"\\n                    headers=\\\"tableCtrl.columns\\\"\\n                    drop-down-class=\\\"tableCtrl.settings.dropDownClass\\\"\\n                    on-sort=\\\"tableCtrl.onSortClick(sortObject.colId, isAscending)\\\"></miq-sort-items>\\n    <div class=\\\"col-md-7 col-lg-7 col-xs-7\\\">\\n      <div class=\\\"miq-pager\\\">\\n        <div class=\\\"miq-per-page\\\">\\n          <miq-toolbar-list on-item-click=\\\"tableCtrl.perPageClick(item)\\\"\\n                            drop-down-class=\\\"tableCtrl.settings.dropDownClass\\\"\\n                            toolbar-list=\\\"tableCtrl.perPage\\\"></miq-toolbar-list>\\n        </div>\\n        <div class=\\\"miq-paging\\\" ng-if=\\\"tableCtrl.settings.current\\\">\\n          <miq-paging settings=\\\"tableCtrl.settings\\\" on-change-page=\\\"tableCtrl.setTablePage(pageNumber)\\\"></miq-paging>\\n        </div>\\n      </div>\\n    </div>\\n    <div ng-if=\\\"tableCtrl.settings.items\\\" class=\\\"col-md-1 col-lg-1 col-xs-1 miq-page-counter\\\">\\n      <label>\\n        {{tableCtrl.translateOf(tableCtrl.settings.startIndex, tableCtrl.settings.endIndex, tableCtrl.settings.items)}}\\n      </label>\\n    </div>\\n  </div>\\n  <table class=\\\"table table-bordered table-striped table-hover miq-table-with-footer miq-table\\\"\\n         ng-if=\\\"tableCtrl.rows && tableCtrl.rows.length !== 0\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"narrow\\\">\\n\\n      </th>\\n      <th ng-if=\\\"$index !== 0\\\"\\n          ng-repeat=\\\"column in tableCtrl.columns track by $index\\\"\\n          ng-click=\\\"tableCtrl.onSortClick($index, !!tableCtrl.settings.sortBy && !tableCtrl.settings.sortBy.isAscending)\\\"\\n          ng-class=\\\"tableCtrl.getColumnClass(column)\\\">\\n        {{column.text}}\\n        <div class=\\\"pull-right\\\" ng-if=\\\"tableCtrl.isFilteredBy(column)\\\" >\\n          <i class=\\\"fa\\\" ng-class=\\\"tableCtrl.getSortClass()\\\"></i>\\n        </div>\\n      </th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr ng-repeat=\\\"row in tableCtrl.rows\\\"\\n        ng-class=\\\"{active : row.selected}\\\"\\n        ng-click=\\\"tableCtrl.onRowClick({item: row, event: $event})\\\">\\n      <td ng-repeat=\\\"(columnKey, column) in tableCtrl.columns\\\"\\n          ng-class=\\\"{\\n            narrow: row.cells[columnKey].is_checkbox || row.cells[columnKey].icon || row.cells[columnKey].is_button\\n          }\\\">\\n        <input ng-if=\\\"row.cells[columnKey].is_checkbox && !tableCtrl.settings.hideSelect\\\"\\n               ng-click=\\\"tableCtrl.onItemSelected({item: row, isSelected: isSelected})\\\"\\n               onclick=\\\"event.stopPropagation();\\\"\\n               type=\\\"checkbox\\\"\\n               ng-model=\\\"isSelected\\\"\\n               name=\\\"check_{{row.id}}\\\"\\n               value=\\\"{{row.id}}\\\"\\n               ng-checked=\\\"row.checked\\\"\\n               class=\\\"list-grid-checkbox\\\">\\n        <i ng-if=\\\"row.cells[columnKey].icon && tableCtrl.isIconOrImage(row, columnKey)\\\"\\n           class=\\\"{{row.cells[columnKey].icon}}\\\"\\n           title=\\\"{{row.cells[columnKey].title}}\\\">\\n          <i ng-if=\\\"row.cells[columnKey].icon2\\\" ng-class=\\\"row.cells[columnKey].icon2\\\"></i>\\n        </i>\\n        <img ng-if=\\\"row.cells[columnKey].icon === null && tableCtrl.isIconOrImage(row, columnKey)\\\"\\n             ng-src=\\\"{{row.img_url}}\\\"\\n             alt=\\\"{{row.cells[columnKey].title}}\\\"\\n             title=\\\"{{row.cells[columnKey].title}}\\\" />\\n        <span ng-if=\\\"row.cells[columnKey].text && !row.cells[columnKey].is_button\\\">\\n              {{row.cells[columnKey].text}}\\n        </span>\\n        <button ng-if=\\\"row.cells[columnKey].is_button && row.cells[columnKey].onclick\\\"\\n                class=\\\"btn btn-primary\\\"\\n                title=\\\"{{row.cells[columnKey].title}}\\\"\\n                alt=\\\"{{row.cells[columnKey].title}}\\\"\\n                ng-click=\\\"tableCtrl.onItemButtonClick(row.cells[columnKey])\\\">\\n          {{row.cells[columnKey].text}}\\n        </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/gtl/components/data-table/data-table.html\n// module id = 35\n// module chunks = 0","module.exports = \"<ul class=\\\"pagination\\\">\\n  <li>\\n    <a ng-class=\\\"{disabled: pagingCtrl.settings.current === 1}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: 1})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-double-left\\\"></span>\\n    </a>\\n  </li>\\n  <li>\\n    <a ng-class=\\\"{disabled: pagingCtrl.settings.current === 1}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: pagingCtrl.settings.current - 1})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-left\\\"></span>\\n    </a>\\n  </li>\\n  <li ng-repeat=\\\"page in pagingCtrl.updatePages(pagingCtrl.settings.total) track by $index\\\">\\n    <a ng-class=\\\"{disabled: pagingCtrl.settings.current === (page + 1)}\\\"\\n       href=\\\"javascript:void(0)\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: page + 1})\\\">\\n      {{page + 1}}\\n    </a>\\n  </li>\\n  <li>\\n    <a ng-class=\\\"{disabled: (pagingCtrl.settings.current) === pagingCtrl.settings.total}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: (pagingCtrl.settings.current + 1)})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-right\\\"></span>\\n    </a>\\n  </li>\\n  <li>\\n    <a ng-class=\\\"{disabled: (pagingCtrl.settings.current) === pagingCtrl.settings.total}\\\"\\n       ng-click=\\\"pagingCtrl.onChangePage({pageNumber: pagingCtrl.settings.total})\\\"\\n       href=\\\"javascript:void(0)\\\">\\n      <span class=\\\"i fa fa-angle-double-right\\\"></span>\\n    </a>\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/gtl/components/tile-view/paging.html\n// module id = 36\n// module chunks = 0","module.exports = \"<div class=\\\"miq-tile-section\\\">\\n    <div ng-if=\\\"tileCtrl.settings.isLoading\\\" class=\\\"spinner spinner-lg\\\"></div>\\n    <div class=\\\"row miq-pagination\\\"\\n         ng-if=\\\"tileCtrl.settings && tileCtrl.settings.sortBy && (tileCtrl.settings.isLoading || tileCtrl.rows.length !== 0)\\\">\\n      <div class=\\\"miq-select-all col-md-2 col-lg-2 col-xs-2\\\"\\n           ng-if=\\\"!tileCtrl.settings.hideSelect\\\">\\n        <label>{{tileCtrl.settings.selectAllTitle}}: </label>\\n        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked\\\" ng-click=\\\"tileCtrl.onCheckAllTiles(isChecked)\\\" title=\\\"{{tileCtrl.settings.selectAllTitle}}\\\" />\\n      </div>\\n      <miq-sort-items ng-if=\\\"tileCtrl.settings.sortBy\\\"\\n                      class=\\\"miq-sort-items col-md-2 col-lg-2 col-xs-2\\\"\\n                      sort-object=\\\"tileCtrl.settings.sortBy\\\"\\n                      headers=\\\"tileCtrl.columns\\\"\\n                      drop-down-class=\\\"tileCtrl.settings.dropDownClass\\\"\\n                      on-sort=\\\"tileCtrl.onSortClick(sortObject.colId, isAscending)\\\"></miq-sort-items>\\n      <div class=\\\"col-md-7 col-lg-7 col-xs-7\\\">\\n        <div class=\\\"miq-pager\\\">\\n          <div class=\\\"miq-per-page\\\">\\n            <miq-toolbar-list on-item-click=\\\"tileCtrl.perPageClick(item)\\\"\\n                              drop-down-class=\\\"tileCtrl.settings.dropDownClass\\\"\\n                              toolbar-list=\\\"tileCtrl.perPage\\\"></miq-toolbar-list>\\n          </div>\\n          <div class=\\\"miq-paging\\\" ng-if=\\\"tileCtrl.settings.current\\\">\\n            <miq-paging settings=\\\"tileCtrl.settings\\\" on-change-page=\\\"tileCtrl.setPage(pageNumber)\\\"></miq-paging>\\n          </div>\\n        </div>\\n      </div>\\n      <div ng-if=\\\"tileCtrl.settings.items\\\" class=\\\"col-md-1 col-lg-1 col-xs-1 miq-page-counter\\\">\\n        <label>\\n          {{tileCtrl.translateOf(tileCtrl.settings.startIndex, tileCtrl.settings.endIndex, tileCtrl.settings.items)}}\\n        </label>\\n      </div>\\n    </div>\\n  <div pf-card-view\\n       config=\\\"tileCtrl.options\\\"\\n       items=\\\"tileCtrl.rows\\\"\\n       class=\\\"miq-tile-view\\\"\\n       ng-class=\\\"tileCtrl.tileClass()\\\">\\n    <div ng-switch=\\\"config.type\\\">\\n      <ng-switch-when ng-switch-when=\\\"small\\\">\\n        <div class=\\\"miq-tile-head\\\">\\n          <a href=\\\"javascript:void(0)\\\" title=\\\"{{config.fetchTileName(item)}}\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">{{config.fetchTileName(item) | limitToSuffix : 5 : 5 }}</a>\\n        </div>\\n        <div class=\\\"miq-quadicon\\\">\\n          <a href=\\\"javascript:void(0)\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">\\n            <div ng-bind-html=\\\"config.trustAsHtmlQuadicon(item)\\\"></div>\\n          </a>\\n        </div>\\n      </ng-switch-when>\\n      <ng-switch-when ng-switch-when=\\\"big\\\">\\n        <a href=\\\"javascript:void(0)\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">{{config.fetchTileName(item)}}</a>\\n        <div class=\\\"row miq-row-margin-only-top \\\">\\n          <div class=\\\"col-md-3 col-lg-3 col-xs-3 miq-icon-section\\\">\\n            <a href=\\\"javascript:void(0)\\\" ng-click=\\\"config.onItemClick(item, $event)\\\">\\n              <div ng-bind-html=\\\"config.trustAsHtmlQuadicon(item)\\\"></div>\\n            </a>\\n          </div>\\n          <div class=\\\"col-md-9 col-lg-9 col-xs-9 miq-info-section\\\">\\n            <dl class=\\\"dl-horizontal tile\\\">\\n              <dt ng-repeat-start=\\\"(key, header) in config.columns | limitTo: 7 track by $index\\\" ng-if=\\\"header.text && header.text.indexOf('Name') === -1\\\" title=\\\"{{header.text}}\\\">{{header.text}}:</dt>\\n              <dd ng-repeat-end ng-if=\\\"header.text && header.text.indexOf('Name') === -1\\\" title=\\\"{{item.cells[key].text}}\\\">{{item.cells[key].text | limitToSuffix : 25 : 25}}</dd>\\n            </dl>\\n            <div ng-repeat=\\\"(columnKey, column) in config.columns\\\"\\n                 ng-if=\\\"item.cells[columnKey].is_button && item.cells[columnKey].onclick\\\"\\n                 align=\\\"right\\\">\\n              <button class=\\\"btn btn-primary\\\"\\n                      title=\\\"{{item.cells[columnKey].title}}\\\"\\n                      alt=\\\"{{item.cells[columnKey].title}}\\\"\\n                      ng-click=\\\"config.onButtonItemClick(item.cells[columnKey])\\\">\\n                {{item.cells[columnKey].text}}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-switch-when>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/gtl/components/tile-view/tile-view.html\n// module id = 37\n// module chunks = 0","module.exports = \"<div class=\\\"uib-dropdown miq-siteswitcher\\\">\\n  <button class=\\\"btn btn-link uib-dropdown-toggle\\\" type=\\\"button\\\" id=\\\"domain-switcher\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n    <span class=\\\"fa fa-lg fa-th miq-siteswitcher-icon\\\"></span>\\n  </button>\\n  <div class=\\\"uib-dropdown-menu uib-dropdown-menu-right\\\" aria-labelledby=\\\"domain-switcher\\\">\\n    <div ng-repeat=\\\"site in ctrl.sites\\\" class=\\\"miq-siteswitcher-entry\\\">\\n      <a class=\\\"miq-siteswitcher-link\\\" ng-href=\\\"{{site.url}}\\\" target=\\\"_blank\\\">\\n        <span title=\\\"{{site.tooltip}}\\\" class=\\\"fa fa-3x\\\" ng-class=\\\"site.iconClass\\\"></span>\\n        <div>{{site.title}}</div>\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/site-switcher/site-switcher.html\n// module id = 38\n// module chunks = 0","module.exports = \"<button title=\\\"{{toolbarButton.title}}\\\"\\n        data-explorer=\\\"{{toolbarButton.explorer}}\\\"\\n        data-confirm-tb=\\\"{{toolbarButton.confirm}}\\\"\\n        id=\\\"{{toolbarButton.id}}\\\"\\n        name=\\\"{{toolbarButton.name}}\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-default\\\"\\n        data-click=\\\"{{toolbarButton.id}}\\\"\\n        data-url=\\\"{{toolbarButton.url}}\\\"\\n        data-url_parms=\\\"{{toolbarButton.url_parms}}\\\"\\n        data-prompt=\\\"{{toolbarButton.prompt}}\\\"\\n        data-popup=\\\"{{toolbarButton.popup}}\\\"\\n        ng-class=\\\"{active: toolbarButton.selected, disabled: !toolbarButton.enabled}\\\"\\n        ng-hide=\\\"toolbarButton.hidden\\\"\\n        ng-click=\\\"onItemClick({item: toolbarButton, $event: $event})\\\">\\n  <i ng-if=\\\"toolbarButton.icon && toolbarButton.text\\\" class=\\\"{{toolbarButton.icon}}\\\" style=\\\"margin-right: 5px;\\\"></i>\\n  <i ng-if=\\\"toolbarButton.icon && !toolbarButton.text\\\" class=\\\"{{toolbarButton.icon}}\\\"></i>\\n  <img ng-if=\\\"toolbarButton.img_url && !toolbarButton.icon\\\" ng-src=\\\"{{toolbarButton.img_url}}\\\"\\n       data-enabled=\\\"{{toolbarButton.img_url}}\\\"\\n       data-disabled=\\\"{{toolbarButton.img_url}}\\\">\\n  {{toolbarButton.text}}\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/toolbar/components/toolbar-menu/toolbar-button.html\n// module id = 39\n// module chunks = 0","module.exports = \"<div class=\\\"btn-group\\\" ng-class=\\\"vm.dropDownClass\\\" uib-dropdown ng-if=\\\"vm.isEmpty\\\">\\n  <button type=\\\"button\\\" uib-dropdown-toggle class=\\\"btn uib-dropdown-toggle btn-default\\\"\\n          ng-class=\\\"{disabled: !vm.toolbarList.enabled}\\\" title=\\\"{{vm.toolbarList.title}}\\\">\\n    <i class=\\\"{{vm.toolbarList.icon}}\\\" style=\\\"margin-right: 5px;\\\" ng-if=\\\"vm.toolbarList.icon\\\"></i>\\n    {{vm.toolbarList.text}}\\n    <span class=\\\"caret\\\"></span>\\n  </button>\\n  <ul class=\\\"uib-dropdown-menu\\\" role=\\\"menu\\\">\\n    <li ng-repeat=\\\"item in vm.toolbarList.items track by $index\\\" ng-class=\\\"{disabled: !item.enabled}\\\">\\n      <a ng-if=\\\"item.type !== 'separator'\\\"\\n         ng-hide=\\\"item.hidden\\\"\\n         href=\\\"\\\"\\n         title=\\\"{{item.title}}\\\"\\n         data-explorer=\\\"{{item.explorer}}\\\"\\n         data-confirm-tb=\\\"{{item.confirm}}\\\"\\n         ng-click=\\\"vm.onItemClick({item: item, $event: $event})\\\"\\n         data-function=\\\"{{item.data.function}}\\\"\\n         data-function-data=\\\"{{item.data['function-data']}}\\\"\\n         data-target=\\\"{{item.data.target}}\\\"\\n         data-toggle=\\\"{{item.data.toggle}}\\\"\\n         data-click=\\\"{{item.id}}\\\"\\n         name=\\\"{{item.id}}\\\"\\n         id=\\\"{{item.id}}\\\"\\n         data-url_parms=\\\"{{item.url_parms}}\\\"\\n         data-prompt=\\\"{{item.prompt}}\\\"\\n         data-popup=\\\"{{item.popup}}\\\"\\n         data-url=\\\"{{item.url}}\\\">\\n        <i ng-if=\\\"item.icon && item.text\\\" class=\\\"{{item.icon}}\\\" style=\\\"margin-right: 5px;\\\"></i>\\n        <i ng-if=\\\"item.icon && !item.text\\\" class=\\\"{{item.icon}}\\\"></i>\\n        <img ng-if=\\\"item.img_url && !item.icon\\\" ng-src=\\\"{{item.img_url}}\\\"\\n             data-enabled=\\\"{{item.img_url}}\\\"\\n             data-disabled=\\\"{{item.img_url}}\\\">\\n        {{item.text}}\\n      </a>\\n      <div ng-if=\\\"item.type === 'separator'\\\" class=\\\"divider \\\" role=\\\"presentation\\\" ng-hide=\\\"item.hidden\\\"></div>\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/toolbar/components/toolbar-menu/toolbar-list.html\n// module id = 40\n// module chunks = 0","module.exports = \"<div class=\\\"toolbar-pf-actions miq-toolbar-actions\\\">\\n  <div class=\\\"form-group miq-toolbar-group\\\"\\n       ng-repeat=\\\"toolbarItem in vm.toolbarItems\\\"\\n       ng-if=\\\"vm.hasContent(toolbarItem)\\\">\\n    <ng-repeat ng-repeat=\\\"item in toolbarItem \\\">\\n      <miq-toolbar-button ng-if=\\\"item.type === vm.getButtonType()\\\"\\n                          toolbar-button=\\\"item\\\"\\n                          on-item-click=\\\"vm.onItemClick(item, $event)\\\">\\n      </miq-toolbar-button>\\n      <miq-toolbar-button ng-if=\\\"item.type === vm.getButtonTwoState() && item.id.indexOf('view_') === -1\\\"\\n                          toolbar-button=\\\"item\\\"\\n                          on-item-click=\\\"vm.onItemClick(item, $event)\\\">\\n      </miq-toolbar-button>\\n      <miq-toolbar-list ng-if=\\\"item.type === vm.getToolbarListType() && item.items.length > 0\\\"\\n                        toolbar-list=\\\"item\\\"\\n                        on-item-click=\\\"vm.onItemClick(item, $event)\\\">\\n      </miq-toolbar-list>\\n      <div ng-if=\\\"item.name == 'custom' && item.args && item.args.html\\\"\\n           ng-bind-html=\\\"vm.trustAsHtml(item.args.html)\\\"\\n           class=\\\"miq-custom-html\\\"></div>\\n    </ng-repeat>\\n  </div>\\n  <miq-toolbar-view toolbar-views=\\\"vm.toolbarViews\\\"\\n                    on-item-click=\\\"vm.onViewClick({item: item, $event: $event})\\\"\\n                    class=\\\"miq-view-list\\\">\\n  </miq-toolbar-view>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/toolbar/components/toolbar-menu/toolbar-menu.html\n// module id = 41\n// module chunks = 0","module.exports = \"<div class=\\\"toolbar-pf-view-selector pull-right form-group\\\">\\n  <button class=\\\"btn btn-link\\\"\\n          ng-repeat=\\\"item in vm.toolbarViews\\\"\\n          ng-class=\\\"{active: item.selected}\\\"\\n          title=\\\"{{item.title}}\\\"\\n          id=\\\"{{item.id}}\\\"\\n          data-url=\\\"{{item.url}}\\\"\\n          data-url_parms=\\\"{{item.url_parms}}\\\"\\n          data-prompt=\\\"{{item.prompt}}\\\"\\n          data-popup=\\\"{{item.popup}}\\\"\\n          ng-click=\\\"vm.onItemClick({item: item, $event: $event})\\\"\\n          name=\\\"{{item.name}}\\\">\\n    <i class=\\\"{{item.icon}}\\\" style=\\\"\\\"></i>\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/toolbar/components/toolbar-menu/toolbar-view.html\n// module id = 42\n// module chunks = 0","import SortItems from './sortItemsComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('miqSortItems', new SortItems);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/components/index.ts","import * as _ from 'lodash';\nimport * as ng from 'angular';\n/**\n * Controller for sort items component, it filters headers to fit config object of `pf-sort`.\n * @memberof miqStaticAssets.common\n * @ngdoc controller\n * @name SortItemsController\n */\nexport class SortItemsController {\n  public headers: any;\n  public options: any;\n  public sortObject: any;\n  public dropDownClass: any[];\n  public onSort: (args: {sortObject: any, isAscending: boolean}) => void;\n\n  /* @ngInject */\n  constructor(private $element: any, private $timeout: any) {\n    this.initOptions();\n  }\n\n  /**\n   * Angular's method for checking one way data bounded properties changes.\n   * @memberof SortItemsController\n   * @function $onChanges\n   * @param changesObj {Object} angular changes object.\n   */\n  public $onChanges(changesObj: any) {\n    if (changesObj.headers) {\n      this.fillFields();\n      if (this.sortObject) {\n        this.setSortItem();\n      }\n    }\n    if (changesObj.dropDownClass) {\n      this.applyClass();\n    }\n  }\n\n  public $postLink() {\n    //we have to wait for rendering of components, hence $timeout\n    this.$timeout(() => this.applyClass());\n  }\n\n  /**\n   * Public method for setting item which is currently sorted by. It will take id of object in `headers` as `colId`,\n   * it's text as actual Id and same applies to `title`.\n   * @memberof SortItemsController\n   * @function setSortItem\n   */\n  public setSortItem() {\n    if (this.sortObject && this.sortObject.sortObject && this.sortObject && this.sortObject.sortObject.text) {\n      this.options.currentField = {\n        colId: _.findIndex(this.headers, this.sortObject.sortObject),\n        id: this.sortObject.sortObject.text.toLowerCase(),\n        title: this.sortObject.sortObject.text\n      };\n      this.options.isAscending = this.sortObject.isAscending;\n    }\n  }\n\n  /**\n   * Public method which is called after constructing this controller. It will set default values for config object,\n   * along side with sort method.\n   * @memberof SortItemsController\n   * @function initOptions\n   */\n  public initOptions() {\n    this.options = {\n      fields: [],\n      onSortChange: (item: any, isAscending: boolean) => this.onSort({sortObject: item, isAscending: isAscending}),\n      currentField: {}\n    };\n  }\n\n  /**\n   * Private method which will filter out and transform headers to config object. This function will filter out all\n   * columns which has `is_narrow` and no `text` is set fot them. Also it will use each header key as `colId`,\n   * text as `id` and again text as `title`.\n   * @memberof SortItemsController\n   * @function fillFields\n   */\n  private fillFields() {\n    _.each(this.headers, (oneCol, key) => {\n      if (!oneCol.hasOwnProperty('is_narrow') && oneCol.hasOwnProperty('text')) {\n        this.options.fields.push({\n          colId: key,\n          id: oneCol.text.toLowerCase(),\n          title: oneCol.text\n        });\n      }\n    });\n  }\n\n  /**\n   * Method for applying additional class for dropdown.\n   * dropDownClass can be either string of classes, or array.\n   */\n  private applyClass() {\n    if (this.dropDownClass) {\n      Array.isArray(this.dropDownClass) ?\n        this.$element.find('.uib-dropdown').addClass(...this.dropDownClass) :\n        this.$element.find('.uib-dropdown').addClass(this.dropDownClass);\n    }\n  }\n}\n/**\n * @description\n *    Component for showing sort component. See {@link miqStaticAssets.common.SortItemsController} on how functions\n *    and properties are handled, This component requires `pf-sort` (see\n *    <a href=\"http://angular-patternfly.rhcloud.com/#/api/patternfly.sort.directive:pfSort\">patternfly's\n *    implemetnation</a>) component to be part of application scope.\n *    If you do not provide such component no sort will be show. `pf-sort` requires `config` property which consists of:\n *    ```javascript\n *    config = {\n *      fields: [],\n *      onSortChange: (item: any, isAscending: boolean) => void,\n *      currentField: {}\n *    }\n *    ```\n * @memberof miqStaticAssets.common\n * @ngdoc component\n * @name miqSortItems\n * @attr {Expression} onSort function which is called after sorting has changed.\n * @attr {Object} headers items which will be present in sort chooser.\n * @attr {Object} sortObject object which is currently sorted by.\n * @example\n * <miq-sort-items on-sort=\"ctrl.onSort(sortObject, isAscending)\"\n *                 headers=\"ctrl.headers\"\n *                 sort-object=\"ctrl.currentSortObject\">\n * </miq-sort-items>\n */\nexport default class SortItems implements ng.IComponentOptions {\n  public replace: boolean = true;\n  public template = `<div pf-sort config=\"vm.options\"></div>`;\n  public controller = SortItemsController;\n  public controllerAs = 'vm';\n  public bindings: any = {\n    onSort: '&',\n    headers: '<',\n    sortObject: '<',\n    dropDownClass: '<'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/components/sortItemsComponent.ts","import {IEndpoints} from '../interfaces/endpoints';\nexport class DefaultEndpoints implements IEndpoints {\n  public listDataTable: string;\n  public deleteItemDataTable: string;\n  public validateItem: string;\n  public createItem: string;\n  public providerSettings: string;\n  public toolbarSettings: string;\n  constructor() {\n    this.listDataTable = '/list';\n    this.deleteItemDataTable = '/delete';\n    this.validateItem = '/validate';\n    this.createItem = '/create';\n    this.providerSettings = '/list_providers_settings';\n    this.toolbarSettings = '/toolbar';\n  }\n}\n\nexport default class EndpointsService {\n  public endpoints: IEndpoints;\n  public rootPoint: string = '';\n\n  constructor() {\n    this.endpoints = new DefaultEndpoints;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/services/endpointsService.ts","import EndpointsService from './endpointsService';\nimport TranslateService from './translateService';\n\nexport default (module: ng.IModule) => {\n  module.service('MiQEndpointsService', EndpointsService);\n  module.service('MiQTranslateService', TranslateService);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/services/index.ts","export default class TranslateService {\n  /*@ngInject*/\n  constructor(private $window: any) {}\n\n  public translateString(stringToTranslate) {\n    return this.$window.__(stringToTranslate);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/common/services/translateService.ts","import * as ng from 'angular';\nimport * as _ from 'lodash';\n\n/**\n * Controller for the Dialog Editor box component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name BoxController\n */\nclass BoxController {\n  public sortableOptionsBox: any;\n  public sortableOptionsFields: any;\n  public service: any;\n  public dialogTabs: any;\n\n  /*@ngInject*/\n  constructor(private DialogEditor: any, private DialogEditorModal: any) {\n  }\n\n  /**\n   * Load service to be able to access it form the template.\n   * Load status of tabs.\n   * @memberof BoxController\n   * @function $onInit\n   */\n  public $onInit() {\n    this.service = this.DialogEditor;\n    this.dialogTabs = this.DialogEditor.getDialogTabs();\n    // Rules for Drag&Drop sorting of boxes\n    this.sortableOptionsBox = {\n      axis: 'y',\n      cancel: '.nosort',\n      cursor: 'move',\n      opacity: 0.5,\n      revert: 50,\n      stop: (e: any, ui: any) => {\n        let sortedBox = ui.item.scope().$parent.tab.dialog_groups;\n        // update indexes of other boxes after changing their order\n        this.DialogEditor.updatePositions(sortedBox);\n      },\n    };\n    // Rules for Drag&Drop sorting of elements inside of boxes\n    this.sortableOptionsFields = {\n      axis: 'y',\n      cancel: '.nosort',\n      cursor: 'move',\n      revert: 50,\n      stop: (e: any, ui: any) => {\n        let sortedField = ui.item.scope().$parent.box.dialog_fields;\n        // update indexes of other fields after changing their order\n        this.DialogEditor.updatePositions(sortedField);\n      },\n    };\n  }\n\n  /**\n   * Add a new box to the list.\n   * The new box is automatically appended to the last position of the list\n   * @memberof BoxController\n   * @function addBox\n   */\n  public addBox() {\n    this.dialogTabs[this.DialogEditor.activeTab].dialog_groups\n      .push(\n        {\n          description: __('Description'),\n          label: __('Label'),\n          display: 'edit',\n          position: 0,\n          dialog_fields: [],\n        }\n      );\n    // update indexes of other boxes after adding a new one\n    this.DialogEditor.updatePositions(\n      this.dialogTabs[this.DialogEditor.activeTab].dialog_groups\n    );\n  }\n\n  /**\n   * Remove box and all its content from the dialog.\n   * @memberof BoxController\n   * @function removeBox\n   * @param {number} id as index of removed box\n   */\n  public removeBox(id: number) {\n    _.remove(\n      this.dialogTabs[this.DialogEditor.activeTab].dialog_groups,\n      (box) => box.position === id\n    );\n    // update indexes of other boxes after removing\n    this.DialogEditor.updatePositions(\n      this.dialogTabs[this.DialogEditor.activeTab].dialog_groups\n    );\n  }\n\n  /**\n   * Handle Drag&Drop event.\n   * @memberof BoxController\n   * @function droppableOptions\n   * @param {number} event jQuery object\n   * @param {number} ui jQuery object\n   */\n  public droppableOptions(e: any, ui: any) {\n    let droppedItem = ng.element(e.target).scope();\n    // update indexes of other boxes after changing their order\n    this.DialogEditor.updatePositions(\n      droppedItem.box.dialog_fields\n    );\n  }\n\n  /**\n   * Show modal to edit label and description of the box.\n   * @memberof BoxController\n   * @function editDialogModal\n   * @param {number} tab is an index of tab, where the box is placed\n   * @param {number} box is an index of box\n   */\n  public editDialogModal(tab: number, box: number) {\n    this.DialogEditorModal.showModal(tab, box);\n  }\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorBoxes\n * @description\n *    Component implementing behaviour for the boxes inside of\n *    the dialogs tabs.\n * @example\n * <dialog-editor-boxes>\n * </dialog-editor-boxes>\n */\nexport default class Box {\n  public template = require('./box.html');\n  public controller: any = BoxController;\n  public controllerAs: string = 'vm';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/box/boxComponent.ts","import Box from './boxComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('dialogEditorBoxes', new Box);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/box/index.ts","/**\n * Controller for the Dialog Editor field component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name FieldController\n */\nclass FieldController {\n  public service: any;\n  public fieldData: any;\n  public boxPosition: any;\n\n  /*@ngInject*/\n  constructor(private DialogEditor: any,\n              private DialogEditorModal: any) {\n  }\n\n  /**\n   * Load service to be able to access it form the template.\n   * @memberof FieldController\n   * @function $onInit\n   */\n  public $onInit() {\n    this.service = this.DialogEditor;\n  }\n\n  /**\n   * Show modal to edit details of the component\n   * @memberof FieldController\n   * @function editDialogModal\n   * @param {number} tab is an index of tab, where the box is placed\n   * @param {number} box is an index of box, where the field is placed\n   * @param {number} field is an index of field\n   */\n  public editDialogModal(tab: number, box: number, field: number) {\n    this.DialogEditorModal.showModal(tab, box, field);\n  }\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorField\n * @description\n *    Component implementing behaviour for the fields inside of\n *    the dialogs boxes.\n * @example\n * <dialog-editor-field box-position=\"box.position\"\n *                      field-data='field'\n * </dialog-editor-field>\n */\nexport default class Field {\n  public template = require('./field.html');\n  public controller: any = FieldController;\n  public controllerAs: string = 'vm';\n  public bindings: any = {\n    fieldData: '<',\n    boxPosition: '<',\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/field/fieldComponent.ts","import Field from './fieldComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('dialogEditorField', new Field);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/field/index.ts","import tabList from './tab-list';\nimport box from './box';\nimport field from './field';\nimport toolbox from './toolbox';\nimport modalFieldTemplate from './modal-field-template';\n\nexport default (module: ng.IModule) => {\n  tabList(module);\n  box(module);\n  field(module);\n  toolbox(module);\n  modalFieldTemplate(module);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/index.ts","import TabList from './tabListComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('dialogEditorTabs', new TabList);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/tab-list/index.ts","import * as ng from 'angular';\nimport * as _ from 'lodash';\n\n/**\n * Controller for the Dialog Editor tab list component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name TabListController\n */\nclass TabListController {\n  public tabList: any;\n  public sortableOptions: any;\n\n  /*@ngInject*/\n  constructor(private DialogEditor: any, private DialogEditorModal: any) {\n  }\n\n  /**\n   * Activate the first tab in tab list, if there is any.\n   * @memberof TabListController\n   * @function onInit\n   */\n  public $onInit() {\n    // load tabs data from the service\n    this.tabList = this.DialogEditor.getDialogTabs();\n    // set active tab\n    if (this.tabList.length !== 0) {\n      this.DialogEditor.activeTab = 0;\n      this.tabList[this.DialogEditor.activeTab].active = true;\n    }\n    // set options for sorting tabs in list\n    this.sortableOptions = {\n      cancel: '.nosort',\n      cursor: 'move',\n      helper: 'clone',\n      revert: 50,\n      stop: (e: any, ui: any) => {\n        let sortedTab = ng.element(ui.item).scope().$parent;\n        let tabList = sortedTab.vm.tabList;\n        this.DialogEditor.updatePositions(tabList);\n        this.DialogEditor.activeTab = _.find(tabList, {active: true}).position;\n      },\n    };\n  }\n\n  /**\n   * Add a new tab to the list.\n   * New tab is automatically appended to the last position of the list and\n   * set as active.\n   * @memberof TabListController\n   * @function addTab\n   */\n  public addTab() {\n    // deactivate currently active tab\n    this.tabList.forEach((tab) =>  tab.active = false);\n    // create a new tab\n    let nextIndex = this.tabList.length;\n    this.tabList.push(\n      {\n        description: __('New tab ') + nextIndex,\n        display: 'edit',\n        label: __('New tab ') + nextIndex,\n        position: nextIndex,\n        active: true,\n        dialog_groups: [],\n      }\n    );\n    this.DialogEditor.activeTab = nextIndex;\n    this.DialogEditor.updatePositions(this.tabList);\n  }\n\n  /**\n   * Delete tab and all its content from the dialog.\n   * After removing tab, position attributes needs to be updated.\n   * If the tab to delete is active in the moment of the deletion, the\n   * activity goes to the other tab.\n   * @memberof TabListController\n   * @function removeTab\n   * @param {number} id is an index of remove tab\n   */\n  public removeTab(id: number) {\n    // pass the activity to other tab, if the deleted is active\n    if (this.tabList[id].active) {\n      if ((this.tabList.length - 1) === this.tabList[id].position &&\n          (this.tabList.length - 1) !== 0) {\n        // active tab was at the end → new active tab is on previous index\n        this.tabList[id - 1].active = true;\n      } else if ((this.tabList.length - 1) > this.tabList[id].position) {\n        // active tab was not at the end → new active tab is on following index\n        this.tabList[id + 1].active = true;\n      }\n    }\n    // remove tab with matching id\n    _.remove(this.tabList, (tab) => tab.position === id);\n    // update indexes of other tabs after removing\n    if (this.tabList.length !== 0) {\n      this.DialogEditor.updatePositions(this.tabList);\n    } else {\n      return;\n    }\n    // set activity in the service\n    let activeTabData = _.find(\n      this.tabList,\n      {active: true}\n    );\n    if (ng.isDefined(activeTabData)) {\n      this.DialogEditor.activeTab = activeTabData.position;\n    }\n  }\n\n  /**\n   * Assign activity to the selected tab.\n   * @memberof TabListController\n   * @function selectTab\n   * @param {number} id is an index of remove tab\n   */\n  public selectTab(id: number) {\n    // deactivate currently active\n    let deselectedTab = _.find(\n      this.tabList,\n      {active: true}\n    );\n    deselectedTab.active = false;\n    // activate selected\n    let selectedTab = this.tabList[id];\n    selectedTab.active = true;\n    this.DialogEditor.activeTab = id;\n  }\n\n  /**\n   * Show modal to edit label and description of the tab\n   * @memberof TabListController\n   * @function editDialogModal\n   * @param {number} tab is an index of tab\n   */\n  public editDialogModal(tab: number) {\n    this.DialogEditorModal.showModal(tab);\n  }\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorTabs\n * @description\n *    Component implementing behaviour for the tabs inside of\n *    the dialogs.\n * @example\n * <dialog-editor-tabs>\n * </dialog-editor-tabs>\n */\nexport default class TabList {\n  public template = require('./tab-list.html');\n  public controller: any = TabListController;\n  public controllerAs: string = 'vm';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/tab-list/tabListComponent.ts","import Toolbox from './toolboxComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('dialogEditorFieldStatic', new Toolbox);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/toolbox/index.ts","class DialogField {\n  public icon: string;\n  public label: string;\n  public placeholders: any;\n\n  constructor(type: string,\n              icon: string,\n              label: string,\n              options: any = {}) {\n    this.icon = icon;\n    this.label = label;\n    this.placeholders = Object.assign({\n      name: '',\n      description: '',\n      type: type,\n      display: 'edit',\n      display_method_options: {},\n      read_only: false,\n      required: false,\n      required_method_options: {},\n      default_value: '',\n      values_method_options: {},\n      label: label,\n      position: 0,\n      dynamic: false,\n      show_refresh_button: false,\n      load_values_on_init: false,\n      auto_refresh: false,\n      trigger_auto_refresh: false,\n      reconfigurable: false,\n      visible: true,\n      options: {\n        protected: false,\n      },\n      resource_action: {resource_type: 'DialogField', ae_attributes: {}},\n    }, options);\n  }\n}\n\n/**\n * Controller for the Dialog Editor toolbox component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolboxController\n */\nexport class ToolboxController {\n  public fields: any = {\n    dialogFieldTextBox:\n      new DialogField(\n        'DialogFieldTextBox',\n        'fa fa-font',\n        __('Text Box')\n      ),\n    dialogFieldTextAreaBox:\n      new DialogField(\n        'DialogFieldTextAreaBox',\n        'fa fa-file-text-o',\n        __('Text Area')\n      ),\n    dialogFieldCheckBox:\n      new DialogField(\n        'DialogFieldCheckBox',\n        'fa fa-check-square-o',\n        __('Check Box')\n      ),\n    dialogFieldDropDownList:\n      new DialogField(\n        'DialogFieldDropDownList',\n        'fa fa-caret-square-o-down',\n        __('Dropdown List'),\n        {\n          data_type: 'string',\n          values: [],\n          options: {sort_by: 'description', sort_order: 'ascending'},\n        }\n      ),\n    dialogFieldRadioButton:\n      new DialogField(\n        'DialogFieldRadioButton',\n        'fa fa-circle-o',\n        __('Radio Button'),\n        {\n          data_type: 'string',\n          values: [],\n          options: {sort_by: 'description', sort_order: 'ascending'},\n        }\n      ),\n    dialogFieldDateControl:\n      new DialogField(\n        'DialogFieldDateControl',\n        'fa fa-calendar',\n        __('Date Control')\n      ),\n    dialogFieldDateTimeControl:\n      new DialogField(\n        'DialogFieldDateTimeControl',\n        'fa fa-clock-o',\n        __('Date Time Control')\n      ),\n    dialogFieldTagControl:\n      new DialogField(\n        'DialogFieldTagControl',\n        'fa fa-tags',\n        __('Tag Control'),\n        {\n          data_type: 'string',\n          values: [],\n          options: {\n            force_single_value: false,\n            sort_by: 'description',\n            sort_order: 'ascending',\n          },\n        }\n      ),\n  };\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name dialogEditorFieldStatic\n * @description\n *    Component is used as a toolbox for the Dialog Editor.\n * @example\n * <dialog-editor-field-static>\n * </dialog-editor-field-static>\n */\nexport default class Toolbox {\n  public template = require('./toolbox.html');\n  public controller: any = ToolboxController;\n  public controllerAs: string = 'vm';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/components/toolbox/toolboxComponent.ts","export default class DialogEditorService {\n  public data: any = {};\n  public activeTab: number = 0;\n\n  /**\n   * Store data passed in parameter.\n   * @memberof DialogEditorService\n   * @function setData\n   * @param {any} nested object containing data of the dialog\n   */\n  public setData(data: any) {\n    this.data = data;\n  }\n\n  /**\n   * Return dialog id loaded at service.\n   * @memberof DialogEditorService\n   * @function getDialogId\n   */\n  public getDialogId() {\n    return this.data.content[0].id;\n  }\n\n  /**\n   * Return dialog label loaded at service.\n   * @memberof DialogEditorService\n   * @function getDialogLabel\n   */\n  public getDialogLabel() {\n    return this.data.content[0].label;\n  }\n\n  /**\n   * Return dialog description loaded at service.\n   * @memberof DialogEditorService\n   * @function getDialogDescription\n   */\n  public getDialogDescription() {\n    return this.data.content[0].description;\n  }\n\n  /**\n   * Return dialog tabs loaded at service.\n   * @memberof DialogEditorService\n   * @function getDialogTabs\n   */\n  public getDialogTabs() {\n    return this.data.content[0].dialog_tabs;\n  }\n\n  /**\n   * Update positions for elements in array.\n   * @memberof DialogEditorService\n   * @function updatePositions\n   * @param {any[]} array of elements to sort\n   */\n  public updatePositions(elements: any[]) {\n    elements.forEach((value, key) => value.position = key);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/services/dialogEditorService.ts","import DialogEditorService from './dialogEditorService';\nimport ModalService from './modal/modalService';\n\nexport default (module: ng.IModule) => {\n  module.service('DialogEditor', DialogEditorService);\n  module.service('DialogEditorModal', ModalService);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/services/index.ts","import * as _ from 'lodash';\nimport * as ng from 'angular';\n\n/**\n * Controller for the Dialog Editor modal service\n * @ngdoc controller\n * @name ModalController\n */\nclass ModalController {\n  public modalTab: string = 'element_information';\n  public modalData: any;\n  public element: string;\n  public categories: any;\n  public dialog: any;\n\n  /*@ngInject*/\n  constructor(private dialogDetails: any,\n              private $uibModalInstance: any,\n              private API: any,\n              private DialogEditor: any) {\n    ng.extend(this, {\n      dialog: this.dialogDetails,\n      saveDialogFieldDetails: this.saveDialogFieldDetails,\n      addEntry: this.addEntry,\n      removeEntry: this.removeEntry,\n      deleteField: this.deleteField,\n      modalUnchanged: this.modalUnchanged,\n      modalTabSet: this.modalTabSet,\n      modalTabIsSet: this.modalTabIsSet,\n      currentCategoryEntries: this.currentCategoryEntries,\n    });\n\n    // recognize edited element type\n    if (ng.isUndefined(this.dialog.fieldId)\n     && ng.isUndefined(this.dialog.boxId)\n     && ng.isDefined(this.dialog.tabId)) {\n      this.element = 'tab';\n    } else if (ng.isUndefined(this.dialog.fieldId)\n            && ng.isDefined(this.dialog.boxId)\n            && ng.isDefined(this.dialog.tabId)) {\n      this.element = 'box';\n    } else if (ng.isDefined(this.dialog.fieldId)\n            && ng.isDefined(this.dialog.boxId)\n            && ng.isDefined(this.dialog.tabId)) {\n      this.element = 'field';\n    }\n\n    // clone data from service\n    switch (this.element) {\n      case 'tab':\n        this.modalData = _.cloneDeep(\n          this.DialogEditor.getDialogTabs()[\n            this.dialog.tabId\n          ]\n        );\n        break;\n      case 'box':\n        this.modalData = _.cloneDeep(\n          this.DialogEditor.getDialogTabs()[\n            this.dialog.tabId\n          ].dialog_groups[\n            this.dialog.boxId\n          ]\n        );\n        break;\n      case 'field':\n        this.modalData = _.cloneDeep(\n          this.DialogEditor.getDialogTabs()[\n            this.dialog.tabId\n          ].dialog_groups[\n            this.dialog.boxId\n          ].dialog_fields[\n            this.dialog.fieldId\n          ]\n        );\n        // load categories from API, if the field is Tag Control\n        if (this.modalData.type === 'DialogFieldTagControl') {\n          this.resolveCategories().then(\n            (categories: any) => {\n              this.categories = categories;\n            }\n          );\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Load categories data from API.\n   * @memberof ModalController\n   * @function resolveCategories\n   */\n  public resolveCategories() {\n    return this.API.get('/api/categories' +\n                        '?expand=resources' +\n                        '&attributes=description,single_value,children');\n  }\n\n  /**\n   * Store the name of the tab, that is currently selected.\n   * @memberof ModalController\n   * @function modalTabSet\n   * @param tab is a name of the tab in the modal\n   */\n  public modalTabSet(tab: string) {\n    this.modalTab = tab;\n  }\n\n  /**\n   * Returns true/false according to which tab is currently\n   * selected in the modal.\n   * @memberof ModalController\n   * @function modalTabIsSet\n   */\n  public modalTabIsSet(tab: string) {\n    return this.modalTab === tab;\n  }\n\n  /**\n   * Check for changes in the modal.\n   * @memberof ModalController\n   * @function modalUnchanged\n   */\n  public modalUnchanged() {\n    switch (this.element) {\n      case 'tab':\n        return _.isMatch(\n          this.DialogEditor.getDialogTabs()[\n            this.DialogEditor.activeTab\n          ],\n          this.modalData\n        );\n      case 'box':\n        return _.isMatch(\n          this.DialogEditor.getDialogTabs()[\n            this.DialogEditor.activeTab\n          ].dialog_groups[\n            this.dialog.boxId\n          ],\n          this.modalData\n        );\n      case 'field':\n        return _.isMatch(\n          this.DialogEditor.getDialogTabs()[\n            this.DialogEditor.activeTab\n          ].dialog_groups[\n            this.dialog.boxId\n          ].dialog_fields[\n            this.dialog.fieldId\n          ],\n          this.modalData\n        );\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Store modified data back to the service.\n   * @memberof ModalController\n   * @function saveDialogFieldDetails\n   */\n  public saveDialogFieldDetails() {\n    // TODO: add verification for required forms\n    // store data to service\n    switch (this.element) {\n      case 'tab':\n        this.DialogEditor.getDialogTabs()[\n          this.DialogEditor.activeTab\n        ].label = this.modalData.label;\n        // description\n        this.DialogEditor.getDialogTabs()[\n          this.DialogEditor.activeTab\n        ].description = this.modalData.description;\n        break;\n      case 'box':\n        // label\n        this.DialogEditor.getDialogTabs()[\n          this.DialogEditor.activeTab\n        ].dialog_groups[\n          this.dialog.boxId\n        ].label = this.modalData.label;\n        // description\n        this.DialogEditor.getDialogTabs()[\n          this.DialogEditor.activeTab\n        ].dialog_groups[\n          this.dialog.boxId\n        ].description = this.modalData.description;\n        break;\n      case 'field':\n        this.DialogEditor.getDialogTabs()[\n          this.DialogEditor.activeTab\n        ].dialog_groups[\n          this.dialog.boxId\n        ].dialog_fields[\n          this.dialog.fieldId\n        ] = this.modalData;\n        break;\n      default:\n        break;\n    }\n\n    // close modal\n    this.$uibModalInstance.close();\n  }\n\n  /**\n   * Delete dialog field selected in modal.\n   * @memberof ModalController\n   * @function deleteField\n   */\n  public deleteField() {\n    _.remove(\n      this.DialogEditor.getDialogTabs()[\n        this.DialogEditor.activeTab\n      ].dialog_groups[\n        this.dialog.boxId\n      ].dialog_fields,\n      (field: any) => field.position === this.dialog.fieldId\n    );\n\n    // close modal\n    this.$uibModalInstance.close();\n  }\n\n  /**\n   * Add entry for radio button / dropdown select.\n   * @memberof ModalFieldController\n   * @function addEntry\n   */\n  public addEntry() {\n    this.modalData.values.push(['', '']);\n  }\n\n  /**\n   * Remove entry for radio button / dropdown select\n   * @memberof ModalFieldController\n   * @function removeEntry\n   * @param entry to remove from array\n   */\n  public removeEntry(entry: any) {\n    _.pull(this.modalData.values, entry);\n  }\n\n  /**\n   * Finds entries for the selected category.\n   * @memberof ModalController\n   * @function currentCategoryEntries\n   */\n  public currentCategoryEntries() {\n    if (ng.isDefined(this.categories)) {\n      return _.find(\n        this.categories.resources,\n        'id',\n        Number(this.modalData.options.category_id)\n      );\n    }\n  }\n}\n\nexport default class ModalService {\n  /** @ngInject */\n  constructor(private $uibModal: any) {\n  }\n\n  /**\n   * Show modal of the element.\n   * @memberof ModalService\n   * @function showModal\n   * @param {number} index of tab, where the box is placed\n   * @param {number} index of box, where the field is placed\n   * @param {number} index of field\n   */\n  public showModal(tab: number, box: number, field: number) {\n    let modalOptions = {\n      template: require('./modal.html'),\n      controller: ModalController,\n      controllerAs: 'vm',\n      size: 'lg',\n      resolve: {\n        dialogDetails: () => {\n          return {tabId: tab, boxId: box, fieldId: field};\n        },\n      },\n    };\n    let modal = this.$uibModal.open(modalOptions);\n\n    return modal.result.catch(() => undefined);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/dialog-editor/services/modal/modalService.ts","import {IDataTableBinding} from '../../interfaces/dataTable';\nimport {DataViewClass} from '../../interfaces/abstractDataViewClass';\nimport * as _ from 'lodash';\n\n/**\n * This controller is for managing data table entities. It extends {@link miqStaticAssets.gtl.DataViewClass}\n * which is abstract class with basic methods for filtering, sorting and limiting entries in data table.\n * @extends miqStaticAssets.gtl.DataViewClass\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name DataTableController\n */\nexport class DataTableController extends DataViewClass implements IDataTableBinding {\n  public currentPageView: number;\n\n  /**\n   * This method will check if user wants to go to non existent page and will validate it.\n   * @memberof DataTableController\n   * @function setTablePage\n   * @param pageNumber {Number} desired page.\n   */\n  public setTablePage(pageNumber) {\n    pageNumber = Number(pageNumber);\n    if (_.isNaN(pageNumber)) {\n      this.currentPageView = this.settings.current;\n      pageNumber = this.currentPageView;\n    } else {\n      if (pageNumber <= 0) {\n        this.currentPageView = 1;\n        pageNumber = 1;\n      }\n      this.setPage(pageNumber);\n    }\n  }\n\n  /**\n   * Public method for getting column class, narrow column with checkbox or image.\n   * @memberof DataTableController\n   * @function getColumnClass\n   * @param column {Object} header column. This column will have `is_narrow` property set to true and `narrow` class\n   * will be present in classes.\n   * @returns {Object} angular class object. `{narrow: boolean}`\n   */\n  public getColumnClass(column: any) {\n    return {\n      narrow: column.is_narrow,\n      'table-view-pf-select': column.is_narrow\n    };\n  }\n\n  /**\n   * Public method for checking if column of table is icon or image.\n   * @memberof DataTableController\n   * @function isIconOrImage\n   * @param row {object} whole row with data.\n   * @param columnKey header column key.\n   * @returns {boolean} true | false, if column is image or icon.\n   */\n  public isIconOrImage(row, columnKey): boolean {\n    return row && row.cells &&\n      (row.cells[columnKey].hasOwnProperty('icon') || row.cells[columnKey].hasOwnProperty('image'));\n  }\n\n  /**\n   * Public method for finding out if it's filtered by header column.\n   * @memberof DataTableController\n   * @function isFilteredBy\n   * @param column column which is checked if it's filtered by.\n   * @returns {boolean} true | false if `this.settings.sortBy.sortObject.col_idx` is equal to `column.col_idx`.\n   */\n  public isFilteredBy(column: any) {\n    return !!this.settings.sortBy && (this.settings.sortBy.sortObject.col_idx === column.col_idx);\n  }\n\n  /**\n   * Public method for getting sort class, either `fa-sort-asc` or `fa-sort-desc`.\n   * @memberof DataTableController\n   * @function getSortClass\n   * @returns {Object} angular class object: `{fa-sort-asc: boolean, fa-sort-desc: boolean}`\n   */\n  public getSortClass() {\n    return {\n      'fa-sort-asc': !!this.settings.sortBy && this.settings.sortBy.isAscending,\n      'fa-sort-desc': !(!!this.settings.sortBy && this.settings.sortBy.isAscending)\n    };\n  }\n\n  /**\n   * Angular's $onchange function to find out if one of bounded option has changed.\n   * @memberof DataTableController\n   * @function $onChanges\n   * @param changesObj angular changed object.\n   */\n  public $onChanges(changesObj: any) {\n    if (changesObj.settings && this.settings) {\n      this.currentPageView = this.settings.current;\n    }\n\n    if (changesObj.perPage) {\n      this.perPage.text += ' ' + this.perPage.labelItems;\n      this.perPage.items = this.perPage.items.map(oneItem => {\n        oneItem.text += ' ' + this.perPage.labelItems;\n        return oneItem;\n      });\n    }\n\n    this.setPagingNumbers();\n  }\n}\n\n/**\n * @description\n *    Component for data table.\n * @memberof miqStaticAssets.gtl\n * @ngdoc component\n * @name miqDataTable\n * @attr {Object} rows\n *    Array of rows which will be displayed.\n * @attr {Object} perPage\n *    Object which will be displayed as dropdown picker to filter number of rows.\n * @attr {Object} columns\n *    Columns which will be displayed as header in table.\n * @attr {Object} settings\n *    Table settings look at {@see ITableSettings} for more information.\n * @attr {Expression} loadMoreItems\n *    Function which will be called upon loading more items. Function call has to have `start`, `perPage` params.\n * @attr {Expression} onSort\n *    Function to triggering sorting items. Function call has to have `headerId`, `isAscending` params.\n * @attr {Expression} onRowClick\n *    Function which will be executed when click on row event is fired. Function call has to have `item` param.\n * @attr {Expression} onItemSelected\n *    Function to be called on selecting item (trough selectbox next to each row). Function call has to have `item`,\n *    `isSelected` params.\n * @example\n * <miq-data-table rows=\"ctrl.rows\"\n *                 columns=\"ctrl.columns\"\n *                 per-page=\"ctrl.perPage\"\n *                 settings=\"ctrl.settings\"\n *                 load-more-items=\"ctrl.onLoadMoreItems(start, perPage)\"\n *                 on-sort=\"ctrl.onSort(headerId, isAscending)\"\n *                 on-row-click=\"ctrl.onRowClick(item)\"\n *                 on-item-selected=\"ctrl.onItemSelect(item, isSelected)\">\n * </miq-data-table>\n */\nexport default class DataTable {\n  public replace: boolean = true;\n  public template = require('./data-table.html');\n  public controller: any = DataTableController;\n  public transclude: boolean = true;\n  public controllerAs: string = 'tableCtrl';\n  public bindings: any = {\n    rows: '<',\n    columns: '<',\n    perPage: '<',\n    settings: '<',\n    loadMoreItems: '&',\n    onSort: '&',\n    onRowClick: '&',\n    onItemSelected: '&'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/components/data-table/dataTableComponent.ts","import dataTable from './data-table';\nimport tiles from './tile-view';\n\nexport default (module: ng.IModule) => {\n  dataTable(module);\n  tiles(module);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/components/index.ts","import TileView from './tileViewComponent';\nimport Paging from './pagingComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('miqTileView', new TileView);\n  module.component('miqPaging', new Paging);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/components/tile-view/index.ts","import * as _ from 'lodash';\n\n/**\n * Controller for paging component\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name PagingController\n */\nexport class PagingController {\n  public settings: any;\n  public pages: any;\n  public onChangePage: (args: {pageNumber: any}) => void;\n  private MAX_PAGES = 6;\n\n  /**\n   * Public method for updating current paging, it will limit number of visible pages to `MAX_PAGES`.\n   * @memberof PagingController\n   * @function updatePages\n   * @param total number of all item's pages.\n   * @returns {any} array with page numbers which will be visible.\n   */\n  public updatePages(total) {\n    if (total > this.MAX_PAGES) {\n      let currentPage =\n        (this.settings.current < (this.settings.total - this.MAX_PAGES + 1)) ?\n          this.settings.current :\n          (this.settings.total - this.MAX_PAGES + 1);\n      this.pages = _.times(this.MAX_PAGES, item => (currentPage + item) - 1);\n    } else {\n      this.pages = new Array(total);\n      _.each(this.pages, (item, key) => {\n        this.pages[key] = key;\n      });\n    }\n    return this.pages;\n  }\n}\n\n/**\n * @description\n *    Component for show paging for some long list (e.g. these are used in tile lists).\n *    Settings object example:\n *    ```javascript\n *    {\n *      current: 1,\n *      total: 5\n *    }\n *    ```\n * @memberof miqStaticAssets.gtl\n * @ngdoc component\n * @name miqPaging\n * @attr {Object} settings\n *    settings for paging component. It has `current` attribute `Number` and total `Number`\n *\n * @attr {Expression} onChangePage\n *    object which is currently sorted by.\n * @example\n * <miq-paging settings=\"settings\"\n *             on-change-page=\"setPage(pageNumber)\">\n * </miq-paging>\n */\nexport default class Paging implements ng.IComponentOptions {\n  public replace = true;\n  public controller = PagingController;\n  public template = require('./paging.html');\n  public controllerAs = 'pagingCtrl';\n  public bindings: any = {\n    settings: '<',\n    onChangePage: '&'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/components/tile-view/pagingComponent.ts","import {TileType} from '../../interfaces/tileType';\nimport {IDataTableBinding} from '../../interfaces/dataTable';\nimport {DataViewClass} from '../../interfaces/abstractDataViewClass';\nimport * as _ from 'lodash';\n\n/**\n * Controller for tile components. It extends {@link miqStaticAssets.gtl.DataViewClass}.\n * @memberof miqStaticAssets.gtl\n * @ngdoc controller\n * @name TileViewController\n */\nexport class TileViewController extends DataViewClass implements IDataTableBinding {\n  public type: string;\n  public options: any;\n  /* @ngInject */\n  constructor(private $sce: any, MiQTranslateService: any) {\n    super(MiQTranslateService);\n    this.initOptions();\n  }\n\n  /**\n   * Method for creating basic options for tiles.\n   * @memberof TileViewController\n   * @function initOptions\n   */\n  private initOptions(): void {\n    this.options = {\n      selectionMatchProp: 'id',\n      selectItems: false,\n      multiSelect: true,\n      showSelectBox: true,\n      selectedItems: this.filterSelected(),\n      onClick: (item, event) => this.onTileClick(item),\n      onCheckBoxChange: (item) => this.onTileSelect(item),\n      onItemClick: (item: any, $event: any) => this.onRowClick({item: item, event: $event}),\n      onButtonItemClick: (item: any) => this.onItemButtonClick(item),\n      fetchTileName: (item) => this.fetchTileName(item),\n      trustAsHtmlQuadicon: (item) => this.trustAsHtmlQuadicon(item),\n      type: this.type\n    };\n  }\n\n  /**\n   * Method for enabling quadicons html to be displayed inside tile.\n   * @memberof TileViewController\n   * @function trustAsHtmlQuadicon\n   * @param item item with quadicon.\n   * @returns {any} trusted html object, which cn be used as `bind-html`.\n   */\n  public trustAsHtmlQuadicon(item) {\n    return this.$sce.trustAsHtml(item.quadicon);\n  }\n\n  /**\n   * Method for fetching name of item, it will try to guess which column should be showed as name of tile, usually it's\n   * column with Name in them.\n   * @memberof TileViewController\n   * @function fetchTileName\n   * @param item which will be displayed in tile. If no column with name is not present third cell text will be used.\n   * @returns {string} text which will be displayed as tile header.\n   */\n  public fetchTileName(item): string {\n    const nameIndex = _.findIndex(this.columns, oneColumn => oneColumn.text && oneColumn.text.indexOf('Name') !== -1);\n    return (nameIndex !== -1 && item.cells && item.cells[nameIndex]) ?\n      item.cells[nameIndex]['text'] :\n      item.cells[2]['text'];\n  }\n\n  /**\n   * Angular's method for fetching change events.\n   * @memberof TileViewController\n   * @function $onChanges\n   * @param changesObj angular's change object.\n   */\n  public $onChanges(changesObj: any) {\n    if (changesObj.type) {\n      this.options.type = this.type;\n    } else if (changesObj.columns) {\n      this.options.columns = this.columns;\n    }\n\n    if (changesObj.perPage) {\n      this.perPage.text += ' ' + this.perPage.labelItems;\n      this.perPage.items = this.perPage.items.map(oneItem => {\n        oneItem.text += ' ' + this.perPage.labelItems;\n        return oneItem;\n      });\n    }\n\n    if (changesObj.settings) {\n      this.options.showSelectBox = !this.settings.hideSelect;\n    }\n\n    this.setPagingNumbers();\n  }\n\n  /**\n   * Method which will be called when clicking on tile.\n   * @memberof TileViewController\n   * @function onTileClick\n   * @param item which tile was clicked.\n   */\n  public onTileClick(item) {\n    if (!this.settings.hideSelect) {\n      this.onItemSelected({item: item, isSelected: !item.selected});\n    }\n  }\n\n  public onTileSelect(item) {\n    this.onItemSelected({item: item, isSelected: item.selected});\n  }\n\n  /**\n   * Method for checking all tiles and then filtering selected items.\n   * @memberof TileViewController\n   * @function tileClass\n   * @param isSelected true | false.\n   */\n  public onCheckAllTiles(isSelected: boolean) {\n    this.onCheckAll(isSelected);\n    this.options.selectedItems = this.filterSelected();\n  }\n\n  /**\n   * Method for filtering selected tiles based on checked property.\n   * @memberof TileViewController\n   * @function tileClass\n   * @returns filtered array of checked items.\n   */\n  public filterSelected() {\n    return _.filter(this.rows, {checked: true});\n  }\n\n  /**\n   * Angular's method for getting tile's class based on it's type.\n   * @memberof TileViewController\n   * @function tileClass\n   * @returns {Object} it will return angular class object: `{miq-small-tile: boolean, miq-tile-with-body: boolean}`\n   */\n  public tileClass() {\n    return {\n      'miq-small-tile': this.type === TileType.SMALL,\n      'miq-tile-with-body': this.type === TileType.BIG\n    };\n  }\n}\n\n/**\n * @description\n *    Component for tile list. This component requires pf-tile to be part of angular's components. For patternfly's\n *    implementation look at\n *    <a href=\"http://angular-patternfly.rhcloud.com/#/api/patternfly.views.directive:pfCardView\">pfCardView</a>\n * @memberof miqStaticAssets.gtl\n * @ngdoc component\n * @name miqTileView\n * @attr {Object} type\n *    Type of tile look at {@see miqStaticAssets.gtl.TileType}\n * @attr {Object} rows\n *    Array of rows which will be displayed.\n * @attr {Object} perPage\n *    Object which will be displayed as dropdown picker to filter number of tiles.\n * @attr {Object} columns\n *    Columns which will be displayed as header in tile.\n * @attr {Object} settings\n *    Tile settings look at {@see ITableSettings} for more information.\n * @attr {Expression} loadMoreItems\n *    Function which will be called upon loading more items. Function call has to have `start`, `perPage` params.\n * @attr {Expression} onSort\n *    Function to triggering sorting items. Function call has to have `headerId`, `isAscending` params.\n * @attr {Expression} onRowClick\n *    Function which will be executed when click on tile event is fired. Function call has to have `item` param.\n * @attr {Expression} onItemSelected\n *    Function to be called on selecting item (trough clicking on tile). Function call has to have `item`, `isSelected`\n *    params.\n * @example\n * <miq-tile-view type=\"ctrl.type\"\n *                rows=\"ctrl.rows\"\n *                columns=\"ctrl.columns\"\n *                per-page=\"ctrl.perPage\"\n *                settings=\"ctrl.settings\"\n *                load-more-items=\"ctrl.onLoadMoreItems(start, perPage)\"\n *                on-sort=\"ctrl.onSort(headerId, isAscending)\"\n *                on-row-click=\"ctrl.onRowClick(item)\"\n *                on-item-selected=\"ctrl.onItemSelect(item, isSelected)>\n * </miq-tile-view>\n */\nexport default class TileView implements ng.IComponentOptions {\n  public replace = true;\n  public controller = TileViewController;\n  public template = require('./tile-view.html');\n  public controllerAs = 'tileCtrl';\n  public bindings: any = {\n    type: '<',\n    rows: '<',\n    columns: '<',\n    perPage: '<',\n    settings: '<',\n    loadMoreItems: '&',\n    onSort: '&',\n    onRowClick: '&',\n    onItemSelected: '&'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/components/tile-view/tileViewComponent.ts","import LimitToSuffix from './limitToSuffixFilter';\n\nexport default (module: ng.IModule) => {\n  module.filter('limitToSuffix', LimitToSuffix.filter);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/filters/index.ts","export default class LimitToSuffix {\n  public static filter() {\n    return (value, start, end) => {\n      return value.length > start + end + 3 ? `${value.slice(0, start)}...${value.slice(-end)}` : value;\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/filters/limitToSuffixFilter.ts","/**\n * Enum for tile types. It holds string value of types for tiles.\n * @memberof miqStaticAssets.gtl\n * @ngdoc enum\n * @name TileType\n */\nexport const TileType  = {\n  /**\n   * Tile type: `small`\n   * @type {string}\n   */\n  SMALL : 'small',\n  /**\n   * Tile type: `big`\n   * @type {string}\n   */\n  BIG : 'big'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/interfaces/tileType.ts","import {IDataTableService, IRowsColsResponse} from '../interfaces/dataTable';\nimport * as _ from 'lodash';\n\n/**\n * @memberof miqStaticAssets.gtl\n * @ngdoc service\n * @name DataTableService\n * @param $http {ng.IHttpService} http service for fetching rows and columns of data table.\n * @param MiQEndpointsService {Object} service which holds endpoints to each data store.\n */\nexport default class DataTableService implements IDataTableService {\n  private columns: any[];\n  private rows: any[];\n  private settings: any;\n  /*@ngInject*/\n  constructor(private $http: ng.IHttpService, private MiQEndpointsService: any) {}\n\n  /**\n   * Public method for fetching data from url combined from `MiQEndpointsService.rootPoint` and\n   * `MiQEndpointsService.endpoints.listDataTable`. Result will be promise with type `IRowsColsResponse`. Which is\n   * ```javascript\n   * interface IRowsColsResponse {\n   *  rows: any[];\n   *  cols: any[];\n   *  settings: ITableSettings;\n   * }\n   * ```\n   * @methodOf miqStaticAssets.gtl\n   * @memberof DataTableService\n   * @function retrieveRowsAndColumnsFromUrl\n   * @returns {ng.IPromise<IRowsColsResponse>} promise with type `IRowsColsResponse`.\n   */\n  public retrieveRowsAndColumnsFromUrl(modelName?: string,\n                                       activeTree?: string,\n                                       currId?: string,\n                                       isExplorer?: string,\n                                       settings?: any,\n                                       records?: any): ng.IPromise<IRowsColsResponse> {\n    return this.fetchData(DataTableService.generateConfig(modelName, activeTree, currId, isExplorer, settings, records))\n      .then(responseData => {\n        this.columns = responseData.data.data.head;\n        this.rows = responseData.data.data.rows;\n        this.settings = responseData.data.settings;\n        return {\n          cols: this.columns,\n          rows: this.rows,\n          messages: responseData.data.messages,\n          settings: responseData.data.settings\n        };\n      }\n    );\n  }\n\n  /**\n   * Method which will do actual http get request using $http service.\n   * @param config which contains config params.\n   * @returns {IHttpPromise<any>} promise for later data filtering.\n   */\n  private fetchData(config: any): ng.IPromise<any> {\n    return this.$http.get(\n      this.MiQEndpointsService.rootPoint + this.MiQEndpointsService.endpoints.listDataTable,\n      config\n    );\n  }\n\n  /**\n   * Static function which will generate http get config from given variables.\n   * @param modelName string with name of model.\n   * @param activeTree string with active tree.\n   * @param currId ID of current item.\n   * @param isExplorer\n   * @param settings\n   * @param records\n   * @returns {{params: {}}} config object with params set.\n   */\n  public static generateConfig(modelName?: string,\n                               activeTree?: string,\n                               currId?: string,\n                               isExplorer?: string,\n                               settings?: any,\n                               records?: any) {\n    let config = {params: {}};\n    _.assign(config.params, DataTableService.generateModelConfig(modelName));\n    _.assign(config.params, DataTableService.generateActiveTreeConfig(activeTree));\n    _.assign(config.params, DataTableService.generateModuleIdConfig(currId));\n    _.assign(config.params, DataTableService.generateExplorerConfig(isExplorer));\n    _.assign(config.params, DataTableService.generateParamsFromSettings(settings));\n    _.assign(config.params, DataTableService.generateRecords(records));\n    return config;\n  }\n\n  /**\n   * Static function for generating model object, this object will be assigned to `config.params`.\n   * @param modelName name of currently selected model.\n   * @returns {any|{model: any}} object if any model is selected.\n   */\n  private static generateModelConfig(modelName): any {\n    return modelName && {model: modelName};\n  }\n\n  /**\n   * Static function for generating active tree object, this object will be assigned to `config.params`.\n   * @param activeTree name of currently selected tree.\n   * @returns {any|{active_tree: any}} object if any tree is selected.\n   */\n  private static generateActiveTreeConfig(activeTree): any {\n    return activeTree && {active_tree: activeTree};\n  }\n\n  /**\n   * Static function for generating module id object, this object will be assigned to `config.params`.\n   * @param currId currently selected module's ID.\n   * @returns {any|{model_id: any}} object if any module ID is present.\n   */\n  private static generateModuleIdConfig(currId): any {\n    return currId && currId !== null && {model_id: currId};\n  }\n\n  /**\n   *\n   * @param isExplorer\n   * @returns {any|boolean|{explorer: any}}\n   */\n  private static generateExplorerConfig(isExplorer): any {\n    return isExplorer && isExplorer !== null && {explorer: isExplorer};\n  }\n\n  private static generateParamsFromSettings(settings): any {\n    let params = {};\n    if (settings) {\n      _.assign(params, settings.current && {page: settings.current});\n      _.assign(params, settings.perpage && {ppsetting: settings.perpage});\n      _.assign(params, settings.sortBy && settings.sortBy.sortObject && {sort_choice: settings.sortBy.sortObject.text});\n      _.assign(params, settings.sortBy && settings.sortBy.isAscending && {is_ascending: settings.sortBy.isAscending});\n    }\n    return params;\n  }\n\n  private static generateRecords(records) {\n    return records && records !== null && {'records[]': records};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/services/dataTableService.ts","import DataTableService from './dataTableService';\n\nexport default (module: ng.IModule) => {\n  module.service('MiQDataTableService', DataTableService);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/gtl/services/index.ts","/**\n * @interface\n */\nexport interface ISite {\n  url: string;\n  title: string;\n  tooltip?: string;\n  iconClass: any;\n}\n\n/**\n * Controller for site switcher component\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name SiteSwitcherController\n */\nexport class SiteSwitcherController {\n}\n\n/**\n * @description\n *    Component for showing a site switcher drop down for moving between different UI's.\n *    Settings object example:\n *    ```javascript\n *    {\n *      sites: [{\n *        title: 'Launch Operations UI',\n *        tooltip: 'Launch Operations UI',\n *        iconClass: 'fa-cogs',\n *        url: 'http://www.manageiq.com'\n *      }, {\n *        title: 'Launch Service UI',\n *        tooltip: 'Launch Service UI',\n *        iconClass: 'fa-cog',\n *        url: 'http://www.manageiq.com'\n *      }, {\n *        title: 'Home',\n *        tooltip: 'Home',\n *        iconClass: 'fa-home',\n *        url: 'http://www.manageiq.com'\n *      }]\n *    }\n *    ```\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqSiteSwitcher\n * @attr {Array} sites\n *     An array of sites to display in the switcher (includes url, iconClass, tooltip and title).\n *     Since we use typescript this attribute has specific type of: `Array<ISite>`\n *\n * @example\n * <miq-site-switcher sites=\"sites\">\n * </miq-site-switcher>\n */\nexport default class SiteSwitcher implements ng.IComponentOptions {\n  public controller = SiteSwitcherController;\n  public template = require('./site-switcher.html');\n  public controllerAs = 'ctrl';\n  public bindings: any = {\n    sites: '<'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/site-switcher/siteSwitcherComponent.ts","import toolbarMenu from './toolbar-menu';\nimport * as ng from 'angular';\n\nexport default (module: ng.IModule) => {\n  toolbarMenu(module);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/components/index.ts","import Toolbar from './toolbarComponent';\nimport ToolbarButton from './toolbarButtonDirective';\nimport ToolbarList from './toolbarListComponent';\nimport ToolbarView from './toolbarViewComponent';\n\nexport default (module: ng.IModule) => {\n  module.component('miqToolbarMenu', new Toolbar);\n  module.component('miqToolbarList', new ToolbarList);\n  module.component('miqToolbarView', new ToolbarView);\n  module.directive('miqToolbarButton', ToolbarButton.Factory());\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/components/toolbar-menu/index.ts","import * as ng from 'angular';\n/**\n * @memberof miqStaticAssets\n * @ngdoc directive\n * @name miqToolbarButton\n * @description\n *    Directive withou controller. It will create new toolbar button in toolbar.\n *\n * @attr {Expression} onItemClick\n *    Method for handling clicking on this button (will be called with `{item: item}` object).\n * @attr {IToolbarItem} toolbarButton\n *    Toolbar item based on which will be this button generated.\n * @example\n * <miq-toolbar-button toolbar-button=\"toolbarButton\"\n *                   on-item-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-button>\n */\nexport default class ToolbarButton implements ng.IDirective {\n  public replace: boolean = true;\n  public template = require('./toolbar-button.html');\n  public scope: any = {\n    toolbarButton: '<',\n    onItemClick: '&'\n  };\n\n  public static Factory = () => {\n    let directive: ng.IDirectiveFactory = () => new ToolbarButton();\n    directive.$inject = [];\n    return directive;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/components/toolbar-menu/toolbarButtonDirective.ts","import {IToolbarItem} from '../../interfaces/toolbar';\nimport {ToolbarType} from '../../interfaces/toolbarType';\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolbarController\n * @param $window {ng.IWindowService} window service for redirecting to non angular pages.\n * @param $location {ng.ILocationService} location service to handle redirect to different angular pages.\n * @param $sce {ng.ISCEService} service for enabling html strings to be html objects injected to page as html and not as\n * string.\n */\nexport class ToolbarController {\n  public toolbarItems: any;\n  public toolbarViews: any;\n  public onViewClick: (args: {item: any, $event: any}) => void;\n  /*@ngInject*/\n  constructor(private $window: ng.IWindowService,\n              private $location: ng.ILocationService,\n              private $sce: ng.ISCEService) {\n  }\n\n  /**\n   * Handle clicking on item in toolbar.\n   * Check what function has item for handling click action it's one of [actionUrl, redirectUrl, actionFunction,\n   * eventFunction].\n   *    * actionUrl      - will perform location path change.\n   *    * redirectUrl    - will perform window redirect.\n   *    * actionFunction - will perform call without any arguments.\n   *    * eventFunction  - will perform call to this function with $event specified.\n   * @memberof ToolbarController\n   * @function onItemClick\n   * @param {Object} item what was clicked in toolbar (member of toolbar items).\n   * @param {Object} $event for passing it to eventFunction of item (good for checking target).\n   */\n  public onItemClick(item: any, $event: any) {\n    if (item.hasOwnProperty('actionUrl')) {\n      this.$location.path(item.actionUrl);\n    } else if (item.hasOwnProperty('redirectUrl')) {\n      this.$window.location.replace(item.redirectUrl);\n    } else if (item.hasOwnProperty('actionFunction')) {\n      item.actionFunction();\n    } else if (item.hasOwnProperty('eventFunction')) {\n      item.eventFunction($event);\n    }\n  }\n\n  /**\n   * Filter out items which does not have buttons, select or custom html in them and check if array is not empty. If\n   * this array would be empty there is no content which could be shown in toolbar group.\n   *    * see {@link miqStaticAssets.ToolbarController#isButtonOrSelect} on how it is checked button or select item.\n   *    * see {@link miqStaticAssets.ToolbarController#isCustom} on how it is checked custom html item.\n   * @memberof ToolbarController\n   * @function hasContent\n   * @param {Array<IToolbarItem>} toolbarItem array of items which are checked for content.\n   * @returns {boolean} true|false isEmpty or not.\n   */\n  public hasContent(toolbarItem: Array<IToolbarItem>): boolean {\n    return toolbarItem && toolbarItem.filter((item) => {\n        return item && (ToolbarController.isButtonOrSelect(item) || ToolbarController.isCustom(item));\n      }).length !== 0;\n  }\n\n  /**\n   * Escape html custom data and make them available for html insertion to toolbar.\n   * @memberof ToolbarController\n   * @function hasContent\n   * @param escapedString html string without escaped items.\n   * @returns {any} html object, this object can be bound to see\n   * {@link https://docs.angularjs.org/api/ng/directive/ngBindHtml}\n   */\n  public trustAsHtml(escapedString: string): any {\n    escapedString = ToolbarController.htmlDecode(escapedString);\n    return this.$sce.trustAsHtml(escapedString);\n  }\n\n  /**\n   * Helper method for getting string value of {@link ToolbarType.BUTTON_SELECT}\n   * @memberof ToolbarController\n   * @function getToolbarListType\n   * @returns {string}\n   */\n  public getToolbarListType(): string {\n    return ToolbarType.BUTTON_SELECT;\n  }\n\n  /**\n   * Helper method for getting string value of {@link ToolbarType.BUTTON}\n   * @memberof ToolbarController\n   * @function getToolbarListType\n   * @returns {string}\n   */\n  public getButtonType(): string {\n    return ToolbarType.BUTTON;\n  }\n\n  /**\n   * Helper method for getting string value of {@link ToolbarType.CUSTOM}\n   * @memberof ToolbarController\n   * @function getToolbarListType\n   * @returns {string}\n   */\n  public getCustomType(): string {\n    return ToolbarType.CUSTOM;\n  }\n\n  public getButtonTwoState() {\n    return ToolbarType.BUTTON_TWO_STATE;\n  }\n\n  /**\n   * Private static function for decoding html.\n   * @memberof ToolbarController\n   * @function htmlDecode\n   * @param input html string containing custom html.\n   * @returns {string} unescaped html string.\n   */\n  public static htmlDecode(input: string): string {\n    let e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n\n  /**\n   * Private static function for checking if toolbar item has name and if this name is `\"custom\"`.\n   * @memberof ToolbarController\n   * @function hasContent\n   * @param {IToolbarItem} item which is checked for name property.\n   * @returns {boolean} true|false if it's item with custom html.\n   */\n  private static isCustom(item: IToolbarItem): boolean {\n    return item.name && item.name === ToolbarType.CUSTOM;\n  }\n\n  /**\n   * Private static function for checking if toolbar item type and if this type is button or select.\n   *    * see {@link miqStaticAssets.ToolbarController#isButtonSelect} on how it's checked for select type.\n   *    * see {@link miqStaticAssets.ToolbarController#isButton} on how it's checked for button type.\n   * @memberof ToolbarController\n   * @function isButtonOrSelect\n   * @param {IToolbarItem} item which is checked for type property.\n   * @returns {boolean} true|false if it's item with button or button select type.\n   */\n  private static isButtonOrSelect(item: IToolbarItem): boolean {\n    return item.type && (\n        (ToolbarController.isButtonSelect(item) && item.items && item.items.length !== 0)\n        || ToolbarController.isButton(item)\n        || ToolbarController.isButtonTwoState(item)\n      );\n  }\n\n  private static isButtonTwoState(item: IToolbarItem): boolean {\n    return item.type === ToolbarType.BUTTON_TWO_STATE;\n  }\n\n  /**\n   * Private static function for checking if toolbar item type is buttonSelect.\n   * @memberof ToolbarController\n   * @function isButtonSelect\n   * @param {IToolbarItem} item item which is checked for type property.\n   * @returns {boolean} true|false if it's item with type equals to `\"buttonSelect\"`.\n   */\n  private static isButtonSelect(item: IToolbarItem): boolean {\n    return item.type === ToolbarType.BUTTON_SELECT;\n  }\n\n  /**\n   * Private static function for checking if toolbar item type is button.\n   * @memberof ToolbarController\n   * @function isButton\n   * @param {IToolbarItem} item item which is checked for type property.\n   * @returns {boolean} true|false if it's item with type equals to `\"button\"`.\n   */\n  private static isButton(item): boolean {\n    return item.type === ToolbarType.BUTTON;\n  }\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqToolbarMenu\n * @description\n *    This component is for whole toolbar implementation. It's advantages are, that it takes custom components as well\n *    so they can be used instead of just plain JS objects (pass html inside toolbarItems attribute).\n *    See {@link miqStaticAssets.ToolbarController} for implementation of all methods and behavior of this component.\n *    Attribute toolbarItems for custom html needs to have set `args.html`:\n *    ```JSON\n *    [[\n *      {\"name\" : \"custom\",\n *      \"args\" : {\n *        ...\n *        \"html\" : \"<div>html string, this string will be generated as part of form group</div>\"\n *        ...\n *      }}\n *    ]]\n *    ```\n *    How each button is treated see {@link miqStaticAssets.ToolbarController#hasContent} and observe each static\n *    function which\n *    is responsible for deciding what type of button will be used.\n *\n * @attr {Expression} onViewClick\n *    Method which will be executed when clicked on view. See {@link miqStaticAssets.ToolbarController#onViewClick}\n *    which arguments are\n *    needed.\n * @attr {Array} toolbarViews\n *    List of all views which are used in toolbar. Since we use typescript this attribute has specific type of:\n *    `Array<IToolbarItem>` See {@link IToolbarItem} for entities of toolbarViews.\n * @attr {Array} toolbarItems\n *    List of all items which are used in toolbar. Since we use typescript this attribute has specific type of:\n *    `Array<Array<IToolbarItem>>` See {@link IToolbarItem} for entities of toolbarItems.\n * @example\n * <miq-toolbar-menu toolbar-views=\"ctrl.toolbarViews\"\n *                   toolbar-items=\"ctrl.toolbarItems\"\n *                   on-view-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-menu>\n */\nexport default class Toolbar {\n  public replace: boolean = true;\n  public template = require('./toolbar-menu.html');\n  public controller: any = ToolbarController;\n  public controllerAs: string = 'vm';\n  public bindings: any = {\n    toolbarViews: '<',\n    toolbarItems: '<',\n    onViewClick: '&'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/components/toolbar-menu/toolbarComponent.ts","import {IToolbarItem} from '../../interfaces/toolbar';\n/**\n * Asf\n *\n * @interface\n */\nexport interface IToolbarListBindings {\n  toolbarList: any;\n  dropDownClass: any[];\n  onItemClick: (args: {item: any}) => void;\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolbarListController\n * @implements {IToolbarListBindings}\n */\nexport class ToolbarListController implements IToolbarListBindings {\n  public toolbarList: IToolbarItem;\n  public isEmpty: boolean = false;\n  public dropDownClass: any[];\n\n  /**\n   * Method for handling clicking on toolbar list's item.\n   * @memberof ToolbarListController\n   * @function onItemClick\n   * @param {Object} {item: Object} object with item property set to which item was clicked.\n   */\n  public onItemClick: (args: {item: any, $event: any}) => void;\n\n  /**\n   * Angular's function to observe on changes.\n   * @memberof ToolbarListController\n   * @function isToolbarEmpty\n   * @param changesObj changed object.\n   */\n  public $onChanges(changesObj: any) {\n    if (changesObj.toolbarList) {\n      this.isEmpty = this.isToolbarEmpty();\n    }\n  }\n\n  /**\n   * Method which filters out\n   * @memberof ToolbarListController\n   * @function isToolbarEmpty\n   * @returns {boolean}\n   */\n  private isToolbarEmpty(): boolean {\n    return this.toolbarList &&\n      this.toolbarList.items &&\n      this.toolbarList.items.filter((item: IToolbarItem) => !item.hidden).length > 0;\n  }\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqToolbarList\n * @description\n *    Component which will generate list in toolbar with toolbarItems as dropdown menu.\n *\n * @attr {Expression} onItemClick\n *    Method which will be executed when clicked on view. See\n *    {@link miqStaticAssets.ToolbarListController#onItemClick} which arguments are\n *    needed.\n * @attr {Array} toolbarItems\n *    List of all items which are used in toolbar. Since we use typescript this attribute has specific type of:\n *    `Array<Array<IToolbarItem>>` See {@link IToolbarItem} for entities of toolbarItems.\n * @example\n * <miq-toolbar-list toolbar-list=\"ctrl.toolbarItems\"\n *                   on-item-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-list>\n */\nexport default class ToolbarList {\n  public replace: boolean = true;\n  public template = require('./toolbar-list.html');\n  public controller: any = ToolbarListController;\n  public controllerAs: string = 'vm';\n  public bindings: any = {\n    toolbarList: '<',\n    onItemClick: '&',\n    dropDownClass: '<'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/components/toolbar-menu/toolbarListComponent.ts","/**\n * Bindings to toolbar view.\n *   * toolbarViews\n *   * onItemClick\n * @interface\n */\nexport interface IToolbarViewBindings {\n  toolbarViews: any;\n  onItemClick: (args: {item: any, $event: any}) => void;\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc controller\n * @name ToolbarViewController\n * @implements {IToolbarViewBindings}\n */\nexport class ToolbarViewController implements IToolbarViewBindings {\n  public toolbarViews: any;\n  public onItemClick: (args: {item: any}) => void;\n}\n\n/**\n * @memberof miqStaticAssets\n * @ngdoc component\n * @name miqToolbarView\n * @description\n *    Component which will generate list in toolbar with toolbarItems as dropdown menu.\n *\n * @attr {Expression} onItemClick\n *    Method which will be executed when clicked on view.\n * @attr {Array} toolbarViews\n *    List of all views which are used in toolbar.\n * @example\n * <miq-toolbar-view toolbar-views=\"ctrl.toolbarViews\"\n *                   on-item-click=\"ctrl.onClick(item)\">\n * </miq-toolbar-view>\n */\nexport default class ToolbarView {\n  public replace: boolean = false;\n  public template = require('./toolbar-view.html');\n  public controller: any = ToolbarViewController;\n  public controllerAs: string = 'vm';\n  public bindings: any = {\n    toolbarViews: '<',\n    onItemClick: '&'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/components/toolbar-menu/toolbarViewComponent.ts","import ToolbarSettingsService from './toolbarSettingsService';\nimport * as ng from 'angular';\n\nexport default (module: ng.IModule) => {\n  module.service('MiQToolbarSettingsService', ToolbarSettingsService);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/services/index.ts","import {IToolbarItem, IToolbarSettings, IRequestData} from '../interfaces/toolbar';\nimport {ToolbarType} from '../interfaces/toolbarType';\nimport * as _ from 'lodash';\nimport * as ng from 'angular';\n\nexport default class ToolbarSettingsService {\n  private countSelected: number = 0;\n  public items: Array<Array<IToolbarItem>>;\n  public dataViews: Array<IToolbarItem>;\n\n  /*@ngInject*/\n  constructor(private $http: any, private MiQEndpointsService: any) {}\n\n  /**\n   * FIXME: the method is obsolete and should be removed once setCount is being used instead\n   * @param isClicked\n   */\n  public checkboxClicked(isClicked: boolean): void {\n    isClicked ? this.countSelected++ : this.countSelected--;\n    this.updateByCount();\n  }\n\n  /**\n   * Update the selected item count, and enable/disable onwhen toolbar items\n   * @param count - the number of currently selected items\n   */\n  public setCount(count: number): void {\n    this.countSelected = count;\n    this.updateByCount();\n  }\n\n  /**\n    * Traverses through all the items and enables them by number of selected items.\n    */\n  private updateByCount(): void {\n    _.chain(this.items)\n      .flatten()\n      .filter(item => item)\n      .each((item: any) => {\n        this.enableToolbarItemByCountSelected(item);\n      })\n      .map('items')\n      .flatten()\n      .filter(item => item)\n      .each((item: any) => {\n        this.enableToolbarItemByCountSelected(item);\n      })\n      .value();\n  }\n\n  /**\n   *\n   * @param toolbarObject\n   * @returns {{items: Array<Array<IToolbarItem>>, dataViews: Array<IToolbarItem>}}\n   */\n  public generateToolbarObject(toolbarObject: Array<Array<IToolbarItem>>): IToolbarSettings {\n    this.countSelected = 0;\n    this.items = this.separateItems(toolbarObject.filter(item => !!item));\n    this.dataViews = this.filterViews();\n    return {\n      items: this.items,\n      dataViews: this.dataViews\n    };\n  }\n\n  /**\n   *\n   * @returns {ng.IPromise<IToolbarSettings>}\n   * @param getData\n   */\n  public getSettings(getData?: IRequestData): ng.IPromise<IToolbarSettings> {\n    return this.httpGet(\n      this.MiQEndpointsService.rootPoint + this.MiQEndpointsService.endpoints.toolbarSettings,\n      getData\n    ).then((items: Array<IToolbarItem>[]) => this.generateToolbarObject(items));\n  }\n\n  /**\n   * Helper method for separating items in toolbar by separators.\n   * @param toolbarItems all toolbar items.\n   * @returns {Array} of separated items.\n   */\n  private separateItems(toolbarItems: Array<Array<IToolbarItem>>): Array<Array<IToolbarItem>> {\n    let separatedArray = [];\n    toolbarItems.forEach((items: IToolbarItem[]) => {\n      let arrayIndex = separatedArray.push([]);\n      items.forEach((item: IToolbarItem) => {\n        if (item.type !== ToolbarType.SEPARATOR) {\n          separatedArray[arrayIndex - 1].push(item);\n        } else {\n          arrayIndex = separatedArray.push([]);\n        }\n      });\n    });\n    return separatedArray;\n  }\n\n  /**\n   *\n   * @returns {Array<IToolbarItem>}\n   */\n  private filterViews(): Array<IToolbarItem> {\n    return _.flatten(this.items)\n      .filter(\n        item => item && item.id && item.id.indexOf('view_') === 0\n      );\n  }\n\n  /**\n   *\n   * @param url\n   * @param dataObject\n   * @returns {ng.IPromise<Array<Array<IToolbarItem>>>}\n   */\n  private httpGet(url: string, dataObject: any): ng.IPromise<Array<Array<IToolbarItem>>> {\n    return this.$http.get(url, {params: dataObject})\n      .then(dataResponse => dataResponse.data);\n  }\n\n  /**\n   *\n   * @param toolbarItem\n   */\n  private enableToolbarItemByCountSelected(toolbarItem: IToolbarItem): void {\n    if (toolbarItem.onwhen) {\n      if (toolbarItem.onwhen.slice(-1) === '+') {\n        toolbarItem.enabled = this.countSelected >= ToolbarSettingsService.parseNumberFromWhen(toolbarItem.onwhen);\n      } else {\n        toolbarItem.enabled = this.countSelected === parseInt(toolbarItem.onwhen, 10);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param onWhen\n   * @returns {number}\n   */\n  private static parseNumberFromWhen(onWhen: string) {\n    return onWhen.indexOf('+') !== -1 ? parseInt(onWhen.slice(0, onWhen.length - 1), 10) : parseInt(onWhen, 10);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/toolbar/services/toolbarSettingsService.ts","var map = {\n\t\"./check-box.html\": 25,\n\t\"./date-time-control.html\": 26,\n\t\"./dynamic.html\": 27,\n\t\"./index\": 2,\n\t\"./index.ts\": 2,\n\t\"./modalFieldTemplateComponent\": 3,\n\t\"./modalFieldTemplateComponent.ts\": 3,\n\t\"./radio-button-drop-down-list.html\": 28,\n\t\"./tag-control.html\": 29,\n\t\"./text-area-box.html\": 30,\n\t\"./text-box.html\": 31\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 86;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dialog-editor/components/modal-field-template ^\\.\\/.*$\n// module id = 86\n// module chunks = 0"],"sourceRoot":""}